/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
import*as t from"@tensorflow/tfjs-core";import{util as e,backend as n,tidy as s,tensor1d as r,serialization as i,zeros as a,ones as o,mul as l,scalar as u,randomUniform as h,truncatedNormal as c,eye as p,linalg as d,transpose as f,dispose as g,memory as m,cast as b,env as y,nextFrame as w,add as k,div as v,keep as x,train as S,clone as N,argMax as E,reshape as I,Tensor as A,Optimizer as T,io as $,sum as C,abs as z,relu as _,clipByValue as D,leakyRelu as F,prelu as R,elu as M,greater as L,any as O,notEqual as B,zerosLike as P,greaterEqual as W,moments as U,stack as V,tensor as K,range as j,unstack as q,image as G,expandDims as H,denseBincount as J,max as Z,min as Y}from"@tensorflow/tfjs-core";function X(t,e){return e.forEach((function(e){Object.keys(e).forEach((function(n){if("default"!==n&&!(n in t)){var s=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,s.get?s:{enumerable:!0,get:function(){return e[n]}})}}))})),t}class Q extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Q.prototype)}}class tt extends Error{constructor(t){super(t),Object.setPrototypeOf(this,tt.prototype)}}class et extends Error{constructor(t){super(t),Object.setPrototypeOf(this,et.prototype)}}class nt extends Error{constructor(t){super(t),Object.setPrototypeOf(this,nt.prototype)}}class st extends Error{constructor(t){super(t),Object.setPrototypeOf(this,st.prototype)}}class rt{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const t=this.cache.keys().next().value;this.cache.delete(t)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const t=this.cache.keys().next().value;this.cache.delete(t)}this.maxEntries=t}}function it(t,e){if(Array.isArray(t)){let n=[];for(let s=0;s<e;s++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function at(t,e){if(!t)throw new st(e)}function ot(t,e){let n=0;for(const s of t)s===e&&n++;return n}function lt(t){return 1===t.length?t[0]:t}function ut(t){return Array.isArray(t)?t:[t]}function ht(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function ct(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let pt={};function dt(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function ft(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>ft(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?ft(e):t[n]=e.value)}}}function gt(t,e={},n={},s="object",r=!1){if("string"==typeof t){const r=t;let i;if(r in n)i=n[r];else if(r in pt)i=pt[r];else if(i=e[r],null==i)throw new et(`Unknown ${s}: ${t}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=t;if(null==i.className||null==i.config)throw new et(`${s}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i.className;let o,l;if(a in n?[o,l]=n[a]:a in pt?[o,l]=pt.className:a in e&&([o,l]=e[a]),null==o)throw new et(`Unknown ${s}: ${a}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(pt))t[e]=pt[e];for(const e of Object.keys(n))t[e]=n[e];i.config.customObjects=t;const e=Object.assign({},pt);for(const t of Object.keys(n))pt[t]=n[t];ft(i.config);const s=l(o,i.config,n,r);return pt=Object.assign({},e),s}{const t=Object.assign({},pt);for(const t of Object.keys(n))pt[t]=n[t];const e=new o(i.config);return pt=Object.assign({},t),e}}}function mt(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function bt(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function yt(t){if(null==t)throw new et(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function wt(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new et(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function kt(t,e,n=0,s=1/0){return at(n>=0),at(s>=n),Array.isArray(t)&&t.length>=n&&t.length<=s&&t.every((t=>typeof t===e))}function vt(t,n){Array.isArray(t)?(e.assert(t.length>0,(()=>`${n} is unexpectedly an empty array.`)),t.forEach(((t,e)=>vt(t,`element ${e+1} of ${n}`)))):e.assert(Number.isInteger(t)&&t>0,(()=>`Expected ${n} to be a positive integer, but got ${xt(t)}.`))}function xt(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>xt(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function St(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}let Nt=0;function Et(){return Nt++}const It={};function At(t=""){return t in It||(It[t]=0),It[t]+=1,t+It[t].toString()}const Tt=["channelsFirst","channelsLast"],$t=["nearest","bilinear"],Ct=["valid","same","causal"],zt=["max","avg"],_t=["sum","mul","concat","ave"],Dt=new Map;function Ft(t){wt(Tt,"DataFormat",t)}function Rt(t){wt(Ct,"PaddingMode",t)}function Mt(t){wt(zt,"PoolMode",t)}const Lt=[];function Ot(t,e){Lt.push(t);try{const t=e();return Lt.pop(),t}catch(t){throw Lt.pop(),t}}function Bt(t){if(!Ut(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Lt.length?"":Lt.join("/")+"/")+t}function Pt(t){if(!Ut(t))throw new Error("Not a valid tensor name: '"+t+"'");Dt.has(t)||Dt.set(t,0);const e=Dt.get(t);if(Dt.set(t,Dt.get(t)+1),e>0){const n=`${t}_${e}`;return Dt.set(n,1),n}return t}const Wt=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ut(t){return!!t.match(Wt)}function Vt(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let s=1;for(let r=e;r<n;++r)s*=t[r];return s}function Kt(t){if(0===t.length)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const s=t[n];s<e&&(e=s)}return e}function jt(t){if(0===t.length)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const s=t[n];s>e&&(e=s)}return e}function qt(t,e){if(e<t)throw new et(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let s=t;s<e;++s)n.push(s);return n}let Gt;function Ht(){return null==Gt&&(Gt=n().epsilon()),Gt}function Jt(e,n){return t.cast(e,n)}function Zt(e,n=-1){const s=e.shape.slice();return n<0&&(n=s.length+n+1),s.splice(n,0,1),t.reshape(e,s)}function Yt(e,n,r){return s((()=>{switch(e.rank){case 1:return t.slice1d(e,n,r);case 2:return t.slice2d(e,[n,0],[r,e.shape[1]]);case 3:return t.slice3d(e,[n,0,0],[r,e.shape[1],e.shape[2]]);case 4:return t.slice4d(e,[n,0,0,0],[r,e.shape[1],e.shape[2],e.shape[3]]);case 5:return t.slice(e,[n,0,0,0,0],[r,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return t.slice(e,[n,0,0,0,0,0],[r,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new et(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Xt(e,n,r){return s((()=>{switch(e.rank){case 1:return t.slice1d(e,n,r);case 2:return t.slice2d(e,[0,n],[e.shape[0],r]);case 3:return t.slice3d(e,[0,0,n],[e.shape[0],e.shape[1],r]);case 4:return t.slice4d(e,[0,0,0,n],[e.shape[0],e.shape[1],e.shape[2],r]);default:throw new et(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Qt(e,n,r,i){return s((()=>{switch(e.rank){case 1:return t.slice1d(e,n,r);case 2:switch(i){case 1:return Yt(e,n,r);case 2:return Xt(e,n,r);default:throw new et(`The axis is not within the rank of the tensor ${i}`)}case 3:switch(i){case 1:return Yt(e,n,r);case 2:return t.slice3d(e,[0,n,0],[e.shape[0],r,e.shape[2]]);case 3:return Xt(e,n,r);default:throw new et(`The axis is not within the rank of the tensor ${i}`)}case 4:switch(i){case 1:return Yt(e,n,r);case 2:return t.slice4d(e,[0,n,0,0],[e.shape[0],r,e.shape[2],e.shape[3]]);case 3:return t.slice4d(e,[0,0,n,0],[e.shape[0],e.shape[1],r,e.shape[3]]);case 4:return Xt(e,n,r);default:throw new et(`The axis is not within the rank of the tensor ${i}`)}default:throw new et(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function te(e,n=-1){let s;return n<0&&(s=e[0].rank,n=0!==s?s:0),n===e[0].rank&&(n=-1),t.concat(e,n)}function ee(e,n){switch(e.rank){case 1:return t.concat1d([e,n]);case 2:return t.concat2d([e,n],0);case 3:return t.concat3d([e,n],0);case 4:return t.concat4d([e,n],0);default:throw new et(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function ne(e,n){if(Array.isArray(n)||(n=[n]),e.rank!==n.length)throw new et(`The length of input n (${n.length}) does not match the number of dimensions in input x (${e.rank})`);return t.tile(e,n)}function se(e,n=0,s=1,r,i){return t.randomNormal(e,n,s,r,i)}function re(e,n,s,r){if(e.rank<2||n.rank<2)throw new nt(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${n.shape}`);if(n.rank>=3){if(e.shape.slice(-1)[0]!==n.shape.slice(-2)[0])throw new nt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${n.shape}`)}if(2===e.rank&&2===n.rank){const i=!1,a=!1;return t.fused.matMul({a:e,b:n,transposeA:i,transposeB:a,bias:r?oe(e.rank,r,"channelsLast"):null,activation:s})}{const i=e.shape.slice(),a=i.pop();e=t.reshape(e,[-1,a]);const o=n.shape.slice(),l=o.pop(),u=o.pop(),h=[...o,l],c=Array.from({length:n.rank},((t,e)=>0===e?n.rank-2:e<=n.rank-2?e-1:e));n=t.reshape(t.transpose(n,c),[u,-1]);const p=[...i,...h],d=!1,f=!1;return t.reshape(t.fused.matMul({a:e,b:n,transposeA:d,transposeB:f,bias:r?oe(e.rank,r,"channelsLast"):null,activation:s}),p)}}function ie(e,n,i){return s((()=>(n=Array.isArray(n)?r(n,"int32"):t.cast(n,"int32"),t.gather(e,n,i))))}function ae(e){return t.mul(e,e)}function oe(e,n,s){const r=n.shape;if(1!==n.rank&&n.rank!==e)throw new et(`Unexpected bias dimensions: ${n.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===s)return 1===r.length?t.reshape(n,[1,r[0],1,1,1]):t.reshape(n,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===s)return 1===r.length?t.reshape(n,[1,1,1,1,r[0]]):t.reshape(n,[1].concat(r))}else if(4===e){if("channelsFirst"===s)return 1===r.length?t.reshape(n,[1,r[0],1,1]):t.reshape(n,[1,r[2],r[0],r[1]]);if("channelsLast"===s)return 1===r.length?t.reshape(n,[1,1,1,r[0]]):t.reshape(n,[1].concat(r))}else if(3===e){if("channelsFirst"===s)return 1===r.length?t.reshape(n,[1,r[0],1]):t.reshape(n,[1,r[1],r[0]]);if("channelsLast"===s)return 1===r.length?t.reshape(n,[1,1,r[0]]):t.reshape(n,[1].concat(r))}else if(e<3)return n;throw new et(`Unsupported input rank by biasAdd: ${n.rank}`)}function le(e,n,r){return s((()=>(null==r&&(r="channelsLast"),Ft(r),t.add(e,oe(e.rank,n,r)))))}function ue(e,n,r,i){return s((()=>t.dropout(e,n,r,i)))}function he(t,e,n=!1){return n?t():e()}const ce=["fanIn","fanOut","fanAvg"],pe=["normal","uniform","truncatedNormal"];class de extends i.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class fe extends de{apply(t,e){return a(t,e)}}fe.className="Zeros",i.registerClass(fe);class ge extends de{apply(t,e){return o(t,e)}}ge.className="Ones",i.registerClass(ge);class me extends de{constructor(t){if(super(),"object"!=typeof t)throw new et(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new et(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return s((()=>l(u(this.value),o(t,e))))}getConfig(){return{value:this.value}}}me.className="Constant",i.registerClass(me);class be extends de{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return h(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}be.className="RandomUniform",i.registerClass(be);class ye extends de{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new nt(`randomNormal does not support dType ${e}.`);return se(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ye.className="RandomNormal",i.registerClass(ye);class we extends de{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new nt(`truncatedNormal does not support dType ${e}.`);return c(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}we.className="TruncatedNormal",i.registerClass(we);class ke extends de{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return s((()=>{if(2!==t.length||t[0]!==t[1])throw new et("Identity matrix initializer can only be used for 2D square matrices.");return l(this.gain,p(t[0]))}))}getConfig(){return{gain:this.gain}}}ke.className="Identity",i.registerClass(ke);class ve extends de{constructor(t){if(super(),t.scale<0)throw new et(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,wt(ce,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){wt(pe,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,s;if(Ft(e),2===t.length)n=t[0],s=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=Vt(t,2);n=t[1]*e,s=t[0]*e}else if("channelsLast"===e){const e=Vt(t,0,t.length-2);n=t[t.length-2]*e,s=t[t.length-1]*e}}else{const e=Vt(t);n=Math.sqrt(e),s=Math.sqrt(e)}return[n,s]}(t),s=n[0],r=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,s):"fanOut"===this.mode?i/=Math.max(1,r):i/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new nt(`${this.getClassName()} does not support dType ${e}.`);return c(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return h(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ve.className="VarianceScaling",i.registerClass(ve);class xe extends ve{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return ve.className}}xe.className="GlorotUniform",i.registerClass(xe);class Se extends ve{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return ve.className}}Se.className="GlorotNormal",i.registerClass(Se);class Ne extends ve{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return ve.className}}Ne.className="HeNormal",i.registerClass(Ne);class Ee extends ve{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return ve.className}}Ee.className="HeUniform",i.registerClass(Ee);class Ie extends ve{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return ve.className}}Ie.className="LeCunNormal",i.registerClass(Ie);class Ae extends ve{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return ve.className}}Ae.className="LeCunNormal",i.registerClass(Ae);class Te extends de{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new nt("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return s((()=>{if(t.length<2)throw new nt("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=se(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=d.gramSchmidt(e);return t[0]>t[1]&&(n=f(n)),l(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Te.className="Orthogonal",i.registerClass(Te);const $e={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ce(t,e={}){return gt(t,i.SerializationMap.getMap().classNameMap,e,"initializer")}function ze(t){return dt(t)}function _e(t){if("string"==typeof t){const e=t in $e?$e[t]:t;if("GlorotNormal"===e)return new Se;if("GlorotUniform"===e)return new xe;if("HeNormal"===e)return new Ne;if("HeUniform"===e)return new Ee;if("LeCunNormal"===e)return new Ie;if("LeCunUniform"===e)return new Ae;{const t={};return t.className=e,t.config={},Ce(t)}}return t instanceof de?t:Ce(t)}function De(t){return Array.isArray(t)&&Array.isArray(t[0])}function Fe(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Re(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new et(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function Me(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new et(`Expected exactly 1 Shape; got ${t.length}`)}return t}function Le(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}class Oe{constructor(e,n="float32",s="Variable",r=!0,i=null){this.dtype=null==n?"float32":n,this.shape=e.shape,this.id=Et(),s=null==s?"Variable":s,this.originalName=Bt(s),this.name=Pt(this.originalName),this.trainable_=r,this.constraint=i,this.val=t.variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Be(t){return t.map((t=>t.read()))}function Pe(t){t.forEach((t=>{t[0].write(t[1])}))}class We{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Ue{constructor(t,e,n,s,r,i,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=a,this.id=Et(),null!=i&&(this.originalName=Bt(i),this.name=Pt(this.originalName)),this.rank=e.length}}let Ve=0;class Ke{constructor(t,e){this.callArgs=e,this.id=Ve++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let je=0;class qe extends i.Serializable{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=je++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=ht(t)+"_"+At(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new tt(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new et(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return lt(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return lt(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Q(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Q(`Layer ${this.name} is not connected, no input to return.`);return lt(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Q(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Q(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return lt(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=ut(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=ut(this.inputSpec);if(t.length!==e.length)throw new et(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const s=t[n],r=e[n];if(null==r)continue;const i=s.rank;if(null!=r.ndim&&i!==r.ndim)throw new et(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${i}`);if(null!=r.maxNDim&&i>r.maxNDim)throw new et(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${i}`);if(null!=r.minNDim&&i<r.minNDim)throw new et(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${i}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new et(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const t=s.shape;for(const e in r.axes){const s=Number(e),i=r.axes[e],a=s>=0?t[s]:t[t.length+s];if(null!=i&&-1===[i,null].indexOf(a))throw new et(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const e=r.shape[t],i=s.shape[t];if(null!=e&&null!=i&&e!==i)throw new et(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=ut(t);let s=!0;for(const t of n)if(!(t instanceof Ue)){s=!1;break}let r=!0;for(const t of n)if(t instanceof Ue){r=!1;break}if(s===r)throw new et("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ot(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of ut(t))e.push(n.shape);this.build(lt(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let s=this.call(t,e);const r=ut(s),i=[];for(let t of r)-1!==n.indexOf(t)&&(t=t.clone()),i.push(t);if(s=lt(i),null!=this.activityRegularizer)throw new nt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(t){t=ut(t);const e=[];for(const n of t)e.push(n.shape);return lt(e)}(t),s=this.computeOutputShape(n);let r;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new Ue(i,n,this,ut(t),e,this.name,s))):new Ue(i,s,this,ut(t),e,this.name),this.addInboundNode(t,r,null,null,n,s,e),this._refCount++,null!=this.activityRegularizer)throw new nt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=t[s]&&t[s]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Q(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new Q(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new tt(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Le(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Be(t?this.trainableWeights:this.weights)}setWeights(t){s((()=>{const n=this.weights;if(n.length!==t.length)throw new et(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${n.length} weights. Provided weights: ${t}...`);if(0===n.length)return;const s=[],r=Be(n);for(let i=0;i<r.length;++i){const a=r[i],o=n[i],l=t[i];if(!e.arraysEqual(a.shape,l.shape))throw new et(`Layer weight shape ${a.shape} not compatible with provided weight shape ${l.shape}`);s.push([o,l])}Pe(s)}))}addWeight(t,e,n,s,r,i,a,o){if(-1!==this._addedWeightNames.indexOf(t))throw new et(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=null!=o?o():_e("zeros"));const l=s.apply(e,n),u=new Oe(l,n,t,i,a);return l.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==i&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=ut(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,s,r,i,a=null){const o=ut(t);e=ut(e),n=ut(n),s=ut(s),r=Fe(r),i=Fe(i);const l=[],u=[],h=[];for(const t of o)l.push(t.sourceLayer),u.push(t.nodeIndex),h.push(t.tensorIndex);new Ke({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:h,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:i},a);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function Ge(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const s=Ge(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of s)-1===e.indexOf(t)&&e.push(t)}return e}}}class He extends qe{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:At("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new et("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new et("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new et("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const s=new Ue(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Ke({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new et(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Je(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new et("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;null==n&&(n="float32");return new He({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}He.className="InputLayer",i.registerClass(He);class Ze{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Ze)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new et(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return b(e,t.dtype)}catch(n){throw new et(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Ue){if(null==this.id2Value[t.id])throw new et(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new et(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Ue){if(null==this.id2Value[t.id])throw new et(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new et(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&g(this.id2Mask)}}const Ye=new rt,Xe=new rt;function Qe(t,n,s,r){const i=null!=s&&s.training,a=Array.isArray(t),o=a?t:[t],l=o.map((t=>t.name)),u=[],h=n.names();for(const t of l)-1!==h.indexOf(t)?u.push(n.getValue(t)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=l.join(",")+"|"+n.names().sort().join(",");let p,d=Ye.get(c);if(null==d){const t=function(t,n){e.assert(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let s=[],r={};if(1===t.length){const e=en(t[0],n);s=e.sorted,r=e.recipientMap}else{const e=new Set;for(const i of t){const{sorted:t,recipientMap:a}=en(i,n);for(const n of t)e.has(n.name)||(s.push(n),e.add(n.name));for(const t in a)null==r[t]&&(r[t]=new Set),a[t].forEach((e=>r[t].add(e)))}}return{sorted:s,recipientCounts:tn(r)}}(o,n);d=t.sorted,p=t.recipientCounts,Ye.put(c,d),Xe.put(c,p)}p={},i||Object.assign(p,Xe.get(c));const f=new Ze(n);for(let t=0;t<d.length;++t){if(null!=r){const t=m().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const e=d[t],a=e.sourceLayer;if(a instanceof He)continue;const o=[],h=[],c=[];let b=!1;for(const t of e.inputs){const e=f.getValue(t),s=f.getMask(t);o.push(e),h.push(s),null!=s&&(b=!0),i||(p[t.name]--,0!==p[t.name]||n.hasKey(t)||-1!==l.indexOf(t.name)||e.isDisposed||!0===t.sourceLayer.stateful||c.push(e))}b&&((s=s||{}).mask=h[0]);const y=ut(a.apply(o,s));let w=null;a.supportsMasking&&(w=a.computeMask(o,h));const k=nn(e),v=Array.isArray(k)?k:[k];for(let t=0;t<v.length;++t){f.hasKey(v[t])||f.add(v[t],y[t],Array.isArray(w)?w[0]:w);const e=l.indexOf(v[t].name);-1!==e&&(u[e]=y[t])}i||g(c)}return f.disposeMasks(),a?u:u[0]}function tn(t){const e={};for(const n in t)e[n]=t[n].size;return e}function en(t,e){const n=new Set,s=[],r={};for(const t of e.names())n.add(t);const i=[],a=[];for(i.push(t);i.length>0;){const t=i[i.length-1];if(n.has(t.name)){i.pop();continue}const e=a[a.length-1]===i.length-1;if(0===t.inputs.length||e)i.pop(),s.push(t),n.add(t.name),e&&a.pop();else{a.push(i.length-1);for(const e of t.inputs)null==r[e.name]&&(r[e.name]=new Set),r[e.name].add(t.name),n.has(e.name)||i.push(e)}}return{sorted:s,recipientMap:r}}function nn(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const s of t.sourceLayer.inboundNodes[e].outputTensors)if(s.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}y().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(t){null!=Ye&&Ye.setMaxEntries(t),null!=Xe&&Xe.setMaxEntries(t)}));function sn(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function rn(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function an(t,e,n=""){rn(hn(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function on(t){rn(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function ln(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||fn(t)&&!n)for(let s=0;s<t.length;++s)ln(t[s],e,n);else e.push(t);return e}function un(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function hn(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function cn(t){return t%1==0}function pn(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function dn(t,e){const n=e.length;return rn((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),rn(t.every((t=>cn(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function fn(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}function gn(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function mn(t){return"string"==typeof t||t instanceof String}function bn(t){return Array.isArray(t)?bn(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":"number"==typeof t?"float32":mn(t)?"string":function(t){return"boolean"==typeof t}(t)?"bool":"float32"}function yn(t){return!!(t&&t.constructor&&t.call&&t.apply)}function wn(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let s=e-3;s>=0;--s)n[s]=n[s+1]*t[s+1];return n}function kn(t,e,n,s=!1){const r=new Array;if(1===e.length){const i=e[0]*(s?2:1);for(let e=0;e<i;e++)r[e]=n[t+e]}else{const i=e[0],a=e.slice(1),o=a.reduce(((t,e)=>t*e))*(s?2:1);for(let e=0;e<i;e++)r[e]=kn(t+e*o,a,n,s)}return r}function vn(t,e,n=!1){if(0===t.length)return e[0];const s=t.reduce(((t,e)=>t*e))*(n?2:1);if(0===s)return[];if(s!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return kn(0,t,e,n)}function xn(t,e){const n=Sn(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function Sn(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function Nn(t){t.forEach((e=>{rn(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function En(t){return t&&t.then&&"function"==typeof t.then}class In{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=An,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(Tn().getBool("IS_TEST")||Tn().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];Tn().getBool("IS_TEST")||Tn().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(En(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"==typeof this.global||"undefined"==typeof this.global.location||"undefined"==typeof this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);if("tfjsflags"in t){t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}}function An(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}function Tn(){return Cn}let $n,Cn=null;function zn(){if(null==$n){let t;if("undefined"!=typeof window)t=window;else if("undefined"!=typeof global)t=global;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}$n=t}return $n}function _n(t,e){const n=function(){const t=zn();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const s=e();return n.set(t,s),n.get(t)}}function Dn(...t){Tn().getBool("IS_TEST")||Tn().getBool("PROD")||console.warn(...t)}const Fn=_n("kernelRegistry",(()=>new Map)),Rn=_n("gradRegistry",(()=>new Map));function Mn(t,e){const n=function(t,e){return`${e}_${t}`}(t,e);return Fn.get(n)}function Ln(t){return Rn.get(t)}function On(t){const e=Fn.entries(),n=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[i,a]=r,[o]=i.split("_");o===t&&n.push(a)}return n}function Bn(t){const{kernelName:e}=t;Rn.has(e)&&Tn().getBool("DEBUG")&&Dn(`Overriding the gradient for '${e}'`),Rn.set(e,t)}var Pn=Un,Wn=null;try{Wn=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(t){}function Un(t,e,n){this.low=0|t,this.high=0|e,this.unsigned=!!n}function Vn(t){return!0===(t&&t.__isLong__)}Un.prototype.__isLong__,Object.defineProperty(Un.prototype,"__isLong__",{value:!0}),Un.isLong=Vn;var Kn={},jn={};function qn(t,e){var n,s,r;return e?(r=0<=(t>>>=0)&&t<256)&&(s=jn[t])?s:(n=Hn(t,(0|t)<0?-1:0,!0),r&&(jn[t]=n),n):(r=-128<=(t|=0)&&t<128)&&(s=Kn[t])?s:(n=Hn(t,t<0?-1:0,!1),r&&(Kn[t]=n),n)}function Gn(t,e){if(isNaN(t))return e?ss:ns;if(e){if(t<0)return ss;if(t>=Qn)return ls}else{if(t<=-ts)return us;if(t+1>=ts)return os}return t<0?Gn(-t,e).neg():Hn(t%Xn|0,t/Xn|0,e)}function Hn(t,e,n){return new Un(t,e,n)}Un.fromInt=qn,Un.fromNumber=Gn,Un.fromBits=Hn;var Jn=Math.pow;function Zn(t,e,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return ns;if("number"==typeof e?(n=e,e=!1):e=!!e,(n=n||10)<2||36<n)throw RangeError("radix");var s;if((s=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return Zn(t.substring(1),e,n).neg();for(var r=Gn(Jn(n,8)),i=ns,a=0;a<t.length;a+=8){var o=Math.min(8,t.length-a),l=parseInt(t.substring(a,a+o),n);if(o<8){var u=Gn(Jn(n,o));i=i.mul(u).add(Gn(l))}else i=(i=i.mul(r)).add(Gn(l))}return i.unsigned=e,i}function Yn(t,e){return"number"==typeof t?Gn(t,e):"string"==typeof t?Zn(t,e):Hn(t.low,t.high,"boolean"==typeof e?e:t.unsigned)}Un.fromString=Zn,Un.fromValue=Yn;var Xn=4294967296,Qn=Xn*Xn,ts=Qn/2,es=qn(1<<24),ns=qn(0);Un.ZERO=ns;var ss=qn(0,!0);Un.UZERO=ss;var rs=qn(1);Un.ONE=rs;var is=qn(1,!0);Un.UONE=is;var as=qn(-1);Un.NEG_ONE=as;var os=Hn(-1,2147483647,!1);Un.MAX_VALUE=os;var ls=Hn(-1,-1,!0);Un.MAX_UNSIGNED_VALUE=ls;var us=Hn(0,-2147483648,!1);Un.MIN_VALUE=us;var hs=Un.prototype;hs.toInt=function(){return this.unsigned?this.low>>>0:this.low},hs.toNumber=function(){return this.unsigned?(this.high>>>0)*Xn+(this.low>>>0):this.high*Xn+(this.low>>>0)},hs.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(us)){var e=Gn(t),n=this.div(e),s=n.mul(e).sub(this);return n.toString(t)+s.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var r=Gn(Jn(t,6),this.unsigned),i=this,a="";;){var o=i.div(r),l=(i.sub(o.mul(r)).toInt()>>>0).toString(t);if((i=o).isZero())return l+a;for(;l.length<6;)l="0"+l;a=""+l+a}},hs.getHighBits=function(){return this.high},hs.getHighBitsUnsigned=function(){return this.high>>>0},hs.getLowBits=function(){return this.low},hs.getLowBitsUnsigned=function(){return this.low>>>0},hs.getNumBitsAbs=function(){if(this.isNegative())return this.eq(us)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&0==(t&1<<e);e--);return 0!=this.high?e+33:e+1},hs.isZero=function(){return 0===this.high&&0===this.low},hs.eqz=hs.isZero,hs.isNegative=function(){return!this.unsigned&&this.high<0},hs.isPositive=function(){return this.unsigned||this.high>=0},hs.isOdd=function(){return 1==(1&this.low)},hs.isEven=function(){return 0==(1&this.low)},hs.equals=function(t){return Vn(t)||(t=Yn(t)),(this.unsigned===t.unsigned||this.high>>>31!=1||t.high>>>31!=1)&&(this.high===t.high&&this.low===t.low)},hs.eq=hs.equals,hs.notEquals=function(t){return!this.eq(t)},hs.neq=hs.notEquals,hs.ne=hs.notEquals,hs.lessThan=function(t){return this.comp(t)<0},hs.lt=hs.lessThan,hs.lessThanOrEqual=function(t){return this.comp(t)<=0},hs.lte=hs.lessThanOrEqual,hs.le=hs.lessThanOrEqual,hs.greaterThan=function(t){return this.comp(t)>0},hs.gt=hs.greaterThan,hs.greaterThanOrEqual=function(t){return this.comp(t)>=0},hs.gte=hs.greaterThanOrEqual,hs.ge=hs.greaterThanOrEqual,hs.compare=function(t){if(Vn(t)||(t=Yn(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},hs.comp=hs.compare,hs.negate=function(){return!this.unsigned&&this.eq(us)?us:this.not().add(rs)},hs.neg=hs.negate,hs.add=function(t){Vn(t)||(t=Yn(t));var e=this.high>>>16,n=65535&this.high,s=this.low>>>16,r=65535&this.low,i=t.high>>>16,a=65535&t.high,o=t.low>>>16,l=0,u=0,h=0,c=0;return h+=(c+=r+(65535&t.low))>>>16,u+=(h+=s+o)>>>16,l+=(u+=n+a)>>>16,l+=e+i,Hn((h&=65535)<<16|(c&=65535),(l&=65535)<<16|(u&=65535),this.unsigned)},hs.subtract=function(t){return Vn(t)||(t=Yn(t)),this.add(t.neg())},hs.sub=hs.subtract,hs.multiply=function(t){if(this.isZero())return ns;if(Vn(t)||(t=Yn(t)),Wn)return Hn(Wn.mul(this.low,this.high,t.low,t.high),Wn.get_high(),this.unsigned);if(t.isZero())return ns;if(this.eq(us))return t.isOdd()?us:ns;if(t.eq(us))return this.isOdd()?us:ns;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(es)&&t.lt(es))return Gn(this.toNumber()*t.toNumber(),this.unsigned);var e=this.high>>>16,n=65535&this.high,s=this.low>>>16,r=65535&this.low,i=t.high>>>16,a=65535&t.high,o=t.low>>>16,l=65535&t.low,u=0,h=0,c=0,p=0;return c+=(p+=r*l)>>>16,h+=(c+=s*l)>>>16,c&=65535,h+=(c+=r*o)>>>16,u+=(h+=n*l)>>>16,h&=65535,u+=(h+=s*o)>>>16,h&=65535,u+=(h+=r*a)>>>16,u+=e*l+n*o+s*a+r*i,Hn((c&=65535)<<16|(p&=65535),(u&=65535)<<16|(h&=65535),this.unsigned)},hs.mul=hs.multiply,hs.divide=function(t){if(Vn(t)||(t=Yn(t)),t.isZero())throw Error("division by zero");var e,n,s;if(Wn)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?Hn((this.unsigned?Wn.div_u:Wn.div_s)(this.low,this.high,t.low,t.high),Wn.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?ss:ns;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return ss;if(t.gt(this.shru(1)))return is;s=ss}else{if(this.eq(us))return t.eq(rs)||t.eq(as)?us:t.eq(us)?rs:(e=this.shr(1).div(t).shl(1)).eq(ns)?t.isNegative()?rs:as:(n=this.sub(t.mul(e)),s=e.add(n.div(t)));if(t.eq(us))return this.unsigned?ss:ns;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();s=ns}for(n=this;n.gte(t);){e=Math.max(1,Math.floor(n.toNumber()/t.toNumber()));for(var r=Math.ceil(Math.log(e)/Math.LN2),i=r<=48?1:Jn(2,r-48),a=Gn(e),o=a.mul(t);o.isNegative()||o.gt(n);)o=(a=Gn(e-=i,this.unsigned)).mul(t);a.isZero()&&(a=rs),s=s.add(a),n=n.sub(o)}return s},hs.div=hs.divide,hs.modulo=function(t){return Vn(t)||(t=Yn(t)),Wn?Hn((this.unsigned?Wn.rem_u:Wn.rem_s)(this.low,this.high,t.low,t.high),Wn.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},hs.mod=hs.modulo,hs.rem=hs.modulo,hs.not=function(){return Hn(~this.low,~this.high,this.unsigned)},hs.and=function(t){return Vn(t)||(t=Yn(t)),Hn(this.low&t.low,this.high&t.high,this.unsigned)},hs.or=function(t){return Vn(t)||(t=Yn(t)),Hn(this.low|t.low,this.high|t.high,this.unsigned)},hs.xor=function(t){return Vn(t)||(t=Yn(t)),Hn(this.low^t.low,this.high^t.high,this.unsigned)},hs.shiftLeft=function(t){return Vn(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?Hn(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):Hn(0,this.low<<t-32,this.unsigned)},hs.shl=hs.shiftLeft,hs.shiftRight=function(t){return Vn(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?Hn(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):Hn(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},hs.shr=hs.shiftRight,hs.shiftRightUnsigned=function(t){if(Vn(t)&&(t=t.toInt()),0===(t&=63))return this;var e=this.high;return t<32?Hn(this.low>>>t|e<<32-t,e>>>t,this.unsigned):Hn(32===t?e:e>>>t-32,0,this.unsigned)},hs.shru=hs.shiftRightUnsigned,hs.shr_u=hs.shiftRightUnsigned,hs.toSigned=function(){return this.unsigned?Hn(this.low,this.high,!1):this},hs.toUnsigned=function(){return this.unsigned?this:Hn(this.low,this.high,!0)},hs.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},hs.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},hs.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},Un.fromBytes=function(t,e,n){return n?Un.fromBytesLE(t,e):Un.fromBytesBE(t,e)},Un.fromBytesLE=function(t,e){return new Un(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},Un.fromBytesBE=function(t,e){return new Un(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};const cs=Pn||X({__proto__:null,default:Pn},[Pn]);function ps(t){return cs.fromString(t,!0,16)}function ds(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=ln(t)),Tn().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const s=t[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function fs(){return Tn().platform.now()}function gs(t,e="utf-8"){return e=e||"utf-8",Tn().platform.decode(t,e)}ps("c3a5c85c97cb3127"),ps("b492b66fbe98f273"),ps("9ae16a3b2f90404f");class ms{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new ys)}profileKernel(t,e,n){let s;const r=()=>{s=n()};let i;const a=fs();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(r);else{r();for(const t of s)t.dataSync();i=Promise.resolve({kernelMs:fs()-a})}if(Tn().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<s.length;e++){const n=s[e];n.data().then((e=>{bs(e,n.dtype,t)}))}return{kernelName:t,outputs:s,inputs:e,timeMs:i.then((t=>t.kernelMs)),extraInfo:i.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:s,inputs:r,extraInfo:i}=t;n.forEach((t=>{Promise.all([t.data(),s,i]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],r,n[2])}))}))}}function bs(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const s=t[e];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class ys{logKernelProfile(t,e,n,s,r,i){const a="number"==typeof s?pn(`${s}ms`,9):s.error,o=pn(t,25),l=e.rank,u=e.size,h=pn(e.shape.toString(),14);let c="";for(const t in r){const n=r[t];if(null!=n){const s=n.shape||e.shape,r=s.length;c+=`${t}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${h}\t%c${u}\t%c${c}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function ws(t,e,n,s){const r=wn(e),i=function(t,e,n,s){const r=un(e),i=s[s.length-1],a=new Array(i).fill(0),o=e.length,l="complex64"===n?Ss(t):t;if(o>1)for(let t=0;t<r/i;t++){const e=t*i;for(let t=0;t<i;t++)a[t]=Math.max(a[t],ks(l[e+t],0,n).length)}return a}(t,e,n,r),a=e.length,o=xs(t,e,n,r,i),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map((t=>"    "+t)).join("\n")),l.join("\n")}function ks(t,e,n){let s;return s=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:mn(t)?`'${t}'`:"bool"===n?vs(t):parseFloat(t.toFixed(7)).toString(),pn(s,e)}function vs(t){return 0===t?"false":"true"}function xs(t,e,n,s,r,i=!0){const a="complex64"===n?2:1,o=e[0],l=e.length;if(0===l){if("complex64"===n){return[ks(Ss(t)[0],0,n)]}return"bool"===n?[vs(t[0])]:[t[0].toString()]}if(1===l){if(o>20){const e=3*a;let s=Array.from(t.slice(0,e)),i=Array.from(t.slice((o-3)*a,o*a));return"complex64"===n&&(s=Ss(s),i=Ss(i)),["["+s.map(((t,e)=>ks(t,r[e],n))).join(", ")+", ..., "+i.map(((t,e)=>ks(t,r[o-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?Ss(t):Array.from(t)).map(((t,e)=>ks(t,r[e],n))).join(", ")+"]"]}const u=e.slice(1),h=s.slice(1),c=s[0]*a,p=[];if(o>20){for(let e=0;e<3;e++){const s=e*c,i=s+c;p.push(...xs(t.slice(s,i),u,n,h,r,!1))}p.push("...");for(let e=o-3;e<o;e++){const s=e*c,i=s+c;p.push(...xs(t.slice(s,i),u,n,h,r,e===o-1))}}else for(let e=0;e<o;e++){const s=e*c,i=s+c;p.push(...xs(t.slice(s,i),u,n,h,r,e===o-1))}const d=2===l?",":"";p[0]="["+p[0]+d;for(let t=1;t<p.length-1;t++)p[t]=" "+p[t]+d;let f=",\n";for(let t=2;t<l;t++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(i?"":f),p}function Ss(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class Ns{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=un(t),null!=n){const t=n.length;rn(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||function(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}(e,this.size),this.strides=wn(t)}set(t,...e){0===e.length&&(e=[0]),rn(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Es().makeTensor(this.values,this.shape,this.dtype)}}let Es=null;class Is{constructor(t,e,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=un(t),this.strides=wn(t),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return null.buffer(this.shape,this.dtype,t)}bufferSync(){return null.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return vn(this.shape,t,"complex64"===this.dtype)}arraySync(){return vn(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=Es().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>gs(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Es().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Es().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>gs(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Es().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Es().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return null.print(this,t)}clone(){return this.throwIfDisposed(),null.clone(this)}toString(t=!1){return ws(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),null.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Es().makeVariable(this,t,e,n)}}Object.defineProperty(Is,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),_n("Tensor",(()=>Is));class As extends Is{constructor(t,e,n,s){super(t.shape,t.dtype,t.dataId,s),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!hn(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Es().disposeTensor(this),this.dataId=t.dataId,Es().incRef(this,null)}dispose(){Es().disposeVariable(this),this.isDisposedInternal=!0}}var Ts,$s,Cs,zs,_s;Object.defineProperty(As,Symbol.hasInstance,{value:t=>t instanceof Is&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(Ts||(Ts={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}($s||($s={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(Cs||(Cs={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(zs||(zs={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(_s||(_s={}));const Ds={float32:zs,int32:$s,bool:Cs,complex64:_s};function Fs(t,e){if(t.dtype===e.dtype)return[t,e];const n=function(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return Ds[t][e]}(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function Rs(t){const e=[];return Ms(t,e,new Set),e}function Ms(t,e,n){if(null==t)return;if(t instanceof Is)return void e.push(t);if(s=t,!Array.isArray(s)&&"object"!=typeof s)return;var s;const r=t;for(const t in r){const s=r[t];n.has(s)||(n.add(s),Ms(s,e,n))}}function Ls(t){return null!=t.kernelName}class Os{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Bs{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Os}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(Dn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new ms(this.backendInstance),!0}setupRegisteredKernels(){On(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){On(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof class{refCount(t){return sn("refCount")}incRef(t){return sn("incRef")}timerAvailable(){return!0}time(t){return sn("time")}read(t){return sn("read")}readSync(t){return sn("readSync")}readToGPU(t,e){return sn("readToGPU")}numDataIds(){return sn("numDataIds")}disposeData(t,e){return sn("disposeData")}write(t,e,n){return sn("write")}move(t,e,n,s,r){return sn("move")}createTensorFromTexture(t,e,n){return sn("createTensorFromTexture")}memory(){return sn("memory")}floatPrecision(){return sn("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return sn("dispose")}}||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,s=n.then((n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,Dn(`Initialization of backend ${t} failed`),Dn(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(e){return Dn(`Initialization of backend ${t} failed`),Dn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),s=n.backend,r=this.readSync(e),i=s.refCount(e);s.disposeData(e,!0),n.backend=t,t.move(e,r,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,s=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return Bs.nextTensorId++}nextVariableId(){return Bs.nextVariableId++}clone(t){const e=Ps.runKernel("Identity",{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t},n={dtype:"float32"};return Ps.runKernel("Cast",e,n)}})),[],{}),e}runKernel(t,e,n){null==this.backendName&&this.backend;if(!(null!=Mn(t,this.backendName)))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const s=this.backend.numDataIds();let r=0;n.forEach((t=>{r+="complex64"===t.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=s-e-r-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const s=this.isTapeOn(),r=this.state.numBytes,i=this.state.numTensors;let a,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Ls(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ls(t)){const{kernelName:e,inputs:r,attrs:i}=t;null==this.backendName&&this.backend;const l=Mn(e,this.backendName);rn(null!=l,(()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`)),a=()=>{const t=this.backend.numDataIds();o=l.kernelFunc({inputs:r,attrs:i,backend:this.backend});const a=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,a);const u=a.map((t=>null!=t.rank?t:this.makeTensorFromTensorInfo(t)));if(s){const t=this.getTensorsForGradient(e,r,u);n=this.saveTensorsForBackwardMode(t)}return u}}else{const{forwardFunc:e}=t,r=t=>{s&&(n=t.map((t=>this.keep(this.clone(t)))))};a=()=>{const t=this.backend.numDataIds();o=this.tidy((()=>e(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,t,n),n}}const{inputs:u,attrs:h}=t,c=Ls(t)?null:t.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),e=p.outputs):e=a()})),s&&this.addTapeNode(l,u,e,c,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((t=>null!=u[t]?u[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?e:e[0]}saveTensorsForBackwardMode(t){const e=t.map((t=>this.keep(this.clone(t))));return e}getTensorsForGradient(t,e,n){const s=Ln(t);if(null!=s){const t=s.inputsToSave||[],r=s.outputsToSave||[];let i;s.saveAllInputs?(rn(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(e).map((t=>e[t]))):i=t.map((t=>e[t]));const a=n.filter(((t,e)=>r[e]));return i.concat(a)}return[]}makeTensor(t,e,n,s){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=t;"string"===n&&mn(t[0])&&(r=t.map((t=>function(t,e="utf-8"){return e=e||"utf-8",Tn().platform.encode(t,e)}(t))));const i=s.write(r,e,n),a=new Is(e,n,i,this.nextTensorId());if(this.trackTensor(a,s),"string"===n){const t=this.state.tensorInfo.get(i),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(r);this.state.numBytes+=e-t.bytes,t.bytes=e}return a}makeTensorFromDataId(t,e,n,s){const r={dataId:t,shape:e,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,s)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:s,dtype:r}=t,i=new Is(s,r,n,this.nextTensorId());return this.trackTensor(i,e),i}makeVariable(t,e=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==t.dtype&&(t=t.cast(s));const r=new As(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*gn(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof As||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*gn(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,s,r,i){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:r},o=Ln(t);null!=o&&(s=o.gradFunc),null!=s&&(a.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],s=Sn(t.size,t.dtype);return this.makeTensor(s,t.shape,t.dtype)}return t})),s(t.length>1?t:t[0],r,i))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Rs(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==s.id||this.track(t)}))}gradients(t,e,n,s=!1){if(rn(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));rn(r instanceof Is,(()=>"The result y returned by f() must be a tensor."));const i=function(t,e,n){const s={},r={};for(let t=0;t<e.length;t++)s[e[t].id]=!0;for(let n=0;n<t.length;n++){const i=t[n],a=i.inputs;for(const t in a){const n=a[t];let o=!1;for(let t=0;t<e.length;t++)if(s[n.id]){i.outputs.forEach((t=>s[t.id]=!0)),o=!0,r[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let e=t.length-1;e>=0;e--){const n=t[e],s=n.inputs;for(let t=0;t<n.outputs.length;t++)if(i[n.outputs[t].id]){for(const t in s)i[s[t].id]=!0,a[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(r[n.id]&&a[n.id]){const t={};for(const e in n.inputs){const r=n.inputs[e];s[r.id]&&(t[e]=r)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,r);if(!s&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[r.id]=null==n?function(t){const e=xn(un(t),"float32");return Ps.makeTensor(e,t,"float32")}(r.shape):n,function(t,e,n,s){for(let r=e.length-1;r>=0;r--){const i=e[r],a=[];if(i.outputs.forEach((e=>{const n=t[e.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const e in i.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[e]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${r.dtype}'`);const a=i.inputs[e];if(!hn(r.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${e}' has shape '${r.shape}', which does not match the shape of the input '${a.shape}'`);if(null==t[a.id])t[a.id]=r;else{const e=t[a.id];t[a.id]=s(e,r),e.dispose()}}}}(t,i,(t=>this.tidy(t)),Ws);const s=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(t){return rn(yn(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;rn(e.every((t=>t instanceof Is)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};e.forEach(((t,e)=>{s[e]=t}));return this.runKernelFunc({forwardFunc:(s,r)=>(n=t(...e,r),rn(n.value instanceof Is,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),rn(yn(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(t,s)=>{const r=n.gradFunc(t,s),i=Array.isArray(r)?r:[r];rn(i.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),rn(i.every((t=>t instanceof Is)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((t,e)=>{a[e]=()=>t})),a},inputs:s})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=fs(),n=await this.backend.time(t);return n.wallMs=fs()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Os;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Bs.nextTensorId=0,Bs.nextVariableId=0;const Ps=function(){const t=zn();if(null==t._tfengine){const e=new In(t);t._tfengine=new Bs(e)}var e;return e=t._tfengine.ENV,Cn=e,Es=()=>t._tfengine,t._tfengine}();function Ws(t,e){const n={a:t,b:e};return Ps.runKernel("Add",n)}function Us(t,e){let n=t;if(fn(t))return"string"===e?[]:[t.length];if("object"==typeof t&&"texture"in t){const e=t.channels||"RGBA";return[t.height,t.width*e.length]}if(!Array.isArray(t))return[];const s=[];for(;Array.isArray(n)||fn(n)&&"string"!==e;)s.push(n.length),n=n[0];return Array.isArray(t)&&Tn().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Vs(t,s,[]),s}function Vs(t,e,n){if(n=n||[],!Array.isArray(t)&&!fn(t))return void rn(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));rn(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),rn(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const s=e.slice(1);for(let e=0;e<t.length;++e)Vs(t[e],s,n.concat(e))}function Ks(t,e,n,s){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${s}' must be ${t} tensor, but got ${e} tensor`)}}function js(t,e,n,s="numeric"){if(t instanceof Is)return Ks(s,t.dtype,e,n),t;let r=bn(t);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Ks(s,r,e,n),null==t||!fn(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const s=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const i=Us(t,r);fn(t)||Array.isArray(t)||(t=[t]);const a="string"!==r?ds(t,r):ln(t,[],!0);return Ps.makeTensor(a,i,r)}function qs(t,e,n,s="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,r)=>js(t,`${e}[${r}]`,n,s)))}function Gs(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=(...t)=>{Ps.startScope(n);try{const e=s(...t);return En(e)&&console.error("Cannot return a Promise inside of tidy."),Ps.endScope(e),e}catch(t){throw Ps.endScope(null),t}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const Hs=Gs({cast_:function(t,e){const n=js(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:e};return Ps.runKernel("Cast",s,r)}});const Js=Gs({mul_:function(t,e){let n=js(t,"a","mul"),s=js(e,"b","mul");[n,s]=Fs(n,s);const r={a:n,b:s};return Ps.runKernel("Multiply",r)}});const Zs=Gs({step_:function(t,e=0){const n={x:js(t,"x","step")},s={alpha:e};return Ps.runKernel("Step",n,s)}}),Ys={kernelName:"Abs",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Js(t,Zs(Hs(n,"float32"),-1))}}};const Xs=Gs({floorDiv_:function(t,e){let n=js(t,"a","floorDiv"),s=js(e,"b","floorDiv");[n,s]=Fs(n,s);const r={a:n,b:s};return Ps.runKernel("FloorDiv",r)}});const Qs=Gs({div_:function(t,e){let n=js(t,"a","div"),s=js(e,"b","div");if([n,s]=Fs(n,s),"int32"===n.dtype&&"int32"===s.dtype)return Xs(n,s);const r={a:n,b:s};return Ps.runKernel("RealDiv",r,{})}});const tr=Gs({neg_:function(t){const e={x:js(t,"x","neg")};return Ps.runKernel("Neg",e)}});function er(t,e,n,s){if(null==s&&(s=bn(t)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if("object"==typeof t&&"texture"in t){if("float32"!==s&&"int32"!==s)throw new Error(`Creating tensor from texture only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return t.channels=t.channels||"RGBA",Ps.backend.createTensorFromTexture(t,e||n,s)}if(!fn(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Nn(e);const t=un(e),s=un(n);rn(t===s,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${s}`));for(let t=0;t<n.length;++t){const s=n[t],r=t!==n.length-1||s!==un(e.slice(t));rn(n[t]===e[t]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return fn(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==s?ds(t,s):ln(t,[],!0),Ps.makeTensor(t,e,s)}function nr(t,e){if((fn(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&fn(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return er(t,[],[],e)}const sr=Gs({sqrt_:function(t){const e={x:js(t,"x","sqrt","float32")};return Ps.runKernel("Sqrt",e)}});const rr=Gs({square_:function(t){const e=js(t,"x","square");return Ps.runKernel("Square",{x:e},{})}});const ir=Gs({sub_:function(t,e){let n=js(t,"a","sub"),s=js(e,"b","sub");[n,s]=Fs(n,s);const r={a:n,b:s};return Ps.runKernel("Sub",r)}}),ar={kernelName:"Acos",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=rr(Hs(n,"float32")),s=sr(ir(nr(1),e));return tr(Qs(t,s))}}}},or={kernelName:"Acosh",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=sr(ir(rr(Hs(n,"float32")),1));return Qs(t,e)}}}};function lr(t,e){const n=[];for(let s=0;s<e.length;s++){const r=t[t.length-s-1],i=e.length-s-1,a=e[i];(null==r||1===r&&a>1)&&n.unshift(i)}return n}function ur(t,e){const n=[],s=Math.max(t.length,e.length);for(let r=0;r<s;r++){let s=t[t.length-r-1];null==s&&(s=1);let i=e[e.length-r-1];if(null==i&&(i=1),1===s)n.unshift(i);else if(1===i)n.unshift(s);else{if(s!==i){throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`)}n.unshift(s)}}return n}const hr=Gs({reshape_:function(t,e){const n={x:js(t,"x","reshape","string_or_numeric")},s={shape:e};return Ps.runKernel("Reshape",n,s)}});const cr=Gs({sum_:function(t,e=null,n=!1){let s=js(t,"x","sum");"bool"===s.dtype&&(s=Hs(s,"int32"));const r={x:s},i={axis:e,keepDims:n};return Ps.runKernel("Sum",r,i)}}),pr={kernelName:"Add",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=ur(n.shape,s.shape);return{a:()=>{let e=t;const s=lr(n.shape,r);return s.length>0&&(e=cr(e,s)),hr(e,n.shape)},b:()=>{let e=t;const n=lr(s.shape,r);return n.length>0&&(e=cr(e,n)),hr(e,s.shape)}}}},dr={kernelName:"AddN",saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,s)=>{n[s]=()=>t.clone()})),n}};const fr=Gs({zerosLike_:function(t){const e={x:js(t,"x","zerosLike")};return Ps.runKernel("ZerosLike",e)}}),gr={kernelName:"ArgMax",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>fr(n)}}},mr={kernelName:"ArgMin",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>fr(n)}}},br={kernelName:"Asin",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Qs(t,sr(ir(nr(1),rr(Hs(n,"float32")))))}}};const yr=Gs({add_:function(t,e){let n=js(t,"a","add"),s=js(e,"b","add");[n,s]=Fs(n,s);const r={a:n,b:s};return Ps.runKernel("Add",r)}}),wr={kernelName:"Asinh",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=sr(yr(nr(1),rr(Hs(n,"float32"))));return Qs(t,e)}}}},kr={kernelName:"Atan2",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=ur(n.shape,s.shape);return{a:()=>{const e=yr(rr(n),rr(s));let i=Js(t,Qs(s,e));const a=lr(n.shape,r);return a.length>0&&(i=cr(i,a)),hr(i,n.shape)},b:()=>{const e=yr(rr(n),rr(s));let i=tr(Js(t,Qs(n,e)));const a=lr(s.shape,r);return a.length>0&&(i=cr(i,a)),hr(i,s.shape)}}}},vr={kernelName:"Atan",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Qs(t,yr(rr(Hs(n,"float32")),1))}}},xr={kernelName:"Atanh",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Qs(t,ir(nr(1),rr(Hs(n,"float32"))))}}};function Sr(t,e,n,s,r,i,a=!1,o="channelsLast"){let[l,u,h,c]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,h,c]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,c,u,h]=t}const[p,d,,f]=e,[g,m]=Nr(n),[b,y]=Nr(s),w=Er(p,b),k=Er(d,y),{padInfo:v,outHeight:x,outWidth:S}=function(t,e,n,s,r,i,a,o,l){let u,h,c;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const r=function(t,e,n,s,r){null==s&&(s=function(t,e,n,s=1){const r=Er(e,s);return Math.floor((t[0]*(n-1)-n+r)/2)}(t,e,n));const i=t[0],a=t[1],o=Ir((i-e+2*s)/n+1,r),l=Ir((a-e+2*s)/n+1,r);return[o,l]}([e,n],i,s,t,o);h=r[0],c=r[1]}else if("same"===t){h=Math.ceil(e/s),c=Math.ceil(n/r);const t=Math.max(0,(h-1)*s+i-e),o=Math.max(0,(c-1)*r+a-n),l=Math.floor(t/2),p=t-l,d=Math.floor(o/2);u={top:l,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((e-i+1)/s),c=Math.ceil((n-a+1)/r);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const p="channelsLast"===l?t[1][0]:t[2][0],d="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],g="channelsLast"===l?t[2][1]:t[3][1];u={top:p,bottom:d,left:f,right:g,type:0===p&&0===d&&0===f&&0===g?"VALID":"EXPLICIT"},h=Ir((e-i+p+d)/s+1,o),c=Ir((n-a+f+g)/r+1,o)}}return{padInfo:u,outHeight:h,outWidth:c}}(r,u,h,g,m,w,k,i,o),N=a?f*c:f;let E;return"channelsFirst"===o?E=[l,N,x,S]:"channelsLast"===o&&(E=[l,x,S,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:h,inChannels:c,outHeight:x,outWidth:S,outChannels:N,padInfo:v,strideHeight:g,strideWidth:m,filterHeight:p,filterWidth:d,effectiveFilterHeight:w,effectiveFilterWidth:k,dilationHeight:b,dilationWidth:y,inShape:t,outShape:E,filterShape:e}}function Nr(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function Er(t,e){return e<=1?t:t+(t-1)*(e-1)}function Ir(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function Ar(t){const[e,n,s]=Nr(t);return 1===e&&1===n&&1===s}function Tr(t,e){return Ar(t)||Ar(e)}function $r(t,e,n){if(null!=n){if("string"==typeof e)throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if("number"==typeof e)rn(cn(e),(()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`));else{if("object"!=typeof e)throw Error(`Error in ${t}: Unknown padding parameter: ${e}`);e.forEach((e=>{e.forEach((e=>{rn(cn(e),(()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`))}))}))}}}const Cr=Gs({avgPool3dGrad_:function(t,e,n,s,r,i){const a=js(t,"dy","avgPool3dGrad"),o=js(e,"input","avgPool3dGrad");let l=a,u=o,h=!1;4===o.rank&&(h=!0,l=hr(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=hr(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),rn(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),rn(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),$r("avgPool3dGrad",r,i);const c={dy:l,input:u},p={filterSize:n,strides:s,pad:r,dimRoundingMode:i},d=Ps.runKernel("AvgPool3DGrad",c,p);return h?hr(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),zr={kernelName:"AvgPool3D",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:i,pad:a,dimRoundingMode:o}=n;return{x:()=>Cr(t,s,r,i,a,o)}}};const _r=Gs({avgPoolGrad_:function(t,e,n,s,r){const i=js(t,"dy","avgPoolGrad"),a=js(e,"input","avgPoolGrad");rn(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=hr(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=hr(i,[1,i.shape[0],i.shape[1],i.shape[2]])),rn(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),rn(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const h={dy:l,input:o},c={filterSize:n,strides:s,pad:r},p=Ps.runKernel("AvgPoolGrad",h,c);return u?hr(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Dr={kernelName:"AvgPool",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:i,pad:a}=n;return{x:()=>_r(t,s,r,i,a)}}};const Fr=Gs({matMul_:function(t,e,n=!1,s=!1){let r=js(t,"a","matMul"),i=js(e,"b","matMul");[r,i]=Fs(r,i);const a={a:r,b:i},o={transposeA:n,transposeB:s};return Ps.runKernel("BatchMatMul",a,o)}}),Rr={kernelName:"BatchMatMul",inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[s,r]=e,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>Fr(t,r,!1,!1),b:()=>Fr(t,s,!0,!1)}:i&&!a?{a:()=>Fr(r,t,!1,!0),b:()=>Fr(s,t,!1,!1)}:{a:()=>Fr(r,t,!0,!0),b:()=>Fr(t,s,!0,!0)}:{a:()=>Fr(t,r,!1,!0),b:()=>Fr(s,t,!0,!1)}}};const Mr=Gs({spaceToBatchND_:function(t,e,n){const s=js(t,"x","spaceToBatchND");rn(s.rank>=1+e.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`)),rn(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),rn(s.shape.reduce(((t,s,r)=>r>0&&r<=e.length?t&&(s+n[r-1][0]+n[r-1][1])%e[r-1]==0:t),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const r={x:s},i={blockShape:e,paddings:n};return Ps.runKernel("SpaceToBatchND",r,i)}}),Lr={kernelName:"BatchToSpaceND",gradFunc:(t,e,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>Mr(t,s,r)}}},Or={kernelName:"BroadcastTo",gradFunc:(t,e,n)=>{const s=n,r=s.inputShape,i=s.shape,a=Array.from(i);for(let t=r.length-1;t>=0;t--)if(r[t]===i[t])a[t]=1;else if(1!==r[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${i}].`);const o=[];for(let t=0;t<a.length;t++)a[t]>1&&o.push(t);return{x:()=>cr(t,o,!0)}}},Br={kernelName:"Cast",gradFunc:t=>({x:()=>t.clone()})},Pr={kernelName:"Ceil",gradFunc:t=>({x:()=>fr(t)})};const Wr=Gs({greaterEqual_:function(t,e){let n=js(t,"a","greaterEqual","string_or_numeric"),s=js(e,"b","greaterEqual","string_or_numeric");[n,s]=Fs(n,s),ur(n.shape,s.shape);const r={a:n,b:s};return Ps.runKernel("GreaterEqual",r)}});const Ur=Gs({lessEqual_:function(t,e){let n=js(t,"a","lessEqual","string_or_numeric"),s=js(e,"b","lessEqual","string_or_numeric");[n,s]=Fs(n,s),ur(n.shape,s.shape);const r={a:n,b:s};return Ps.runKernel("LessEqual",r)}});const Vr=Gs({logicalAnd_:function(t,e){const n=js(t,"a","logicalAnd","bool"),s=js(e,"b","logicalAnd","bool");ur(n.shape,s.shape);const r={a:n,b:s};return Ps.runKernel("LogicalAnd",r)}});const Kr=Gs({clone_:function(t){const e={x:js(t,"x","clone","string_or_numeric")};return Ps.runKernel("Identity",e)}});const jr=Gs({broadcastTo_:function(t,e){let n=js(t,"broadcastTo","x");const s=n.shape;if(Nn(e),e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=hr(n,t)}const r=n.shape,i=Array.from(e);for(let t=e.length-1;t>=0;t--)if(r[t]===e[t])i[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(0===i.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return Kr(n);const a={x:n},o={reps:i};return Ps.runKernel("Tile",a,o)}});const qr=Gs({where_:function(t,e,n){const s=js(e,"a","where"),r=js(n,"b","where"),i=js(t,"condition","where","bool"),a=ur(ur(i.shape,s.shape),r.shape),o={condition:jr(i,a),t:jr(s,a),e:jr(r,a)};return Ps.runKernel("Select",o)}}),Gr={kernelName:"ClipByValue",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{clipValueMin:r,clipValueMax:i}=n;return{x:()=>qr(Vr(Wr(s,r),Ur(s,i)),t,fr(t))}}},Hr={kernelName:"ComplexAbs",inputsToSave:["x"],gradFunc:Ys.gradFunc};const Jr=Gs({split_:function(t,e,n=0){const s={x:js(t,"x","split")},r={numOrSizeSplits:e,axis:n};return Ps.runKernel("SplitV",s,r)}}),Zr={kernelName:"Concat",saveAllInputs:!0,gradFunc:(t,e,n)=>{const s=e.map((t=>t.shape)),{axis:r}=n,i=dn(r,e[0].shape)[0],a=s.map((t=>t[i]));return Jr(t,a,i).map((t=>()=>t))}};const Yr=Gs({conv2DBackpropFilter_:function(t,e,n,s,r,i="NHWC",a){let o=t;3===t.rank&&(o=hr(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=hr(e,[1,e.shape[0],e.shape[1],e.shape[2]])),rn(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),rn(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),rn(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===i?o.shape[3]:o.shape[1],h="NHWC"===i?l.shape[3]:l.shape[1];rn(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),rn(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),$r("conv2dDerFilter",r,a);const c={x:o,dy:l},p={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,filterShape:n};return Ps.runKernel("Conv2DBackpropFilter",c,p)}});const Xr=Gs({conv2DBackpropInput_:function(t,e,n,s,r,i="NHWC",a){rn(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=hr(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),rn(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),rn(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),rn(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const h="NHWC"===i?o[3]:o[1],c="NHWC"===i?l.shape[3]:l.shape[1];rn(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),rn(c===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[3]}.`)),$r("conv2dDerInput",r,a);const p={dy:l,filter:n},d={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,inputShape:o},f=Ps.runKernel("Conv2DBackpropInput",p,d);return u?hr(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Qr={kernelName:"Conv2D",inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return rn(Ar(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>Xr(s.shape,t,r,a,o,l),filter:()=>Yr(s,t,r.shape,a,o,l)}}};const ti=Gs({conv2d_:function(t,e,n,s,r="NHWC",i=[1,1],a){const o=js(t,"x","conv2d","float32"),l=js(e,"filter","conv2d","float32");let u=o,h=!1;3===o.rank&&(h=!0,u=hr(o,[1,o.shape[0],o.shape[1],o.shape[2]])),rn(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),rn(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),$r("conv2d",s,a);const c="NHWC"===r?u.shape[3]:u.shape[1];rn(c===l.shape[2],(()=>`Error in conv2d: depth of input (${c}) must match input depth for filter ${l.shape[2]}.`)),rn(Tr(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const p={x:u,filter:l},d={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},f=Ps.runKernel("Conv2D",p,d);return h?hr(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),ei={kernelName:"Conv2DBackpropInput",inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>ti(t,r,i,a,o,1,l),filter:()=>Yr(t,s,r.shape,i,a,o,l)}}};const ni=Gs({conv3DBackpropFilter_:function(t,e,n,s,r){let i=t;4===t.rank&&(i=hr(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let a=e;4===a.rank&&(a=hr(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),rn(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),rn(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),rn(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),rn(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),rn(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:a},l={strides:s,pad:r,filterShape:n};return Ps.runKernel("Conv3DBackpropFilterV2",o,l)}});const si=Gs({conv3DBackpropInput_:function(t,e,n,s,r){rn(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let i=t,a=e,o=!1;4===e.rank&&(o=!0,a=hr(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const l=i[4],u=a.shape[4];rn(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),rn(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),rn(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),rn(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),rn(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const h={dy:a,filter:n},c={pad:r,strides:s,inputShape:i},p=Ps.runKernel("Conv3DBackpropInputV2",h,c);return o?hr(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),ri={kernelName:"Conv3D",inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:i}=n;rn(Ar(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[a,o]=e;return{x:()=>si(a.shape,t,o,r,i),filter:()=>ni(a,t,o.shape,r,i)}}};const ii=Gs({sin_:function(t){const e={x:js(t,"x","sin","float32")};return Ps.runKernel("Sin",e)}}),ai={kernelName:"Cos",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Js(tr(ii(Hs(n,"float32"))),t)}}};const oi=Gs({sinh_:function(t){const e={x:js(t,"x","sinh")};return Ps.runKernel("Sinh",e)}}),li={kernelName:"Cosh",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Js(oi(Hs(n,"float32")),t)}}};function ui(t,e){return function(t,e,n){const s=t.length+e.length,r=[];let i=0,a=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(t[i++]):r.push(e[a++]);return r}(t,e.map((t=>1)),e)}function hi(t,e){if(function(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}(t,e))return null;const n=[];for(let s=0;s<e;++s)-1===t.indexOf(s)&&n.push(s);return t.forEach((t=>n.push(t))),n}function ci(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}const pi=Gs({cumsum_:function(t,e=0,n=!1,s=!1){const r={x:js(t,"x","cumsum")},i={axis:e,exclusive:n,reverse:s};return Ps.runKernel("Cumsum",r,i)}});function di(t,e){return Ps.tidy(t,e)}function fi(t){Rs(t).forEach((t=>t.dispose()))}const gi=Gs({complex_:function(t,e){const n=js(t,"real","complex"),s=js(e,"imag","complex");an(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return Ps.runKernel("Complex",r)}});const mi=Gs({imag_:function(t){const e={input:js(t,"input","imag")};return Ps.runKernel("Imag",e)}});const bi=Gs({real_:function(t){const e={input:js(t,"input","real")};return Ps.runKernel("Real",e)}});const yi=Gs({transpose_:function(t,e,n){const s=js(t,"x","transpose");if(null==e&&(e=s.shape.map(((t,e)=>e)).reverse()),rn(s.rank===e.length,(()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`)),e.forEach((t=>{rn(t>=0&&t<s.rank,(()=>"All entries in 'perm' must be between 0 and "+(s.rank-1)+` but got ${e}`))})),s.rank<=1)return s.clone();const r={x:s},i={perm:e};return"complex64"===s.dtype?di((()=>{let t=bi(s),e=mi(s);return t=Ps.runKernel("Transpose",{x:t},i),e=Ps.runKernel("Transpose",{x:e},i),n&&(e=tr(e)),gi(t,e)})):Ps.runKernel("Transpose",r,i)}}),wi={kernelName:"Cumsum",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r,exclusive:i,reverse:a}=n;return{x:()=>{const e=hi([r],s.rank);let n=pi(t,r,i,!a);return null!=e&&(n=yi(n,e)),n}}}};const ki=Gs({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,s,r,i=[1,1],a){let o=t;3===t.rank&&(o=hr(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=hr(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},h={strides:s,pad:r,dimRoundingMode:a,dilations:i,filterShape:n};return Ps.runKernel("DepthwiseConv2dNativeBackpropFilter",u,h)}});const vi=Gs({depthwiseConv2dNativeBackpropInput_:function(t,e,n,s,r,i=[1,1],a){let o=e,l=!1;3===e.rank&&(l=!0,o=hr(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:n},h={strides:s,pad:r,dimRoundingMode:a,dilations:i,inputShape:t},c=Ps.runKernel("DepthwiseConv2dNativeBackpropInput",u,h);return l?hr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),xi={kernelName:"DepthwiseConv2dNative",inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:i,dimRoundingMode:a}=n,o=null==s?[1,1]:s;rn(Ar(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=e;return rn(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),rn(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),rn(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),rn(Tr(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),$r("depthwiseConv2d",i,a),{x:()=>vi(l.shape,t,u,r,i,o,a),filter:()=>ki(l,t,u.shape,r,i,o,a)}}},Si={kernelName:"Dilation2D",inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,i={x:s,filter:r,dy:t},a={x:s,filter:r,dy:t};return{x:()=>Ps.runKernel("Dilation2DBackpropInput",i,n),filter:()=>Ps.runKernel("Dilation2DBackpropFilter",a,n)}}},Ni={kernelName:"Elu",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,s={dy:t,y:n};return{x:()=>Ps.runKernel("EluGrad",s)}}};const Ei=Gs({exp_:function(t){const e={x:js(t,"x","exp")};return Ps.runKernel("Exp",e)}}),Ii={kernelName:"Erf",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=Js(Ei(tr(rr(n))),2/Math.sqrt(Math.PI));return{x:()=>Js(t,s)}}},Ai={kernelName:"Exp",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Js(t,n)}}},Ti={kernelName:"ExpandDims",inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>hr(t,n.shape)}}},$i={kernelName:"Expm1",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Js(t,Ei(n))}}},Ci={kernelName:"Floor",gradFunc:t=>({x:()=>fr(t)})},zi={kernelName:"FloorDiv",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=ur(n.shape,s.shape);return{a:()=>{const e=Qs(t,Hs(s,"float32")),i=lr(n.shape,r);return i.length>0?hr(cr(e,i),n.shape):e},b:()=>{let e=Js(t,Hs(n,"float32"));const i=lr(s.shape,r);i.length>0&&(e=hr(cr(e,i),s.shape));const a=rr(s);return tr(Qs(e,Hs(a,"float32")))}}}};const _i=Gs({rsqrt_:function(t){const e={x:js(t,"x","rsqrt","float32")};return Ps.runKernel("Rsqrt",e)}});const Di=Gs({tile_:function(t,e){const n=js(t,"x","tile","string_or_numeric");rn(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const s={x:n},r={reps:e};return Ps.runKernel("Tile",s,r)}}),Fi={kernelName:"FusedBatchNorm",inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:s}=n,[r,i,a,o]=e,l=null==o?nr(1):o,u=lr(i.shape,r.shape),h=[];if(1===i.rank){for(let t=0;t<r.shape.length-1;++t)h.push(r.shape[t]);h.push(1)}const c=ir(r,i),p=Js(t,l),d=_i(yr(a,nr(s))),f=Js(Js(Js(d,d),d),nr(-.5));return{x:()=>1===i.rank?hr(Js(Js(t,Di(hr(d,[1,1,1,i.shape[0]]),h)),l),r.shape):hr(Js(Js(t,d),l),r.shape),mean:()=>{let t=Js(Js(d,nr(-1)),p);return 1===i.rank&&(t=cr(t,u)),hr(t,i.shape)},variance:()=>{let t=Js(Js(f,c),p);return 1===i.rank&&(t=cr(t,u)),hr(t,i.shape)},scale:()=>{const e=Js(c,d);let n=Js(t,e);return 1===i.rank&&(n=cr(n,u)),hr(n,i.shape)},offset:()=>{let e=t;return 1===i.rank&&(e=cr(e,u)),hr(e,i.shape)}}}};const Ri=Gs({unsortedSegmentSum_:function(t,e,n){const s=js(t,"x","unsortedSegmentSum"),r=js(e,"segmentIds","unsortedSegmentSum","int32");rn(cn(n),(()=>"numSegments must be of dtype int"));const i={x:s,segmentIds:r},a={numSegments:n};return Ps.runKernel("UnsortedSegmentSum",i,a)}}),Mi={kernelName:"GatherV2",inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[s,r]=e,{axis:i}=n,a=dn(i,s.shape)[0];return{x:()=>{const e=s.shape,n=r.size,o=e.slice(0,a),l=o.length,u=e.slice(i,e.length).slice(1),h=u.length,c=Li(0,l),p=Li(l+1,l+1+h),d=Oi([o,[n],u]),f=hr(t,d),g=hr(r,[n]),m=Oi([[l],c,p]),b=yi(f,m);let y=Ri(b,g,s.shape[a]);const w=ci(m);return y=yi(y,w),y},indices:()=>r}}};function Li(t,e){const n=[];for(let s=t;s<e;++s)n.push(s);return n}function Oi(t){const e=[];for(let n=0;n<t.length;++n)for(let s=0;s<t[n].length;++s)e.push(t[n][s]);return e}const Bi={kernelName:"GreaterEqual",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>fr(n),b:()=>fr(s)}}},Pi={kernelName:"Identity",gradFunc:t=>({x:()=>Hs(t,"float32")})},Wi={kernelName:"IsFinite",gradFunc:t=>({x:()=>fr(t)})},Ui={kernelName:"IsInf",gradFunc:t=>({x:()=>fr(t)})},Vi={kernelName:"IsNan",gradFunc:t=>({x:()=>fr(t)})};const Ki=Gs({greater_:function(t,e){let n=js(t,"a","greater","string_or_numeric"),s=js(e,"b","greater","string_or_numeric");[n,s]=Fs(n,s),ur(n.shape,s.shape);const r={a:n,b:s};return Ps.runKernel("Greater",r)}}),ji={kernelName:"LeakyRelu",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{alpha:r}=n,i=Ki(s,0);return{x:()=>qr(i,t,Js(t,r))}}},qi={kernelName:"Log1p",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Qs(t,yr(n,1))}}},Gi={kernelName:"Log",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Qs(t,Hs(n,"float32"))}}},Hi={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n;return{logits:()=>{const e=Ei(s);return ir(t,Js(cr(t,r,!0),e))}}}};const Ji=Gs({localResponseNormalizationBackprop_:function(t,e,n,s=5,r=1,i=1,a=.5){const o={x:t,y:e,dy:n},l={depthRadius:s,bias:r,alpha:i,beta:a};return Ps.runKernel("LRNGrad",o,l)}}),Zi={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>Ji(s,r,t,i,a,o,l)}}};const Yi=Gs({equal_:function(t,e){let n=js(t,"a","equal","string_or_numeric"),s=js(e,"b","equal","string_or_numeric");[n,s]=Fs(n,s),ur(n.shape,s.shape);const r={a:n,b:s};return Ps.runKernel("Equal",r)}});function Xi(t,e,n,s){return e.rank<n.rank&&(e=hr(e,ui(e.shape,s))),t.rank<n.rank&&(t=hr(t,ui(t.shape,s))),{x:()=>Js(t,Hs(Yi(n,e),t.dtype))}}const Qi={kernelName:"Max",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{reductionIndices:r}=s,i=e[0],a=Xi(t,e[1],i,dn(r,i.shape));return{x:()=>a.x()}}};const ta=Gs({less_:function(t,e){let n=js(t,"a","less","string_or_numeric"),s=js(e,"b","less","string_or_numeric");[n,s]=Fs(n,s),ur(n.shape,s.shape);const r={a:n,b:s};return Ps.runKernel("Less",r)}}),ea={kernelName:"Maximum",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Js(t,Hs(Wr(n,s),"float32")),b:()=>Js(t,Hs(ta(n,s),"float32"))}}};const na=Gs({maxPool3dGrad_:function(t,e,n,s,r,i,a){const o=js(t,"dy","maxPool3dGrad"),l=js(e,"input","maxPool3dGrad"),u=js(n,"output","maxPool3dGrad");let h=o,c=l,p=u,d=!1;4===l.rank&&(d=!0,h=hr(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=hr(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=hr(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),rn(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),rn(5===c.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),rn(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),$r("maxPool3dGrad",i,a);const f={dy:h,input:c,output:p},g={filterSize:s,strides:r,pad:i,dimRoundingMode:a},m=Ps.runKernel("MaxPool3DGrad",f,g);return d?hr(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),sa={kernelName:"MaxPool3D",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=n;return{x:()=>na(t,s,r,i,a,o,l)}}};const ra=Gs({maxPoolGrad_:function(t,e,n,s,r,i,a){const o=js(t,"dy","maxPoolGrad"),l=js(e,"input","maxPoolGrad"),u=js(n,"output","maxPoolGrad");rn(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),rn(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),rn(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),$r("maxPoolGrad",i,a);const h={dy:o,input:l,output:u},c={filterSize:s,strides:r,pad:i,dimRoundingMode:a};return Ps.runKernel("MaxPoolGrad",h,c)}}),ia={kernelName:"MaxPool",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:i,strides:a,pad:o}=n;return{x:()=>ra(t,s,r,i,a,o)}}};function aa(t,e="float32"){if(Nn(t),"complex64"===e){const e=aa(t,"float32"),n=aa(t,"float32");return gi(e,n)}const n=Sn(un(t),e);return Ps.makeTensor(n,t,e)}function oa(t,e="float32"){if(Nn(t),"complex64"===e){const e=oa(t,"float32"),n=aa(t,"float32");return gi(e,n)}const n=xn(un(t),e);return Ps.makeTensor(n,t,e)}const la={kernelName:"Mean",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n,i=dn(r,s.shape),a=function(t,e){const n=[],s=t.length;for(let r=0;r<s;r++)-1===e.indexOf(r)&&n.push(t[r]);return[n,e.map((e=>t[e]))]}(s.shape,i),o=un(a[1]);return{x:()=>{const e=s.shape.slice();i.forEach((t=>{e[t]=1}));const n=hr(t,e);return Qs(Js(n,oa(s.shape,"float32")),o)}}}},ua={kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{axis:r}=s,[i,a]=e,o=Xi(t,a,i,dn(r,i.shape));return{x:()=>o.x()}}},ha={kernelName:"Minimum",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Js(t,Hs(Ur(n,s),"float32")),b:()=>Js(t,Hs(Ki(n,s),"float32"))}}};const ca=Gs({slice_:function(t,e,n){const s=js(t,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},i={begin:e,size:n};return Ps.runKernel("Slice",r,i)}}),pa={kernelName:"MirrorPad",inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,i=r.map((t=>t[0]));return{x:()=>ca(t,i,s.shape)}}};const da=Gs({floor_:function(t){const e={x:js(t,"x","floor","float32")};return Ps.runKernel("Floor",e)}}),fa={kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=ur(n.shape,s.shape);return{a:()=>{const e=lr(n.shape,r);return e.length>0?hr(cr(t,e),n.shape):t},b:()=>{const e=Js(t,tr(da(Qs(n,s)))),i=lr(s.shape,r);return i.length>0?hr(cr(e,i),s.shape):e}}}},ga={kernelName:"Multiply",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=ur(n.shape,s.shape);return{a:()=>{const e=Js(t,Hs(s,"float32")),i=lr(n.shape,r);return i.length>0?hr(cr(e,i),n.shape):e},b:()=>{const e=Js(t,Hs(n,"float32")),i=lr(s.shape,r);return i.length>0?hr(cr(e,i),s.shape):e}}}},ma={kernelName:"Neg",gradFunc:t=>({x:()=>tr(t)})},ba={kernelName:"OneHot",inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>aa(n.shape,"float32")}}},ya={kernelName:"OnesLike",gradFunc:t=>({x:()=>fr(t)})};const wa=Gs({unstack_:function(t,e=0){const n=js(t,"x","unstack","string_or_numeric");rn(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:e};return Ps.runKernel("Unpack",s,r)}}),ka={kernelName:"Pack",saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:s}=n;return wa(t,s).map((t=>()=>t))}},va={kernelName:"PadV2",inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,i=r.map((t=>t[0]));return{x:()=>ca(t,i,s.shape)}}};const xa=Gs({log_:function(t){const e={x:js(t,"x","log","float32")};return Ps.runKernel("Log",e)}});const Sa=Gs({pow_:function(t,e){let n=js(t,"base","pow"),s=js(e,"exp","pow");[n,s]=Fs(n,s);const r={a:n,b:s};return Ps.runKernel("Pow",r)}}),Na={kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,s,r]=e,i=n,a=s,o=ur(i.shape,a.shape);return{a:()=>{const e=Hs(a,"float32");let n=Js(t,Js(e,Sa(i,ir(e,nr(1)))));const s=lr(i.shape,o);return s.length>0&&(n=cr(n,s)),hr(n,i.shape)},b:()=>{const e=Ki(i,0),n=qr(e,xa(i),fr(i));let s=Js(t,Js(r,n));const l=lr(a.shape,o);return l.length>0&&(s=cr(s,l)),hr(s,a.shape)}}}},Ea={kernelName:"Prelu",inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,s]=e,r=Ki(n,0);return{x:()=>qr(r,t,Js(t,s)),alpha:()=>{let e=qr(r,fr(t),Js(t,n));const i=lr(s.shape,t.shape);return i.length>0&&(e=cr(e,i)),hr(e,s.shape)}}}};const Ia=Tn();Ia.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Ia.registerFlag("IS_BROWSER",(()=>"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope)),Ia.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&"undefined"!=typeof process.versions&&"undefined"!=typeof process.versions.node)),Ia.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Ia.registerFlag("PROD",(()=>!1)),Ia.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Ia.getBool("DEBUG"))),Ia.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Ia.registerFlag("IS_TEST",(()=>!1)),Ia.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Ia.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Ia.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Ia.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const Aa="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ta(t){return Aa?Buffer.byteLength(t):new Blob([t]).size}function $a(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let s=0;return t.forEach((t=>{n.set(new Uint8Array(t),s),s+=t.byteLength})),n.buffer}function Ca(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),null!=t.initializerSignature&&(n.initializerSignature=t.initializerSignature),null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),n}async function za(t,e){let n,s;return null!=t.weightsManifest&&([n,s]=await e(t.weightsManifest)),function(t,e,n){const s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(null!=t.trainingConfig&&(s.trainingConfig=t.trainingConfig),null!=t.weightsManifest){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=n}return null!=t.signature&&(s.signature=t.signature),null!=t.userDefinedMetadata&&(s.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(s.modelInitializer=t.modelInitializer),null!=t.initializerSignature&&(s.initializerSignature=t.initializerSignature),s}(t,n,s)}function _a(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Ta(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Ta(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}class Da{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Da.instance&&(Da.instance=new Da),Da.instance}static registerSaveRouter(t){Da.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Da.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Da.getHandlers(t,"save")}static getLoadHandlers(t,e){return Da.getHandlers(t,"load",e)}static getHandlers(t,e,n){const s=[];return("load"===e?Da.getInstance().loadRouters:Da.getInstance().saveRouters).forEach((e=>{const r=e(t,n);null!==r&&s.push(r)})),s}}class Fa{constructor(t){if(this.indexedDB=function(){if(!Tn().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const s=this.indexedDB.open("tensorflowjs",1);s.onupgradeneeded=()=>function(t){const e=t.result;e.createObjectStore("models_store",{keyPath:"modelPath"}),e.createObjectStore("model_info_store",{keyPath:"modelPath"})}(s),s.onsuccess=()=>{const r=s.result;if(null==e){const e=r.transaction("models_store","readonly"),s=e.objectStore("models_store").get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(s.result.modelArtifacts)},s.onerror=t=>(r.close(),n(s.error)),e.oncomplete=()=>r.close()}else{const s=_a(e),i=r.transaction("model_info_store","readwrite");let a=i.objectStore("model_info_store");const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction("models_store","readwrite");const o=l.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:s});o.onsuccess=()=>t({modelArtifactsInfo:s}),o.onerror=t=>{a=i.objectStore("model_info_store");const e=a.delete(this.modelPath);e.onsuccess=()=>(r.close(),n(o.error)),e.onerror=t=>(r.close(),n(o.error))}},o.onerror=t=>(r.close(),n(o.error)),i.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=t=>n(s.error)}))}}Fa.URL_SCHEME="indexeddb://";const Ra=t=>{return Tn().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Fa.URL_SCHEME)?(e=t.slice(Fa.URL_SCHEME.length),new Fa(e)):null;var e};Da.registerSaveRouter(Ra),Da.registerLoadRouter(Ra);const Ma="tensorflowjs_models",La="info",Oa="model_topology",Ba="weight_specs",Pa="weight_data",Wa="model_metadata";class Ua{constructor(t){if(!Tn().getBool("IS_BROWSER")||"undefined"==typeof window||"undefined"==typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");var e;this.modelPath=t,this.keys=(e=this.modelPath,{info:[Ma,e,La].join("/"),topology:[Ma,e,Oa].join("/"),weightSpecs:[Ma,e,Ba].join("/"),weightData:[Ma,e,Pa].join("/"),modelMetadata:[Ma,e,Wa].join("/")})}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),s=_a(t);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(Aa)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,s=e.length;t<s;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData));const r={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:null!=t.signature?t.signature:void 0,userDefinedMetadata:null!=t.userDefinedMetadata?t.userDefinedMetadata:void 0,modelInitializer:null!=t.modelInitializer?t.modelInitializer:void 0,initializerSignature:null!=t.initializerSignature?t.initializerSignature:void 0,trainingConfig:null!=t.trainingConfig?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(t){throw function(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const t=JSON.parse(r);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),null!=t.initializerSignature&&(e.initializerSignature=t.initializerSignature),null!=t.trainingConfig&&(e.trainingConfig=t.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(Aa){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(i),e}}Ua.URL_SCHEME="localstorage://";const Va=t=>{return Tn().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ua.URL_SCHEME)?(e=t.slice(Ua.URL_SCHEME.length),new Ua(e)):null;var e};Da.registerSaveRouter(Va),Da.registerLoadRouter(Va);function Ka(t){return new Promise((t=>setTimeout(t))).then(t)}class ja{constructor(t){if(!Tn().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(ja.URL_SCHEME)&&(t=t.slice(ja.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Ca(t,[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}]),s=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=s,await Ka((()=>r.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Ka((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:_a(t)}}}}ja.URL_SCHEME="downloads://";function qa(t,e,n,s){!function(t){rn(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){rn(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),rn(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),rn(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(t.map((i=>(i.then((i=>{const a=n+ ++r/t.length*(s-n);return e(a),i})),i))))}Da.registerSaveRouter((t=>Tn().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(ja.URL_SCHEME)?function(t="model"){return new ja(t)}(t.slice(ja.URL_SCHEME.length)):null));class Ga{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(rn("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=Tn().platform.fetch,rn(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&rn(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=Ca(t,[{paths:["./model.weights.bin"],weights:t.weightSpecs}]);e.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:_a(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,s=e.weightsManifest;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return za(e,(t=>this.loadWeights(t)))}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),s=t.substring(0,e),r=n>e?t.substring(n):"";return[s+"/",r]}(e),r=this.weightPathPrefix||n,i=function(t){const e=[];for(const n of t)e.push(...n.weights);return e}(t),a=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):a.push(r+t+s);this.weightUrlConverter&&a.push(...await Promise.all(o));const l=await async function(t,e){null==e&&(e={});const n=null==e.fetchFunc?Tn().platform.fetch:e.fetchFunc,s=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),r=(null==e.onProgress?await Promise.all(s):await qa(s,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(r):await qa(r,e.onProgress,.5,1)}(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,$a(l)]}}function Ha(t){return null!=t.match(Ga.URL_SCHEME_REGEX)}Ga.URL_SCHEME_REGEX=/^https?:\/\//;const Ja=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>Ha(t))):Ha(t),n)return function(t,e){return new Ga(t,e)}(t,e)}return null};Da.registerSaveRouter(Ja),Da.registerLoadRouter(Ja);const Za=Gs({oneHot_:function(t,e,n=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:js(t,"indices","oneHot","int32")},a={dtype:r,depth:e,onValue:n,offValue:s};return Ps.runKernel("OneHot",i,a)}});let Ya;function Xa(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}!function(t,e,n){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(i+` update.rank < ${r}. `);if(t.length<s+(n.rank-r))throw new Error(i+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+t.length-s)throw new Error(i+" update.rank != "+(r+t.length-s));for(let t=0;t<r;++t)if(n.shape[t]!==e.shape[t])throw new Error(i+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-r;++e)if(n.shape[e+r]!==t[e+s])throw new Error(i+` updates.shape[${e+r}] (${n.shape[e+r]}) != shape[${e+r}] (${t[e+r]})`)}(n,e,t)}Gs({confusionMatrix_:function(t,e,n){const s=js(t,"labels","confusionMatrix"),r=js(e,"predictions","confusionMatrix");rn(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),rn(1===s.rank,(()=>`Expected the rank of labels to be 1, but got ${s.rank}`)),rn(1===r.rank,(()=>`Expected the rank of predictions to be 1, but got ${r.rank}`)),rn(s.shape[0]===r.shape[0],(()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`)),rn(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const i=Za(Hs(s,"int32"),n),a=Za(Hs(r,"int32"),n),o=yi(i),l=Fr(o,a);return Hs(l,"int32")}}),Gs({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,i=!1,a=!1,o=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)i=!0;else if(null!=t.getContext)a=!0;else{if(!("undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);o=!0}if(null!=Mn("FromPixels",Ps.backendName)){const n={pixels:t},s={numChannels:e};return Ps.runKernel("FromPixels",n,s)}const[l,u]=r?[t.videoWidth,t.videoHeight]:[t.width,t.height];let h,c;if(a)h=t.getContext("2d").getImageData(0,0,l,u).data;else if(s||n)h=t.data;else if(i||r||o){if(null==Ya)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Ya=new OffscreenCanvas(1,1).getContext("2d")}else Ya=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Ya.canvas.width=l,Ya.canvas.height=u,Ya.drawImage(t,0,0,l,u),h=Ya.getImageData(0,0,l,u).data}if(4===e)c=new Int32Array(h);else{const t=l*u;c=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)c[n*e+t]=h[4*n+t]}return function(t,e,n){if(on(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const s=Us(t,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return er(t,e,s,n)}(c,[u,l,e],"int32")}});class Qa{constructor(){this.classNameMap={}}static getMap(){return null==Qa.instance&&(Qa.instance=new Qa),Qa.instance}static register(t){Qa.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function to(t){rn(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),rn("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),rn(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Qa.register(t)}const eo=Gs({abs_:function(t){const e=js(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return Ps.runKernel("ComplexAbs",t)}{const t={x:e};return Ps.runKernel("Abs",t)}}});Gs({acos_:function(t){const e={x:js(t,"x","acos")};return Ps.runKernel("Acos",e)}}),Gs({acosh_:function(t){const e={x:js(t,"x","acosh")};return Ps.runKernel("Acosh",e)}}),Gs({addN_:function(t){rn(Array.isArray(t),(()=>"The argument passed to tf.addN() must be a list of tensors")),rn(t.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`));const e=t.map(((t,e)=>js(t,`tensors${e}`,"addN"))),n=e[0];e.forEach((t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((t=>{if(!hn(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const s=e;return Ps.runKernel("AddN",s)}}),Gs({all_:function(t,e=null,n=!1){const s={x:js(t,"x","all","bool")},r={axis:e,keepDims:n};return Ps.runKernel("All",s,r)}}),Gs({any_:function(t,e=null,n=!1){const s={x:js(t,"x","any","bool")},r={axis:e,keepDims:n};return Ps.runKernel("Any",s,r)}}),Gs({argMax_:function(t,e=0){const n={x:js(t,"x","argMax")},s={axis:e};return Ps.runKernel("ArgMax",n,s)}}),Gs({argMin_:function(t,e=0){const n={x:js(t,"x","argMin")},s={axis:e};return Ps.runKernel("ArgMin",n,s)}}),Gs({asin_:function(t){const e={x:js(t,"x","asin")};return Ps.runKernel("Asin",e)}}),Gs({asinh_:function(t){const e={x:js(t,"x","asinh")};return Ps.runKernel("Asinh",e)}}),Gs({atan_:function(t){const e={x:js(t,"x","atan")};return Ps.runKernel("Atan",e)}}),Gs({atan2_:function(t,e){let n=js(t,"a","atan2"),s=js(e,"b","atan2");[n,s]=Fs(n,s);const r={a:n,b:s};return Ps.runKernel("Atan2",r)}}),Gs({atanh_:function(t){const e={x:js(t,"x","atanh")};return Ps.runKernel("Atanh",e)}});const no=Gs({avgPool_:function(t,e,n,s,r){const i=js(t,"x","avgPool","float32");rn(Tr(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let a=i,o=!1;3===i.rank&&(o=!0,a=hr(i,[1,i.shape[0],i.shape[1],i.shape[2]])),rn(4===a.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`)),$r("avgPool",s,r);const l={x:a},u={filterSize:e,strides:n,pad:s,dimRoundingMode:r};let h=Ps.runKernel("AvgPool",l,u);return h=Hs(h,i.dtype),o?hr(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});Gs({avgPool3d_:function(t,e,n,s,r,i="NDHWC"){const a=js(t,"x","avgPool3d","float32");let o=a,l=!1;4===a.rank&&(l=!0,o=hr(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),rn(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),rn("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),$r("avgPool3d",s,r);const u={x:o},h={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:i};let c=Ps.runKernel("AvgPool3D",u,h);return c=Hs(c,o.dtype),l?hr(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}});const so=Gs({concat_:function(t,e=0){rn(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=qs(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)})),1===n.length)return Kr(n[0]);const s=n,r={axis:e};return Ps.runKernel("Concat",s,r)}});const ro=Gs({sigmoid_:function(t){const e={x:js(t,"x","sigmoid","float32")};return Ps.runKernel("Sigmoid",e)}});const io=Gs({tanh_:function(t){const e={x:js(t,"x","tanh","float32")};return Ps.runKernel("Tanh",e)}});Gs({basicLSTMCell_:function(t,e,n,s,r,i){const a=js(t,"forgetBias","basicLSTMCell"),o=js(e,"lstmKernel","basicLSTMCell"),l=js(n,"lstmBias","basicLSTMCell"),u=js(s,"data","basicLSTMCell"),h=js(r,"c","basicLSTMCell"),c=js(i,"h","basicLSTMCell"),p=so([u,c],1),d=Fr(p,o),f=yr(d,l),g=f.shape[0],m=f.shape[1]/4,b=[g,m],y=ca(f,[0,0],b),w=ca(f,[0,m],b),k=ca(f,[0,2*m],b),v=ca(f,[0,3*m],b),x=yr(Js(ro(y),io(w)),Js(h,ro(yr(a,k))));return[x,Js(io(x),ro(v))]}});const ao=Gs({batchToSpaceND_:function(t,e,n){const s=js(t,"x","batchToSpaceND"),r=e.reduce(((t,e)=>t*e));rn(s.rank>=1+e.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`)),rn(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),rn(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`));const i={x:s},a={blockShape:e,crops:n};return Ps.runKernel("BatchToSpaceND",i,a)}});const oo=Gs({batchNorm_:function(t,e,n,s,r,i){null==i&&(i=.001);const a=js(t,"x","batchNorm"),o=js(e,"mean","batchNorm"),l=js(n,"variance","batchNorm");let u,h;null!=r&&(u=js(r,"scale","batchNorm")),null!=s&&(h=js(s,"offset","batchNorm")),rn(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),rn(null==h||o.rank===h.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),rn(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const c=function(t){let e;return e=0===t.rank||1===t.rank?hr(t,[1,1,1,t.size]):2===t.rank?hr(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?hr(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(a),p={x:c,scale:u,offset:h,mean:o,variance:l},d={varianceEpsilon:i},f=Ps.runKernel("FusedBatchNorm",p,d);return hr(f,a.shape)}});Gs({batchNorm2d_:function(t,e,n,s,r,i){const a=js(t,"x","batchNorm"),o=js(e,"mean","batchNorm"),l=js(n,"variance","batchNorm");let u,h;return null!=r&&(u=js(r,"scale","batchNorm")),null!=s&&(h=js(s,"offset","batchNorm")),rn(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),rn(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),rn(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&rn(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=h&&rn(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`)),oo(a,o,l,h,u,i)}}),Gs({batchNorm3d_:function(t,e,n,s,r,i){const a=js(t,"x","batchNorm"),o=js(e,"mean","batchNorm"),l=js(n,"variance","batchNorm");let u,h;return null!=r&&(u=js(r,"scale","batchNorm")),null!=s&&(h=js(s,"offset","batchNorm")),rn(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),rn(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),rn(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&rn(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=h&&rn(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`)),oo(a,o,l,h,u,i)}}),Gs({batchNorm4d_:function(t,e,n,s,r,i){const a=js(t,"x","batchNorm"),o=js(e,"mean","batchNorm"),l=js(n,"variance","batchNorm");let u,h;return null!=r&&(u=js(r,"scale","batchNorm")),null!=s&&(h=js(s,"offset","batchNorm")),rn(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),rn(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),rn(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&rn(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=h&&rn(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`)),oo(a,o,l,h,u,i)}});const lo=Gs({bincount_:function(t,e,n){const s=js(t,"x","bincount"),r=js(e,"weights","bincount");rn("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),rn(n>=0,(()=>`size must be non-negative, but got ${n}.`)),rn(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const i={x:s,weights:r},a={size:n};return Ps.runKernel("Bincount",i,a)}});function uo(t,e="float32",n){return e=e||"float32",Nn(t),new Ns(t,e,n)}function ho(t,e,n){Nn(t);const s={shape:t,value:e,dtype:n};return Ps.runKernel("Fill",{},s)}Gs({broadcastArgs_:function(t,e){const n=js(t,"s0","broadcastArgs","int32"),s=js(e,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==s.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:n,s1:s};return Ps.runKernel("BroadcastArgs",r)}}),Gs({ceil_:function(t){const e={x:js(t,"x","ceil","float32")};return Ps.runKernel("Ceil",e)}}),Gs({clipByValue_:function(t,e,n){const s=js(t,"x","clipByValue");if(rn(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`)),e===n)return ho(s.shape,e,s.dtype);const r={x:s},i={clipValueMin:e,clipValueMax:n};return Ps.runKernel("ClipByValue",r,i)}}),Gs({concat1d_:function(t){return so(t,0)}}),Gs({concat2d_:function(t,e){return so(t,e)}}),Gs({concat3d_:function(t,e){return so(t,e)}}),Gs({concat4d_:function(t,e){return so(t,e)}}),Gs({conv1d_:function(t,e,n,s,r="NWC",i=1,a){const o=js(t,"x","conv1d"),l=js(e,"filter","conv1d");let u=o,h=!1;2===o.rank&&(h=!0,u=hr(o,[1,o.shape[0],o.shape[1]])),rn(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),rn(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),$r("conv1d",s,a),rn(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),rn(Tr(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),rn("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const c=hr(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=hr(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d=ti(p,c,[1,n],s,"NHWC",[1,i],a);return hr(d,h?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),Gs({conv2dTranspose_:function(t,e,n,s,r,i){const a=js(t,"x","conv2dTranspose"),o=js(e,"filter","conv2dTranspose");return Xr(n,a,o,s,r,"NHWC",i)}}),Gs({conv3d_:function(t,e,n,s,r="NDHWC",i=[1,1,1]){const a=js(t,"x","conv3d"),o=js(e,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=hr(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),rn(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),rn(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),rn(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),rn(Tr(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),rn("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const h={x:l,filter:o},c={strides:n,pad:s,dataFormat:r,dilations:i},p=Ps.runKernel("Conv3D",h,c);return u?hr(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Gs({conv3dTranspose_:function(t,e,n,s,r){const i=js(t,"x","conv3dTranspose"),a=js(e,"filter","conv3dTranspose");return si(n,i,a,s,r)}});const co=Gs({cos_:function(t){const e={x:js(t,"x","cos","float32")};return Ps.runKernel("Cos",e)}});const po=Gs({cosh_:function(t){const e={x:js(t,"x","cosh","float32")};return Ps.runKernel("Cosh",e)}});const fo=Gs({cumprod_:function(t,e=0,n=!1,s=!1){const r={x:js(t,"x","cumprod")},i={axis:e,exclusive:n,reverse:s};return Ps.runKernel("Cumprod",r,i)}});Gs({denseBincount_:function(t,e,n,s=!1){const r=js(t,"x","denseBincount"),i=js(e,"weights","denseBincount");rn("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),rn(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),rn(n>=0,(()=>`size must be non-negative, but got ${n}.`)),rn(i.size===r.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${i.shape}.`));const a={x:r,weights:i},o={size:n,binaryOutput:s};return Ps.runKernel("DenseBincount",a,o)}}),Gs({depthToSpace_:function(t,e,n="NHWC"){const s=js(t,"x","depthToSpace","float32"),r="NHWC"===n?s.shape[1]:s.shape[2],i="NHWC"===n?s.shape[2]:s.shape[3],a="NHWC"===n?s.shape[3]:s.shape[1];rn(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`)),rn(r*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${e}  for depthToSpace with input shape\n    ${s.shape}`)),rn(i*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e} for depthToSpace with input shape\n        ${s.shape}`)),rn(a%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:e,dataFormat:n};return Ps.runKernel("DepthToSpace",o,l)}});const go=Gs({depthwiseConv2d_:function(t,e,n,s,r="NHWC",i=[1,1],a){const o=js(t,"x","depthwiseConv2d","float32"),l=js(e,"filter","depthwiseConv2d","float32");let u=o,h=!1;3===o.rank&&(h=!0,u=hr(o,[1,o.shape[0],o.shape[1],o.shape[2]])),rn(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),rn(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const c="NHWC"===r?u.shape[3]:u.shape[1];rn(c===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${c}) must match the inChannels dimension in filter ${l.shape[2]}.`)),$r("depthwiseConv2d",s,a);const p={x:u,filter:l},d={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},f=Ps.runKernel("DepthwiseConv2dNative",p,d);return h?hr(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});Gs({diag_:function(t){const e={x:js(t,"x","diag")};return Ps.runKernel("Diag",e)}}),Gs({dilation2d_:function(t,e,n,s,r=[1,1],i="NHWC"){const a=js(t,"x","dilation2d"),o=js(e,"filter","dilation2d");rn(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),rn(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),rn("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=a,u=!1;3===a.rank&&(l=hr(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const h={x:l,filter:o},c={strides:n,pad:s,dilations:r},p=Ps.runKernel("Dilation2D",h,c);return u?hr(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Gs({divNoNan_:function(t,e){let n=js(t,"a","div"),s=js(e,"b","div");[n,s]=Fs(n,s);const r=Qs(n,s),i=fr(r),a=Yi(s,i);return qr(a,i,r)}}),Gs({dot_:function(t,e){const n=js(t,"t1","dot"),s=js(e,"t2","dot");rn(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],i=1===s.rank?s.size:s.shape[0];if(rn(r===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`)),1===n.rank&&1===s.rank){const t=hr(n,[1,-1]),e=hr(s,[-1,1]),r=Fr(t,e);return hr(r,[])}if(1===n.rank&&2===s.rank){const t=hr(n,[1,-1]),e=hr(s,[s.shape[0],s.shape[1]]),r=Fr(t,e);return hr(r,[r.size])}if(2===n.rank&&1===s.rank){const t=hr(s,[-1,1]),e=Fr(n,t);return hr(e,[e.size])}{const t=hr(s,[s.shape[0],s.shape[1]]);return Fr(n,t)}}}),Gs({einsum_:function(t,...e){const n=e.map(((t,e)=>js(t,`tensors${e}`,"einsum"))),s={equation:t};return Ps.runKernel("Einsum",n,s)}});const mo=Gs({elu_:function(t){const e={x:js(t,"x","elu","float32")};return Ps.runKernel("Elu",e)}});Gs({erf_:function(t){let e=js(t,"x","erf");rn("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=Hs(e,"float32"));const n={x:e};return Ps.runKernel("Erf",n)}});const bo=Gs({max_:function(t,e=null,n=!1){const s={x:js(t,"x","max")},r={reductionIndices:e,keepDims:n};return Ps.runKernel("Max",s,r)}});const yo=Gs({min_:function(t,e=null,n=!1){const s={x:js(t,"x","min")},r={axis:e,keepDims:n};return Ps.runKernel("Min",s,r)}});function wo(t,e,n=null){if(0===t.rank)return eo(t);if(1!==t.rank&&null===n)return wo(hr(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return cr(eo(t),n);if(e===1/0)return bo(eo(t),n);if(e===-1/0)return yo(eo(t),n);if("euclidean"===e||2===e)return sr(cr(Sa(eo(t),nr(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return bo(cr(eo(t),n[0]),n[1]-1);if(e===1/0)return bo(cr(eo(t),n[1]),n[0]);if(e===-1/0)return yo(cr(eo(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return sr(cr(rr(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const ko=Gs({norm_:function(t,e="euclidean",n=null,s=!1){const r=wo(t=js(t,"x","norm"),e,n);let i=r.shape;if(s){const e=dn(n,t.shape);i=ui(r.shape,e)}return hr(r,i)}});Gs({euclideanNorm_:function(t,e=null,n=!1){return ko(t,"euclidean",e,n)}});const vo=Gs({expandDims_:function(t,e=0){const n=js(t,"x","expandDims","string_or_numeric");rn(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:e};return Ps.runKernel("ExpandDims",s,r)}});Gs({expm1_:function(t){const e={x:js(t,"x","expm1")};return Ps.runKernel("Expm1",e)}});const xo=Gs({eye_:function(t,e,n,s="float32"){null==e&&(e=t);const r=uo([t,e],s),i=t<=e?t:e;for(let t=0;t<i;++t)r.set(1,t,t);const a=hr(r.toTensor(),[t,e]);if(null==n)return a;if(1===n.length)return Di(vo(a,0),[n[0],1,1]);if(2===n.length)return Di(vo(vo(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Di(vo(vo(vo(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const So=Gs({gather_:function(t,e,n=0,s=0){const r={x:js(t,"x","gather"),indices:js(e,"indices","gather","int32")},i={axis:n,batchDims:s};return Ps.runKernel("GatherV2",r,i)}});Gs({isFinite_:function(t){const e={x:js(t,"x","isFinite")};return Ps.runKernel("IsFinite",e)}}),Gs({isInf_:function(t){const e={x:js(t,"x","isInf")};return Ps.runKernel("IsInf",e)}}),Gs({isNaN_:function(t){const e={x:js(t,"x","isNaN")};return Ps.runKernel("IsNan",e)}});const No=Gs({leakyRelu_:function(t,e=.2){const n={x:js(t,"x","leakyRelu")},s={alpha:e};return Ps.runKernel("LeakyRelu",n,s)}});Gs({localResponseNormalization_:function(t,e=5,n=1,s=1,r=.5){const i=js(t,"x","localResponseNormalization");rn(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),rn(cn(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=hr(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:e,bias:n,alpha:s,beta:r},h=Ps.runKernel("LRN",l,u);return o?hr(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Eo=Gs({log1p_:function(t){const e={x:js(t,"x","log1p")};return Ps.runKernel("Log1p",e)}});function Io(t){return Ps.customGrad(t)}const Ao=Gs({softplus_:function(t){const e={x:js(t,"x","softplus")};return Ps.runKernel("Softplus",e)}});Gs({logSigmoid_:function(t){const e=js(t,"x","logSigmoid"),n=Io((t=>({value:tr(Ao(tr(t))),gradFunc:e=>Js(e,ro(tr(t)))})));return n(e)}}),Gs({logSoftmax_:function(t,e=-1){const n=js(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const s=Io(((t,n)=>{const s=bo(t,e,!0),r=ir(t,s),i=ir(Hs(r,"float32"),xa(cr(Ei(r),e,!0)));n([i]);return{value:i,gradFunc:(t,n)=>{const[s]=n,r=Ei(s);return ir(t,Js(cr(t,e,!0),r))}}}));return s(n)}});const To=Gs({logSumExp_:function(t,e=null,n=!1){const s=js(t,"x","logSumExp"),r=dn(e,s.shape),i=bo(s,r,!0),a=ir(s,i),o=Ei(a),l=cr(o,r),u=xa(l),h=yr(hr(i,u.shape),u);if(n){const t=ui(h.shape,r);return hr(h,t)}return h}});const $o=Gs({logicalNot_:function(t){const e={x:js(t,"x","logicalNot","bool")};return Ps.runKernel("LogicalNot",e)}});const Co=Gs({logicalOr_:function(t,e){const n=js(t,"a","logicalOr","bool"),s=js(e,"b","logicalOr","bool");ur(n.shape,s.shape);const r={a:n,b:s};return Ps.runKernel("LogicalOr",r)}});Gs({logicalXor_:function(t,e){const n=js(t,"a","logicalXor","bool"),s=js(e,"b","logicalXor","bool");return ur(n.shape,s.shape),Vr(Co(t,e),$o(Vr(t,e)))}});Gs({searchSorted_:function(t,e,n="left"){const s=js(t,"sortedSequence","searchSorted"),r=js(e,"values","searchSorted"),i=s.shape[s.shape.length-1],a=r.shape[r.shape.length-1],o=hr(s,[-1,i]),l=hr(r,[-1,a]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(un(l.shape)>=2147483648)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=2147483648)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},h={side:n};return Ps.runKernel("SearchSorted",u,h)}});const zo=Gs({maxPool_:function(t,e,n,s,r){const i=js(t,"x","maxPool");let a=i,o=!1;3===i.rank&&(o=!0,a=hr(i,[1,i.shape[0],i.shape[1],i.shape[2]])),rn(4===a.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`)),rn(Tr(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),$r("maxPool",s,r);const l={x:a},u={filterSize:e,strides:n,pad:s,dimRoundingMode:r},h=Ps.runKernel("MaxPool",l,u);return o?hr(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});Gs({maxPool3d_:function(t,e=[1,1,1],n,s,r,i="NDHWC"){const a=js(t,"x","maxPool3d");let o=a,l=!1;4===a.rank&&(l=!0,o=hr(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),rn(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),rn("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),$r("maxPool3d",s,r);const u={x:o},h={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:i},c=Ps.runKernel("MaxPool3D",u,h);return l?hr(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),Gs({maxPoolWithArgmax_:function(t,e,n,s,r=!1){const i={x:js(t,"x","maxPoolWithArgmax")},a={filterSize:e,strides:n,pad:s,includeBatchInIndex:r},o=Ps.runKernel("MaxPoolWithArgmax",i,a);return{result:o[0],indexes:o[1]}}});const _o=Gs({maximum_:function(t,e){let n=js(t,"a","maximum"),s=js(e,"b","maximum");[n,s]=Fs(n,s),"bool"===n.dtype&&(n=Hs(n,"int32"),s=Hs(s,"int32")),ur(n.shape,s.shape);const r={a:n,b:s};return Ps.runKernel("Maximum",r)}});const Do=Gs({mean_:function(t,e=null,n=!1){const s={x:js(t,"x","mean")},r={axis:e,keepDims:n};return Ps.runKernel("Mean",s,r)}});const Fo=Gs({minimum_:function(t,e){let n=js(t,"a","minimum"),s=js(e,"b","minimum");[n,s]=Fs(n,s),"bool"===n.dtype&&(n=Hs(n,"int32"),s=Hs(s,"int32")),ur(n.shape,s.shape);const r={a:n,b:s};return Ps.runKernel("Minimum",r)}});Gs({mirrorPad_:function(t,e,n){rn("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=js(t,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");rn(e.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`));const r="reflect"===n?1:0;for(let t=0;t<s.rank;t++)rn(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),rn(e[t][0]>=0&&e[t][0]<=s.shape[t]-r&&e[t][1]>=0&&e[t][1]<=s.shape[t]-r,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${s.shape[t]-r} or less than 0 for input of shape ${s.shape}`));const i={paddings:e,mode:n},a={x:s};return Ps.runKernel("MirrorPad",a,i)}}),Gs({mod_:function(t,e){let n=js(t,"a","mod"),s=js(e,"b","mod");[n,s]=Fs(n,s);const r={a:n,b:s};return Ps.runKernel("Mod",r)}}),Gs({moments_:function(t,e=null,n=!1){const s=dn(e,(t=js(t,"x","moments")).shape),r=Do(t,s,n);let i=r.shape;n||(i=ui(r.shape,s));const a=rr(ir(Hs(t,"float32"),hr(r,i)));return{mean:r,variance:Do(a,s,n)}}}),Gs({multiRNNCell_:function(t,e,n,s){const r=js(e,"data","multiRNNCell"),i=qs(n,"c","multiRNNCell"),a=qs(s,"h","multiRNNCell");let o=r;const l=[];for(let e=0;e<t.length;e++){const n=t[e](o,i[e],a[e]);l.push(n[0]),l.push(n[1]),o=n[1]}const u=[],h=[];for(let t=0;t<l.length;t+=2)u.push(l[t]),h.push(l[t+1]);return[u,h]}}),Gs({multinomial_:function(t,e,n,s=!1){const r=js(t,"logits","multinomial"),i=r.size,a=r.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);n=n||Math.random();const o={logits:1===a?hr(r,[1,-1]):r},l={numSamples:e,seed:n,normalized:s},u=Ps.runKernel("Multinomial",o,l);return 1===a?hr(u,[u.size]):u}});const Ro=Gs({notEqual_:function(t,e){let n=js(t,"a","notEqual","string_or_numeric"),s=js(e,"b","notEqual","string_or_numeric");[n,s]=Fs(n,s),ur(n.shape,s.shape);const r={a:n,b:s};return Ps.runKernel("NotEqual",r)}});Gs({onesLike_:function(t){const e={x:js(t,"x","onesLike")};return Ps.runKernel("OnesLike",e)}}),Gs({outerProduct_:function(t,e){const n=js(t,"v1","outerProduct"),s=js(e,"v2","outerProduct");rn(1===n.rank&&1===s.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`));const r=hr(n,[-1,1]),i=hr(s,[1,-1]);return Fr(r,i)}});const Mo=Gs({pad_:function(t,e,n=0){const s=js(t,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:n},i={x:s};return Ps.runKernel("PadV2",i,r)}});Gs({pad1d_:function(t,e,n=0){return rn(2===e.length,(()=>"Invalid number of paddings. Must be length of 2.")),Mo(t,[e],n)}}),Gs({pad2d_:function(t,e,n=0){return rn(2===e.length&&2===e[0].length&&2===e[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Mo(t,e,n)}}),Gs({pad3d_:function(t,e,n=0){return rn(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Mo(t,e,n)}}),Gs({pad4d_:function(t,e,n=0){return rn(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Mo(t,e,n)}}),Gs({pool_:function(t,e,n,s,r,i,a){null==r&&(r=[1,1]),null==i&&(i=1),0===s&&(s="valid");const o=js(t,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=hr(o,[1,o.shape[0],o.shape[1],o.shape[2]])),rn(Tr(i,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`));const h=function(t,e,n,s,r,i,a="channelsLast"){const[o,l]=Nr(e);let u;if("channelsLast"===a)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,t[1],t[1]]}return Sr(t,u,n,s,r,i,!1,a)}(l.shape,e,i,r,s),c=[h.dilationHeight,h.dilationWidth];let p;p="same"===s?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),s=n.map((t=>Math.floor(t/2))),r=n.map(((t,e)=>t-s[e]));return n.map(((t,e)=>[s[e],r[e]]))}([h.filterHeight,h.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[f,g]=function(t,e,n){const s=n.map((t=>t[0])),r=n.map((t=>t[1])),i=t.concat(s,r),a=e.map(((t,e)=>(t-i[e]%t)%t)),o=r.map(((t,e)=>t+a[e])),l=e.map(((t,e)=>[s[e],o[e]])),u=e.map(((t,e)=>[0,a[e]]));return[l,u]}([h.inHeight,h.inWidth],c,p),m=d?s:"valid",b=d?l:Mr(l,c,f),y=("avg"===n?()=>no(b,e,i,m,a):()=>zo(b,e,i,m,a))(),w=d?y:ao(y,c,g);return u?hr(w,[w.shape[1],w.shape[2],w.shape[3]]):w}});const Lo=Gs({prelu_:function(t,e){const n={x:js(t,"x","prelu"),alpha:js(e,"alpha","prelu")};return Ps.runKernel("Prelu",n)}});Gs({prod_:function(t,e=null,n=!1){let s=js(t,"x","prod");"bool"===s.dtype&&(s=Hs(s,"int32"));const r={x:s},i={axis:e,keepDims:n};return Ps.runKernel("Prod",r,i)}}),Gs({raggedGather_:function(t,e,n,s){const r={paramsNestedSplits:t.map(((t,e)=>js(t,`tensors${e}`,"raggedGather","int32"))),paramsDenseValues:js(e,"paramsDenseValues","raggedGather"),indices:js(n,"indices","raggedGather","int32")},i={outputRaggedRank:s},a=Ps.runKernel("RaggedGather",r,i);return{outputNestedSplits:a.slice(0,a.length-1),outputDenseValues:a[a.length-1]}}}),Gs({raggedRange_:function(t,e,n){const s=js(t,"starts","raggedRange"),r={starts:s,limits:js(e,"limits","raggedRange",s.dtype),deltas:js(n,"deltas","raggedRange",s.dtype)},i=Ps.runKernel("RaggedRange",r);return{rtNestedSplits:i[0],rtDenseValues:i[1]}}}),Gs({raggedTensorToTensor_:function(t,e,n,s,r){const i=js(t,"shape","raggedTensorToTensor","int32"),a=js(e,"values","raggedTensorToTensor"),o={shape:i,values:a,defaultValue:js(n,"defaultValue","raggedTensorToTensor",a.dtype),rowPartitionTensors:s.map(((t,e)=>js(t,`tensors${e}`,"raggedTensorToTensor","int32")))},l={rowPartitionTypes:r};return Ps.runKernel("RaggedTensorToTensor",o,l)}}),Gs({rand_:function(t,e,n){Nn(t);const s=un(t);let r=null;if(null==n||"float32"===n)r=new Float32Array(s);else if("int32"===n)r=new Int32Array(s);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);r=new Uint8Array(s)}for(let t=0;t<s;t++)r[t]=e();return Ps.makeTensor(r,t,n)}});var Oo="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function Bo(t){if(t.__esModule)return t;var e=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(t).forEach((function(n){var s=Object.getOwnPropertyDescriptor(t,n);Object.defineProperty(e,n,s.get?s:{enumerable:!0,get:function(){return t[n]}})})),e}function Po(t){var e={exports:{}};return t(e,e.exports),e.exports}var Wo=Po((function(t){!function(t,e,n){function s(t){var e,n=this,s=(e=4022871197,function(t){t=String(t);for(var n=0;n<t.length;n++){var s=.02519603282416938*(e+=t.charCodeAt(n));s-=e=s>>>0,e=(s*=e)>>>0,e+=4294967296*(s-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(t),n.s0<0&&(n.s0+=1),n.s1-=s(t),n.s1<0&&(n.s1+=1),n.s2-=s(t),n.s2<0&&(n.s2+=1),s=null}function r(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function i(t,e){var n=new s(t),i=e&&e.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,i&&("object"==typeof i&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:n&&n.amd?n((function(){return i})):this.alea=i}(0,t,!1)})),Uo=Po((function(t){!function(t,e,n){function s(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),e.next()}function r(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function i(t,e){var n=new s(t),i=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,i&&("object"==typeof i&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:n&&n.amd?n((function(){return i})):this.xor128=i}(0,t,!1)})),Vo=Po((function(t){!function(t,e,n){function s(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),s==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function r(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function i(t,e){var n=new s(t),i=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,i&&("object"==typeof i&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:n&&n.amd?n((function(){return i})):this.xorwow=i}(0,t,!1)})),Ko=Po((function(t){!function(t,e,n){function s(t){var e=this;e.next=function(){var t,n,s=e.x,r=e.i;return t=s[r],n=(t^=t>>>7)^t<<24,n^=(t=s[r+1&7])^t>>>10,n^=(t=s[r+3&7])^t>>>3,n^=(t=s[r+4&7])^t<<7,t=s[r+7&7],n^=(t^=t<<13)^t<<9,s[r]=n,e.i=r+1&7,n},function(t,e){var n,s=[];if(e===(0|e))s[0]=e;else for(e=""+e,n=0;n<e.length;++n)s[7&n]=s[7&n]<<15^e.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n&&(s[7]=-1),t.x=s,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function r(t,e){return e.x=t.x.slice(),e.i=t.i,e}function i(t,e){null==t&&(t=+new Date);var n=new s(t),i=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,i&&(i.x&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:n&&n.amd?n((function(){return i})):this.xorshift7=i}(0,t,!1)})),jo=Po((function(t){!function(t,e,n){function s(t){var e=this;e.next=function(){var t,n,s=e.w,r=e.X,i=e.i;return e.w=s=s+1640531527|0,n=r[i+34&127],t=r[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[i]=n^t,e.i=i,n+(s^s>>>16)|0},function(t,e){var n,s,r,i,a,o=[],l=128;for(e===(0|e)?(s=e,e=null):(e+="\0",s=0,l=Math.max(l,e.length)),r=0,i=-32;i<l;++i)e&&(s^=e.charCodeAt((i+32)%e.length)),0===i&&(a=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,i>=0&&(a=a+1640531527|0,r=0==(n=o[127&i]^=s+a)?r+1:0);for(r>=128&&(o[127&(e&&e.length||0)]=-1),r=127,i=512;i>0;--i)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;t.w=a,t.X=o,t.i=r}(e,t)}function r(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function i(t,e){null==t&&(t=+new Date);var n=new s(t),i=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,i&&(i.X&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:n&&n.amd?n((function(){return i})):this.xor4096=i}(0,t,!1)})),qo=Po((function(t){!function(t,e,n){function s(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,s=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-s|0,e.d=s<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var s=0;s<n.length+20;s++)e.b^=0|n.charCodeAt(s),e.next()}function r(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function i(t,e){var n=new s(t),i=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,i&&("object"==typeof i&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:n&&n.amd?n((function(){return i})):this.tychei=i}(0,t,!1)})),Go=Bo({__proto__:null,default:{}}),Ho=Po((function(t){!function(e,n,s){var r,i=256,a=s.pow(i,6),o=s.pow(2,52),l=2*o,u=255;function h(t,u,h){var m=[],b=f(d((u=1==u?{entropy:!0}:u||{}).entropy?[t,g(n)]:null==t?function(){try{var t;return r&&(t=r.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),g(t)}catch(t){var s=e.navigator,a=s&&s.plugins;return[+new Date,e,a,e.screen,g(n)]}}():t,3),m),y=new c(m),w=function(){for(var t=y.g(6),e=a,n=0;t<o;)t=(t+n)*i,e*=i,n=y.g(1);for(;t>=l;)t/=2,e/=2,n>>>=1;return(t+n)/e};return w.int32=function(){return 0|y.g(4)},w.quick=function(){return y.g(4)/4294967296},w.double=w,f(g(y.S),n),(u.pass||h||function(t,e,n,r){return r&&(r.S&&p(r,y),t.state=function(){return p(y,{})}),n?(s.random=t,e):t})(w,b,"global"in u?u.global:this==s,u.state)}function c(t){var e,n=t.length,s=this,r=0,a=s.i=s.j=0,o=s.S=[];for(n||(t=[n++]);r<i;)o[r]=r++;for(r=0;r<i;r++)o[r]=o[a=u&a+t[r%n]+(e=o[r])],o[a]=e;(s.g=function(t){for(var e,n=0,r=s.i,a=s.j,o=s.S;t--;)e=o[r=u&r+1],n=n*i+o[u&(o[r]=o[a=u&a+e])+(o[a]=e)];return s.i=r,s.j=a,n})(i)}function p(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function d(t,e){var n,s=[],r=typeof t;if(e&&"object"==r)for(n in t)try{s.push(d(t[n],e-1))}catch(t){}return s.length?s:"string"==r?t:t+"\0"}function f(t,e){for(var n,s=t+"",r=0;r<s.length;)e[u&r]=u&(n^=19*e[u&r])+s.charCodeAt(r++);return g(e)}function g(t){return String.fromCharCode.apply(0,t)}if(f(s.random(),n),t.exports){t.exports=h;try{r=Go}catch(t){}}else s.seedrandom=h}("undefined"!=typeof self?self:Oo,[],Math)}));Ho.alea=Wo,Ho.xor128=Uo,Ho.xorwow=Vo,Ho.xorshift7=Ko,Ho.xor4096=jo,Ho.tychei=qo;var Jo=Ho;class Zo{constructor(t,e,n,s,r){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=r||Math.random();this.random=Jo.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let s,r,i;do{s=2*this.random()-1,r=2*this.random()-1,i=s*s+r*r}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*s*a,e=this.mean+this.stdDev*r*a,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Yo{constructor(t,e,n,s){this.alpha=t,this.beta=1/e,this.dtype=n;const r=s||Math.random();this.randu=Jo.alea(r.toString()),this.randn=new Zo(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,s,r,i;for(;;){do{s=this.randn.nextValue(),i=1+this.c*s}while(i<=0);if(i*=i*i,t=s*s,e=1-.331*t*t,n=.5*t+this.d*(1-i+Math.log(i)),r=this.randu(),r<e||Math.log(r)<n)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class Xo{constructor(t=0,e=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Jo.alea(s)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}Gs({randomGamma_:function(t,e,n=1,s="float32",r){if(Nn(t),null==n&&(n=1),null==s&&(s="float32"),"float32"!==s&&"int32"!==s)throw new Error(`Unsupported data type ${s}`);const i=new Yo(e,n,s,r),a=uo(t,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}});const Qo=Gs({randomNormal_:function(t,e=0,n=1,s,r){if(Nn(t),null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const i=new Zo(e,n,s,!1,r),a=uo(t,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}});Gs({randomStandardNormal_:function(t,e,n){if(null!=e&&"bool"===e)throw new Error(`Unsupported data type ${e}`);return Qo(t,0,1,e,n)}});const tl=Gs({randomUniform_:function(t,e=0,n=1,s="float32",r){Nn(t);const i=uo(t,s),a=new Xo(e,n,null,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}});function el(t,e,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:t,stop:e,step:n,dtype:s};return Ps.runKernel("Range",{},r)}Gs({reciprocal_:function(t){const e={x:js(t,"x","reciprocal")};return Ps.runKernel("Reciprocal",e)}});const nl=Gs({relu_:function(t){const e={x:js(t,"x","relu")};return Ps.runKernel("Relu",e)}});const sl=Gs({relu6_:function(t){const e={x:js(t,"x","relu6")};return Ps.runKernel("Relu6",e)}});const rl=Gs({reverse_:function(t,e){const n={x:js(t,"x","reverse")},s={dims:e};return Ps.runKernel("Reverse",n,s)}});Gs({reverse1d_:function(t){const e=js(t,"x","reverse");return rn(1===e.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`)),rl(e,0)}}),Gs({reverse2d_:function(t,e){const n=js(t,"x","reverse");return rn(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),rl(n,e)}}),Gs({reverse3d_:function(t,e){const n=js(t,"x","reverse");return rn(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),rl(n,e)}}),Gs({reverse4d_:function(t,e){const n=js(t,"x","reverse");return rn(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),rl(n,e)}});const il=Gs({round_:function(t){const e={x:js(t,"x","round")};return Ps.runKernel("Round",e)}});Gs({selu_:function(t){const e={x:js(t,"x","selu")};return Ps.runKernel("Selu",e)}}),Gs({separableConv2d_:function(t,e,n,s,r,i=[1,1],a="NHWC"){const o=js(t,"x","separableConv2d"),l=js(e,"depthwiseFilter","separableConv2d"),u=js(n,"pointwiseFilter","separableConv2d");let h=o,c=!1;if(3===o.rank&&(c=!0,h=hr(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");rn(4===h.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`)),rn(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),rn(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),rn(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),rn(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],d=l.shape[3];rn(u.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${u.shape[2]}.`));const f=go(h,l,s,r,a,i),g=ti(f,u,1,"valid",a);return c?hr(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Gs({sign_:function(t){const e={x:js(t,"x","sign")};return Ps.runKernel("Sign",e)}}),Gs({slice1d_:function(t,e,n){const s=js(t,"x","slice1d");return rn(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),ca(s,[e],[n])}}),Gs({slice2d_:function(t,e,n){const s=js(t,"x","slice2d");return rn(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),ca(s,e,n)}}),Gs({slice3d_:function(t,e,n){const s=js(t,"x","slice3d");return rn(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),ca(s,e,n)}}),Gs({slice4d_:function(t,e,n){const s=js(t,"x","slice4d");return rn(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),ca(s,e,n)}}),Gs({softmax_:function(t,e=-1){const n=js(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const s={logits:n},r={dim:e};return Ps.runKernel("Softmax",s,r)}});const al=Gs({fft_:function(t){rn("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return Ps.runKernel("FFT",e)}});const ol=Gs({ifft_:function(t){rn("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return Ps.runKernel("IFFT",e)}});Gs({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let s;if(e<=2){const r=hr(t,[n,e]);s=ol(r)}else{const r=[n,2*(e-1)],i=hr(bi(t),[n,e]),a=hr(mi(t),[n,e]),o=rl(ca(i,[0,1],[n,e-2]),1),l=Js(rl(ca(a,[0,1],[n,e-2]),1),nr(-1)),u=so([i,o],1),h=so([a,l],1),c=hr(gi(u,h),[r[0],r[1]]);s=ol(c)}if(s=bi(s),3===t.rank&&0!==t.shape[0]){const e=s,n=t.shape[0];s=hr(s,[n,s.shape[0]/n,s.shape[1]]),e.dispose()}return s}});const ll=Gs({rfft_:function(t,e){rn("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const s=t.size/n;let r;if(null!=e&&e<n){const s=t.shape.map((t=>0)),i=t.shape.map((t=>t));i[t.shape.length-1]=e,r=ca(t,s,i),n=e}else if(null!=e&&e>n){const s=t.shape.map((t=>t));s[t.shape.length-1]=e-n,r=so([t,aa(s)],t.shape.length-1),n=e}else r=t;const i=fr(r),a=hr(gi(r,i),[s,n]),o=al(a),l=Math.floor(n/2)+1,u=bi(o),h=mi(o),c=Jr(u,[l,n-l],u.shape.length-1),p=Jr(h,[l,n-l],h.shape.length-1),d=r.shape.slice();return d[r.shape.length-1]=l,hr(gi(c[0],p[0]),d)}});const ul=Gs({squaredDifference_:function(t,e){let n=js(t,"a","squaredDifference"),s=js(e,"b","squaredDifference");[n,s]=Fs(n,s),ur(n.shape,s.shape);const r={a:n,b:s};return Ps.runKernel("SquaredDifference",r,{})}});const hl=Gs({squeeze_:function(t,e){const n=js(t,"x","squeeze","string_or_numeric");return hr(n,function(t,e){const n=[],s=[],r=null!=e&&Array.isArray(e)&&0===e.length,i=null==e||r?null:dn(e,t).sort();let a=0;for(let e=0;e<t.length;++e){if(null!=i){if(i[a]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==i[a]||i[a]>e)&&1===t[e]&&(n.push(t[e]),s.push(e)),i[a]<=e&&a++}1!==t[e]&&(n.push(t[e]),s.push(e))}return{newShape:n,keptDims:s}}(n.shape,e).newShape)}});const cl=Gs({stack_:function(t,e=0){const n=qs(t,"tensors","stack","string_or_numeric");rn(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&rn(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:e};return Ps.runKernel("Pack",s,r)}});function pl(t,e){on(t);const n=Us(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return er(t,null,n,e)}function dl(t,e,n){if(on(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const s=Us(t,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return er(t,e,s,n)}function fl(t,e,n){const s=1-t%2,r=new Float32Array(t);for(let i=0;i<t;++i){const a=2*Math.PI*i/(t+s-1);r[i]=e-n*Math.cos(a)}return pl(r,"float32")}function gl(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Js(t,Zs(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function ml(t,e){let n=e;const s=lr(t.shape,e.shape);return s.length>0&&(n=cr(n,s)),hr(n,t.shape)}function bl(t,e,n,s){if("linear"===e)return t;if("relu"===e)return nl(t);if("elu"===e)return mo(t);if("relu6"===e)return sl(t);if("prelu"===e)return Lo(t,n);if("leakyrelu"===e)return No(t,s);if("sigmoid"===e)return ro(t);throw new Error(`Unknown fused activation ${e}.`)}Gs({stridedSlice_:function(t,e,n,s,r=0,i=0,a=0,o=0,l=0){const u={x:js(t,"x","stridedSlice","string_or_numeric")},h={begin:e,end:n,strides:s,beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return Ps.runKernel("StridedSlice",u,h)}}),Gs({tan_:function(t){const e={x:js(t,"x","tan","float32")};return Ps.runKernel("Tan",e)}}),Gs({topk_:function(t,e=1,n=!0){const s=js(t,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const i={x:s},a={k:e,sorted:n},[o,l]=Ps.runKernel("TopK",i,a);return{values:o,indices:l}}}),Gs({truncatedNormal_:function(t,e=0,n=1,s,r){if(Nn(t),null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const i=new Zo(e,n,s,!0,r),a=uo(t,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),Gs({unique_:function(t,e=0){const n=js(t,"x","unique","string_or_numeric");rn(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:e},[i,a]=Ps.runKernel("Unique",s,r);return{values:i,indices:a}}}),Gs({movingAverage_:function(t,e,n,s,r=!0){const i=js(t,"v","movingAverage"),a=js(e,"x","movingAverage"),o=js(n,"decay","movingAverage");var l,u;u=a,rn((l=i).dtype===u.dtype,(()=>`The dtypes of the first(${l.dtype}) and second(${u.dtype}) input must match`)),rn(hn(i.shape,a.shape),(()=>"Shape mismatch in v and x"));const h=nr(1),c=ir(h,o);let p=Js(ir(a,i),c);if(r){rn(null!=s,(()=>"When using zeroDebias: true, step is required."));const t=js(s,"step","movingAverage");p=Qs(p,ir(h,Sa(o,t)))}return yr(i,p)}}),Gs({scatterND_:function(t,e,n){Nn(n);const s=js(t,"indices","scatterND","int32"),r=js(e,"updates","scatterND");Xa(r,s,n);const i={indices:s,updates:r},a={shape:n};return Ps.runKernel("ScatterNd",i,a)}}),Gs({sparseToDense_:function(t,e,n,s=0){Nn(n);const r=js(t,"sparseIndices","sparseToDense","int32"),i=js(e,"sparseValues","sparseToDense","string_or_numeric"),a=js(s,"defaultValue","sparseToDense",i.dtype);!function(t,e,n,s){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const r=t.rank>0?t.shape[0]:1,i=t.rank>1?t.shape[1]:1;if(n.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${i}.`);const a=e.size;if(0!==e.rank&&(1!==e.rank||a!==r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,i,n,a);const o={sparseIndices:r,sparseValues:i,defaultValue:a},l={outputShape:n};return Ps.runKernel("SparseToDense",o,l)}}),Gs({gatherND_:function(t,e){const n=js(e,"indices","gatherND","int32"),s={params:js(t,"x","gatherND","string_or_numeric"),indices:n};return Ps.runKernel("GatherNd",s)}}),Gs({dropout_:function(t,e,n,s){const r=js(t,"x","dropout");if(rn("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),rn(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof Is?r.clone():r;const i=function(t,e){if(null==e)return t.shape.slice();if(hn(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let s=0;s<t.shape.length;s++)null==e[s]&&null!=t.shape[s]?n.push(t.shape[s]):n.push(e[s]);return n}return e}(r,n),a=1-e,o=Qs(da(yr(tl(i,0,1,"float32",s),a)),a);return Js(r,o)}});const yl=(t,e)=>!(t>0)||"linear"===e;Gs({fusedConv2d_:function({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(l=l||"linear",!1===yl(Ps.state.gradientDepth,l)){rn("NHWC"===r,(()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let c=ti(t,e,n,s,r,i,a);return null!=o&&(c=yr(c,o)),bl(c,l,u,h)}const c=js(t,"x","conv2d","float32"),p=js(e,"filter","conv2d","float32");let d=c,f=!1;3===c.rank&&(f=!0,d=hr(c,[1,c.shape[0],c.shape[1],c.shape[2]])),rn(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),rn(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),$r("fused conv2d",s,a);const g="NHWC"===r?d.shape[3]:d.shape[1];rn(p.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${p.shape[2]}.`)),rn(Tr(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const m=Sr(d.shape,p.shape,n,i,s,a);let b,y;if(null!=o&&(b=js(o,"bias","fused conv2d"),[b]=Fs(b,c),"NHWC"===r?ur(m.outShape,b.shape):(rn(b.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`)),rn(0===b.shape.length||b.shape[0]===m.outChannels||1===b.shape[0],(()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${m.outChannels})`)))),null!=u){const t=u.shape;if(rn(t.length<=1||3===t.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${t.length}.`)),1===t.length)rn(1===t[0]||t[0]===m.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${t}) is not compatible with the number of output channels (${m.outChannels}).`));else if(3===t.length)try{ur(t,m.outShape)}catch(e){const n=`Error in fused conv2d: PReLU activation weights (${t}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(n)}y=js(u,"prelu weights","fused conv2d")}const w=(t,e)=>{rn("NHWC"===r,(()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`));const[a,o,u,h]=e,c=gl(t,u,l);rn(Ar(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const p=[Xr(o.shape,c,a,n,s),Yr(o,c,a.shape,n,s)];if(null!=h){const t=ml(h,c);p.push(t)}return p},k={x:d,filter:p,bias:b,preluActivationWeights:y},v={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:h};if(null==o){const t=Io(((t,e,n)=>{let s=Ps.runKernel("FusedConv2D",k,v);return n([e,t,s]),f&&(s=hr(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:w}}));return t(d,p)}{const t=Io(((t,e,n,s)=>{let r=Ps.runKernel("FusedConv2D",k,v);return s([e,t,r,n]),f&&(r=hr(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}}));return t(d,p,b)}}}),Gs({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(!1===yl(Ps.state.gradientDepth,l)){let c=go(t,e,n,s,r,i,a);return null!=o&&(c=yr(c,o)),bl(c,l,u,h)}const c=js(t,"x","depthwiseConv2d","float32"),p=js(e,"filter","depthwiseConv2d","float32");let d=c,f=!1;3===c.rank&&(f=!0,d=hr(c,[1,c.shape[0],c.shape[1],c.shape[2]])),rn(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),rn(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),rn(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==i&&(i=[1,1]),rn(Tr(n,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),$r("fused depthwiseConv2d",s,a);const g=Sr(d.shape,p.shape,n,i,s,a,!0);let m,b;null!=o&&(m=js(o,"bias","fused conv2d"),[m]=Fs(m,c),ur(g.outShape,m.shape)),null!=u&&(b=js(u,"prelu weights","fused depthwiseConv2d"));const y=(t,e)=>{rn(Ar(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[r,o,u,h]=e,c=gl(t,u,l),p=vi(o.shape,c,r,n,s,i,a),d=ki(o,c,r.shape,n,s,i,a);if(null!=h){return[p,d,ml(m,c)]}return[p,d]},w={x:d,filter:p,bias:m,preluActivationWeights:b},k={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:h};if(null==o){const t=Io(((t,e,n)=>{let s=Ps.runKernel("FusedDepthwiseConv2D",w,k);return n([e,t,s]),f&&(s=hr(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}));return t(d,p)}{const t=Io(((t,e,n,s)=>{let r=Ps.runKernel("FusedDepthwiseConv2D",w,k);return s([e,t,r,n]),f&&(r=hr(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}));return t(d,p,m)}}}),Gs({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(!1===yl(Ps.state.gradientDepth,i)){let l=Fr(t,e,n,s);return null!=r&&(l=yr(l,r)),bl(l,i,a,o)}let l=js(t,"a","fused matMul"),u=js(e,"b","fused matMul");[l,u]=Fs(l,u);const h=n?l.shape[l.rank-2]:l.shape[l.rank-1],c=s?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],d=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),g=u.shape.slice(0,-2),m=un(f),b=un(g);rn(h===c,(()=>`Error in fused matMul: inner shapes (${h}) and (${c}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`));const y=ur(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,d]),w=hr(l,n?[m,h,p]:[m,p,h]),k=hr(u,s?[b,d,c]:[b,c,d]);let v,x;null!=r&&(v=js(r,"bias","fused matMul"),[v]=Fs(v,l),ur(y,v.shape)),null!=a&&(x=js(a,"prelu weights","fused matMul"));const S=(t,e)=>{const[a,o,l,u]=e,h=gl(hr(t,l.shape),l,i);let c,p;if(n||s?!n&&s?(c=Fr(h,o,!1,!1),p=Fr(h,a,!0,!1)):n&&!s?(c=Fr(o,h,!1,!0),p=Fr(a,h,!1,!1)):(c=Fr(o,h,!0,!0),p=Fr(h,a,!0,!0)):(c=Fr(h,o,!1,!0),p=Fr(a,h,!0,!1)),null!=r){return[c,p,ml(u,h)]}return[c,p]},N={a:w,b:k,bias:v,preluActivationWeights:x},E={transposeA:n,transposeB:s,activation:i,leakyreluAlpha:o};if(null==r){const t=Io(((t,e,n)=>{const s=Ps.runKernel("_FusedMatMul",N,E);return n([t,e,s]),{value:hr(s,y),gradFunc:S}}));return t(w,k)}{const t=Io(((t,e,n,s)=>{const r=Ps.runKernel("_FusedMatMul",N,E);return s([t,e,r,n]),{value:hr(r,y),gradFunc:S}}));return t(w,k,v)}}}),Gs({hammingWindow_:function(t){return fl(t,.54,.46)}});const wl=Gs({hannWindow_:function(t){return fl(t,.5,.5)}});const kl=Gs({frame_:function(t,e,n,s=!1,r=0){let i=0;const a=[];for(;i+e<=t.size;)a.push(ca(t,i,e)),i+=n;if(s)for(;i<t.size;){const s=i+e-t.size,o=so([ca(t,i,e-s),ho([s],r)]);a.push(o),i+=n}return 0===a.length?dl([],[0,e]):hr(so(a),[a.length,e])}});function vl(t,e,n,s,r,i){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=t.shape[0];return n=Math.min(n,a),rn(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),rn(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),rn(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),rn(1===e.rank,(()=>"scores must be a 1D tensor")),rn(e.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`)),rn(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:i}}function xl(t,e=!1){return Ps.tidy((()=>{rn(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],s=t.shape[1];let r=xo(n),i=Kr(t);const a=dl([[1]],[1,1]);let o=Kr(a);const l=n>=s?s:n;for(let t=0;t<l;++t){const e=i,l=o,u=r;[o,i,r]=Ps.tidy((()=>{const e=ca(i,[t,t],[n-t,1]),l=ko(e),u=ca(i,[t,t],[1,1]),h=qr(Ki(u,0),dl([[-1]]),dl([[1]])),c=ir(u,Js(h,l)),p=Qs(e,c);o=1===p.shape[0]?Kr(a):so([a,ca(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=tr(Qs(Fr(h,c),l)),f=ca(i,[t,0],[n-t,s]),g=Js(d,o),m=yi(o);if(0===t)i=ir(f,Fr(g,Fr(m,f)));else{const e=ir(f,Fr(g,Fr(m,f)));i=so([ca(i,[0,0],[t,s]),e],0)}const b=yi(g),y=ca(r,[0,t],[n,r.shape[1]-t]);if(0===t)r=ir(y,Fr(Fr(y,o),b));else{const e=ir(y,Fr(Fr(y,o),b));r=so([ca(r,[0,0],[n,t]),e],1)}return[o,i,r]})),fi([e,l,u])}return!e&&n>s&&(r=ca(r,[0,0],[n,s]),i=ca(i,[0,0],[s,s])),[r,i]}))}var Sl;Gs({stft_:function(t,e,n,s,r=wl){var i;null==s&&(i=e,s=Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2)))));const a=kl(t,e,n),o=Js(a,r(e));return ll(o,s)}}),Gs({cropAndResize_:function(t,e,n,s,r="bilinear",i=0){const a=js(t,"image","cropAndResize"),o=js(e,"boxes","cropAndResize","float32"),l=js(n,"boxInd","cropAndResize","int32"),u=o.shape[0];rn(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),rn(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),rn(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),rn(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),rn(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),rn("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const h={image:a,boxes:o,boxInd:l},c={method:r,extrapolationValue:i,cropSize:s};return Ps.runKernel("CropAndResize",h,c)}}),Gs({flipLeftRight_:function(t){const e=js(t,"image","flipLeftRight","float32");rn(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return Ps.runKernel("FlipLeftRight",n,{})}}),Gs({grayscaleToRGB_:function(t){const e=js(t,"image","grayscaleToRGB"),n=e.rank-1,s=e.shape[n];rn(e.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`)),rn(1===s,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`));const r=new Array(e.rank);return r.fill(1,0,n),r[n]=3,Di(e,r)}}),Gs({rotateWithOffset_:function(t,e,n=0,s=.5){const r=js(t,"image","rotateWithOffset","float32");rn(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const i={image:r},a={radians:e,fillValue:n,center:s};return Ps.runKernel("RotateWithOffset",i,a)}}),Gs({nonMaxSuppression_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=js(t,"boxes","nonMaxSuppression","float32"),a=js(e,"scores","nonMaxSuppression","float32"),o=vl(i,a,n,s,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return Ps.runKernel("NonMaxSuppressionV3",{boxes:i,scores:a},l)}}),Gs({nonMaxSuppressionWithScore_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=js(t,"boxes","nonMaxSuppression"),o=js(e,"scores","nonMaxSuppression"),l=vl(a,o,n,s,r,i),u={boxes:a,scores:o},h={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},c=Ps.runKernel("NonMaxSuppressionV5",u,h);return{selectedIndices:c[0],selectedScores:c[1]}}}),Gs({nonMaxSuppressionPadded_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=js(t,"boxes","nonMaxSuppression"),o=js(e,"scores","nonMaxSuppression"),l=vl(a,o,n,s,r,null),u={boxes:a,scores:o},h={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},c=Ps.runKernel("NonMaxSuppressionV4",u,h);return{selectedIndices:c[0],validOutputs:c[1]}}}),Gs({resizeBilinear_:function(t,e,n=!1,s=!1){const r=js(t,"images","resizeBilinear");rn(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),rn(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`)),rn(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=r,a=!1;3===r.rank&&(a=!0,i=hr(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const o={images:i},l={alignCorners:n,halfPixelCenters:s,size:e},u=Ps.runKernel("ResizeBilinear",o,l);return a?hr(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Gs({resizeNearestNeighbor_:function(t,e,n=!1,s=!1){const r=js(t,"images","resizeNearestNeighbor");rn(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),rn(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),rn("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),rn(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=r,a=!1;3===r.rank&&(a=!0,i=hr(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const o={images:i},l={alignCorners:n,halfPixelCenters:s,size:e},u=Ps.runKernel("ResizeNearestNeighbor",o,l);return a?hr(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Gs({threshold_:function(t,e="binary",n=!1,s=.5){const r=js(t,"image","threshold"),i=r.shape[0]*r.shape[1];let a,o,l,u,h=Js(pl([s]),255);if(rn(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),rn(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),rn("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),rn("otsu"===e||"binary"===e,(()=>`Method must be binary or otsu, but was ${e}`)),3===r.shape[2]){[a,o,l]=Jr(r,[1,1,1],-1);const t=Js(a,.2989),e=Js(o,.587),n=Js(l,.114);u=yr(yr(t,e),n)}else u=t;if("otsu"===e){h=function(t,e){let n,s,r,i,a,o,l=pl([-1]),u=pl([0]),h=pl([0]);for(let c=0;c<t.size-1;c++){n=ca(t,0,c+1),s=ca(t,c+1),a=Qs(cr(n),e),o=Qs(cr(s),e);const p=cr(Js(n,el(0,n.size)));r=Qs(p,cr(n));const d=ho(s.shape,n.size),f=yr(el(0,s.size),d),g=Js(s,f);i=Qs(cr(g),cr(s));const m=ir(r,i),b=ir(r,i),y=Js(a,o);h=Js(Js(y,m),b);const w=Ki(h,u);u=qr(w,h,u),l=qr(w,pl([c]),l)}return l}(lo(Hs(il(u),"int32"),er(c=[],p,Us(c,d),d),256),i)}var c,p,d;const f=n?Ur(u,h):Ki(u,h);return Hs(Js(f,255),"int32")}}),Gs({transform_:function(t,e,n="nearest",s="constant",r=0,i){const a=js(t,"image","transform","float32"),o=js(e,"transforms","transform","float32");rn(4===a.rank,(()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`)),rn(2===o.rank&&(o.shape[0]===a.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),rn(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const l={image:a,transforms:o},u={interpolation:n,fillMode:s,fillValue:r,outputShape:i};return Ps.runKernel("Transform",l,u)}}),Gs({bandPart_:function(t,e,n){rn(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),rn(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=js(t,"a","bandPart");rn(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[i,a]=s.shape.slice(-2);if(!(e<=i))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);e<0&&(e=i),n<0&&(n=a);const o=hr(el(0,i,1,"int32"),[-1,1]),l=el(0,a,1,"int32"),u=ir(o,l),h=Vr(Ur(u,nr(+e,"int32")),Wr(u,nr(-n,"int32"))),c=aa([i,a],s.dtype);return hr(cl(wa(hr(s,[-1,i,a])).map((t=>qr(h,t,c)))),r)}}),Gs({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,rn(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)rn(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=Jr(t,t.shape[0],0).map((t=>hl(t,[0])));rn(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],s=t;for(let e=0;e<t.length;++e)n.push(Ps.tidy((()=>{let t=s[e];if(e>0)for(let s=0;s<e;++s){const e=Js(cr(Js(n[s],t)),n[s]);t=ir(t,e)}return Qs(t,ko(t,"euclidean"))})));return e?cl(n,0):n}}),Gs({qr_:function(t,e=!1){if(rn(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return xl(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),s=wa(hr(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),r=[],i=[];s.forEach((t=>{const[n,s]=xl(t,e);r.push(n),i.push(s)}));return[hr(cl(r,0),t.shape),hr(cl(i,0),t.shape)]}}}),function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Sl||(Sl={}));const Nl=Gs({computeWeightedLoss_:function(t,e,n=Sl.SUM_BY_NONZERO_WEIGHTS){const s=js(t,"losses","computeWeightedLoss");let r=null;null!=e&&(r=js(e,"weights","computeWeightedLoss"));const i=null==r?s:Js(s,r);if(n===Sl.NONE)return i;if(n===Sl.SUM)return cr(i);if(n===Sl.MEAN){if(null==r)return Do(i);{const t=s.size/r.size,e=Qs(cr(i),cr(r));return t>1?Qs(e,nr(t)):e}}if(n===Sl.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Qs(cr(i),nr(s.size));{const t=Js(r,oa(s.shape)),e=Hs(cr(Ro(t,nr(0))),"float32");return Qs(cr(i),e)}}throw Error(`Unknown reduction: ${n}`)}});Gs({absoluteDifference_:function(t,e,n,s=Sl.SUM_BY_NONZERO_WEIGHTS){const r=js(t,"labels","absoluteDifference"),i=js(e,"predictions","absoluteDifference");let a=null;null!=n&&(a=js(n,"weights","absoluteDifference")),an(r.shape,i.shape,"Error in absoluteDifference: ");const o=eo(ir(r,i));return Nl(o,a,s)}}),Gs({cosineDistance_:function(t,e,n,s,r=Sl.SUM_BY_NONZERO_WEIGHTS){const i=js(t,"labels","cosineDistance"),a=js(e,"predictions","cosineDistance");let o=null;null!=s&&(o=js(s,"weights","cosineDistance")),an(i.shape,a.shape,"Error in cosineDistance: ");const l=nr(1),u=ir(l,cr(Js(i,a),n,!0));return Nl(u,o,r)}}),Gs({hingeLoss_:function(t,e,n,s=Sl.SUM_BY_NONZERO_WEIGHTS){let r=js(t,"labels","hingeLoss");const i=js(e,"predictions","hingeLoss");let a=null;null!=n&&(a=js(n,"weights","hingeLoss")),an(r.shape,i.shape,"Error in hingeLoss: ");const o=nr(1);r=ir(Js(nr(2),r),o);const l=nl(ir(o,Js(r,i)));return Nl(l,a,s)}}),Gs({huberLoss_:function(t,e,n,s=1,r=Sl.SUM_BY_NONZERO_WEIGHTS){const i=js(t,"labels","huberLoss"),a=js(e,"predictions","huberLoss");let o=null;null!=n&&(o=js(n,"weights","huberLoss")),an(i.shape,a.shape,"Error in huberLoss: ");const l=nr(s),u=eo(ir(a,i)),h=Fo(u,l),c=ir(u,h),p=yr(Js(nr(.5),rr(h)),Js(l,c));return Nl(p,o,r)}}),Gs({logLoss_:function(t,e,n,s=1e-7,r=Sl.SUM_BY_NONZERO_WEIGHTS){const i=js(t,"labels","logLoss"),a=js(e,"predictions","logLoss");let o=null;null!=n&&(o=js(n,"weights","logLoss")),an(i.shape,a.shape,"Error in logLoss: ");const l=nr(1),u=nr(s),h=tr(Js(i,xa(yr(a,u)))),c=Js(ir(l,i),xa(yr(ir(l,a),u))),p=ir(h,c);return Nl(p,o,r)}}),Gs({meanSquaredError_:function(t,e,n,s=Sl.SUM_BY_NONZERO_WEIGHTS){const r=js(t,"labels","meanSquaredError"),i=js(e,"predictions","meanSquaredError");let a=null;null!=n&&(a=js(n,"weights","meanSquaredError")),an(r.shape,i.shape,"Error in meanSquaredError: ");const o=ul(r,i);return Nl(o,a,s)}}),Gs({sigmoidCrossEntropy_:function(t,e,n,s=0,r=Sl.SUM_BY_NONZERO_WEIGHTS){let i=js(t,"multiClassLabels","sigmoidCrossEntropy");const a=js(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=js(n,"weights","sigmoidCrossEntropy")),an(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const t=nr(s),e=nr(1),n=nr(.5);i=yr(Js(i,ir(e,t)),Js(n,t))}const l=function(t,e){const n=js(t,"labels","sigmoidCrossEntropyWithLogits"),s=js(e,"logits","sigmoidCrossEntropyWithLogits");an(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=nl(s),i=Js(s,n),a=Eo(Ei(tr(eo(s))));return yr(ir(r,i),a)}(i,a);return Nl(l,o,r)}}),Gs({softmaxCrossEntropy_:function(t,e,n,s=0,r=Sl.SUM_BY_NONZERO_WEIGHTS){let i=js(t,"onehotLabels","softmaxCrossEntropy");const a=js(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=js(n,"weights","softmaxCrossEntropy")),an(i.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const t=nr(s),e=nr(1),n=nr(i.shape[1]);i=yr(Js(i,ir(e,t)),Qs(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);const s=Io(((t,e,s)=>{const r=To(e,[n],!0),i=ir(Hs(e,"float32"),r);s([t,i]);const a=tr(Js(i,t));return{value:cr(a,[n]),gradFunc:(t,e)=>{const[s,r]=e,i=ui(t.shape,[n]);return[Js(hr(t,i),ir(Hs(s,"float32"),Ei(r))),Js(hr(t,i),ir(Ei(r),Hs(s,"float32")))]}}}));return s(t,e)}(i,a);return Nl(l,o,r)}}),Gs({sparseFillEmptyRows_:function(t,e,n,s){const r=js(t,"indices","sparseFillEmptyRows","int32"),i=js(e,"values","sparseFillEmptyRows"),a=js(n,"denseShape","sparseFillEmptyRows","int32"),o=js(s,"defaultValue","sparseFillEmptyRows",i.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==i.rank)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(1!==a.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:r,values:i,denseShape:a,defaultValue:o},u=Ps.runKernel("SparseFillEmptyRows",l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),Gs({sparseReshape_:function(t,e,n){const s=js(t,"inputIndices","sparseReshape","int32"),r=js(e,"inputShape","sparseReshape","int32"),i=js(n,"newShape","sparseReshape","int32");if(2!==s.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==i.rank)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const a={inputIndices:s,inputShape:r,newShape:i},o=Ps.runKernel("SparseReshape",a);return{outputIndices:o[0],outputShape:o[1]}}}),Gs({sparseSegmentMean_:function(t,e,n){const s=js(t,"data","sparseSegmentMean"),r=js(e,"indices","sparseSegmentMean","int32"),i=js(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${i.shape}`);const a={data:s,indices:r,segmentIds:i};return Ps.runKernel("SparseSegmentMean",a)}}),Gs({sparseSegmentSum_:function(t,e,n){const s=js(t,"data","sparseSegmentSum"),r=js(e,"indices","sparseSegmentSum","int32"),i=js(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${i.shape}`);const a={data:s,indices:r,segmentIds:i};return Ps.runKernel("SparseSegmentSum",a)}}),Gs({stringNGrams_:function(t,e,n,s,r,i,a,o){const l=js(t,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=js(e,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const h={separator:n,nGramWidths:s,leftPad:r,rightPad:i,padWidth:a,preserveShortSequences:o},c={data:l,dataSplits:u},p=Ps.runKernel("StringNGrams",c,h);return{nGrams:p[0],nGramsSplits:p[1]}}}),Gs({stringSplit_:function(t,e,n=!0){const s=js(t,"input","stringSplit","string"),r=js(e,"delimiter","stringSplit","string");if(1!==s.rank)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const i={skipEmpty:n},a={input:s,delimiter:r},o=Ps.runKernel("StringSplit",a,i);return{indices:o[0],values:o[1],shape:o[2]}}}),Gs({stringToHashBucketFast_:function(t,e){const n=js(t,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return Ps.runKernel("StringToHashBucketFast",r,s)}});class El extends class{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}{minimize(t,e=!1,n){const{value:s,grads:r}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:r[t.name]})));this.applyGradients(t)}else this.applyGradients(r);return fi(r),e?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){rn(yn(t),(()=>"The f passed in variableGrads(f) must be a function")),rn(null==e||Array.isArray(e)&&e.every((t=>t instanceof As)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in Ps.registeredVariables)e.push(Ps.registeredVariables[t])}const s=n?e.filter((t=>!t.trainable)):null,r=e.length;rn((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:i,grads:a}=Ps.gradients(t,e,null,!0);rn(a.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),rn(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=a[e]&&(o[t.name]=a[e])})),null!=s&&s.forEach((t=>o[t.name]=null)),{value:i,grads:o}}(t,e)}dispose(){null!=this.iterations_&&fi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:nr(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(El,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class Il extends El{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Ps.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Ps.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:di((()=>fr(s).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:di((()=>fr(s).variable(false)))});const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const i=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;di((()=>{const t=yr(Js(i,this.rho),Js(rr(r),1-this.rho)),e=Js(Qs(sr(yr(a,this.epsilon)),sr(yr(i,this.epsilon))),r),n=yr(Js(a,this.rho),Js(rr(e),1-this.rho));i.assign(t),a.assign(n);const o=yr(Js(e,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(fi(this.accumulatedGrads.map((t=>t.variable))),fi(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}Il.className="Adadelta",to(Il);class Al extends El{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Ps.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:di((()=>ho(s.shape,this.initialAccumulatorValue).variable(t)))}}const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const i=this.accumulatedGrads[n].variable;di((()=>{const t=yr(i,rr(r));i.assign(t);const e=yr(Js(Qs(r,sr(yr(t,Ps.backend.epsilon()))),-this.learningRate),s);s.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&fi(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Al.className="Adagrad",to(Al);class Tl extends El{constructor(t,e,n,s=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],di((()=>{this.accBeta1=nr(e).variable(),this.accBeta2=nr(n).variable()})),null==s&&(this.epsilon=Ps.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);di((()=>{const n=ir(1,this.accBeta1),s=ir(1,this.accBeta2);e.forEach(((e,r)=>{const i=Ps.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${e}/m`,variable:di((()=>fr(i).variable(false)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${e}/v`,variable:di((()=>fr(i).variable(false)))});const a=Array.isArray(t)?t[r].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=yr(Js(o,this.beta1),Js(a,1-this.beta1)),h=yr(Js(l,this.beta2),Js(rr(a),1-this.beta2)),c=Qs(u,n),p=Qs(h,s);o.assign(u),l.assign(h);const d=yr(Js(Qs(c,yr(sr(p),this.epsilon)),-this.learningRate),i);i.assign(d)})),this.accBeta1.assign(Js(this.accBeta1,this.beta1)),this.accBeta2.assign(Js(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&fi(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&fi(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),di((()=>{this.accBeta1.assign(Sa(this.beta1,this.iterations_+1)),this.accBeta2.assign(Sa(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Tl.className="Adam",to(Tl);class $l extends El{constructor(t,e,n,s=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],di((()=>{this.iteration=nr(0).variable(),this.accBeta1=nr(e).variable()})),null==s&&(this.epsilon=Ps.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);di((()=>{const n=ir(1,this.accBeta1),s=Qs(-this.learningRate,yr(Js(this.iteration,this.decay),1));e.forEach(((e,r)=>{const i=Ps.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${e}/m`,variable:fr(i).variable(false)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${e}/v`,variable:fr(i).variable(false)});const a=Array.isArray(t)?t[r].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=yr(Js(o,this.beta1),Js(a,1-this.beta1)),h=Js(l,this.beta2),c=eo(a),p=_o(h,c);o.assign(u),l.assign(p);const d=yr(Js(Qs(s,n),Qs(u,yr(p,this.epsilon))),i);i.assign(d)})),this.iteration.assign(yr(this.iteration,1)),this.accBeta1.assign(Js(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&fi(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&fi(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}$l.className="Adamax",to($l);class Cl extends El{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const r=Ps.registeredVariables[e];di((()=>{const t=yr(Js(this.c,s),r);r.assign(t)}))})),this.incrementIterations()}setLearningRate(t){var e;this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=(e=nr(-t),Ps.keep(e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Cl.className="SGD",to(Cl);class zl extends Cl{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=nr(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Ps.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:di((()=>fr(s).variable(t)))}}const r=this.accumulations[n].variable,i=Array.isArray(t)?t[n].tensor:t[e];null!=i&&di((()=>{let t;const e=yr(Js(this.m,r),i);t=this.useNesterov?yr(Js(this.c,yr(i,Js(e,this.m))),s):yr(Js(this.c,e),s),r.assign(e),s.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&fi(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}zl.className="Momentum",to(zl);class _l extends El{constructor(t,e=.9,n=0,s=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=Ps.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Ps.registeredVariables[e],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:di((()=>fr(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:di((()=>fr(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:di((()=>fr(s).variable(r)))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;di((()=>{const t=yr(Js(a,this.decay),Js(rr(i),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,r=yr(Js(e,this.decay),Js(i,1-this.decay)),l=Qs(Js(i,this.learningRate),sr(ir(t,yr(rr(r),this.epsilon)))),u=yr(Js(o,this.momentum),l);a.assign(t),e.assign(r),o.assign(u);const h=ir(s,u);s.assign(h)}else{const t=yr(Js(a,this.decay),Js(rr(i),1-this.decay)),e=yr(Js(o,this.momentum),Qs(Js(i,this.learningRate),sr(yr(t,this.epsilon))));a.assign(t),o.assign(e);const n=ir(s,e);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&fi(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&fi(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&fi(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}var Dl;_l.className="RMSProp",to(_l),"undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate&&setImmediate,function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"}(Dl||(Dl={}));function Fl(t,e,n){const s=t.shape.length,r=s-n.length,i=hi(n,s);let a=t;null!=i&&(a=yi(t,i));const o=a.shape.slice(),l=o.splice(s-n.length,n.length).reduce(((t,e)=>t*e),1);o.push(l);let u=function(t,e,n){const s=t.shape.slice();s[n]=1;const r=hr(e,s),i=fo(t,n,!0,!1),a=fo(t,n,!0,!0),o=Js(i,a);return Js(r,o)}(a.reshape(o),e,r);if(u=u.reshape(a.shape),null!=i){const t=ci(i);u=yi(u,t)}return u}const Rl={kernelName:"SpaceToBatchND",gradFunc:(t,e,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>ao(t,s,r)}}},Ml={kernelName:"SplitV",gradFunc:(t,e,n)=>{const{axis:s}=n;return{x:()=>so(t,s)}}};const Ll=[Ys,ar,or,pr,dr,gr,mr,br,wr,kr,vr,xr,zr,Dr,Rr,Lr,Or,Br,Pr,Gr,Hr,Zr,ei,Qr,ri,ai,li,wi,xi,Si,{kernelName:"RealDiv",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=ur(n.shape,s.shape);return{a:()=>{const e=Qs(t,Hs(s,"float32")),i=lr(n.shape,r);return i.length>0?hr(cr(e,i),n.shape):e},b:()=>{let e=Js(t,Hs(n,"float32"));const i=lr(s.shape,r);i.length>0&&(e=hr(cr(e,i),s.shape));const a=rr(s);return tr(Qs(e,Hs(a,"float32")))}}}},Ni,Ii,Ai,Ti,$i,zi,Ci,Fi,Mi,Bi,Pi,Wi,Ui,Vi,ji,qi,Gi,Hi,Zi,Qi,Qi,ea,sa,ia,la,ua,ha,pa,fa,ga,ma,ba,ya,ka,va,va,Na,Ea,{kernelName:"Prod",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n;let i=[];return i=null==r?s.shape.map(((t,e)=>e)):"number"==typeof r?[r]:r,{x:()=>Fl(s,t,i)}}},{kernelName:"Reciprocal",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Qs(t,tr(rr(n)))}}},{kernelName:"Relu6",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=Js(Ur(n,6),Zs(n));return{x:()=>Js(t,Hs(s,"float32"))}}},{kernelName:"Relu",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Js(t,Hs(Zs(n),"float32"))}}},{kernelName:"Reshape",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>hr(t,n.shape)}}},{kernelName:"ResizeBilinear",inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r={dy:t,images:s};return{images:()=>Ps.runKernel("ResizeBilinearGrad",r,n)}}},{kernelName:"ResizeNearestNeighbor",inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r={dy:t,images:s};return{images:()=>Ps.runKernel("ResizeNearestNeighborGrad",r,n)}}},{kernelName:"Reverse",gradFunc:(t,e,n)=>{const{dims:s}=n,r=dn(s,t.shape);return{x:()=>rl(t,r)}}},{kernelName:"Round",gradFunc:t=>({x:()=>fr(t)})},{kernelName:"Rsqrt",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>tr(Qs(t,Js(Sa(n,1.5),2)))}}},{kernelName:"Select",inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Hs(fr(n),"float32"),t:()=>Js(t,Hs(n,t.dtype)),e:()=>Js(t,Hs($o(n),t.dtype))}}},{kernelName:"Selu",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Ki(n,nr(0)),s=nr(1.7580993408473768),r=nr(1.0507009873554805),i=Js(t,r),a=Js(Js(t,s),Ei(Hs(n,"float32")));return qr(e,i,a)}}}},{kernelName:"Sigmoid",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Js(t,Js(n,ir(nr(1),n)))}}},{kernelName:"Sign",gradFunc:t=>({x:()=>fr(t)})},{kernelName:"Sin",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Js(co(Hs(n,"float32")),t)}}},{kernelName:"Sinh",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Js(po(Hs(n,"float32")),t)}}},{kernelName:"Slice",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{begin:r,size:i}=n,a=s.shape,[o,l]=function(t,e,n){let s;const r=t.shape.length;let i;return s="number"==typeof e?[e,...new Array(r-1).fill(0)]:e.length<r?e.concat(new Array(r-e.length).fill(0)):e.slice(),s.forEach((t=>{rn(-1!==t,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,i=i.map(((e,n)=>e>=0?e:(rn(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-s[n]))),[s,i]}(s,r,i),u=[];for(let e=0;e<t.rank;e++)u.push([o[e],a[e]-o[e]-l[e]]);return{x:()=>Mo(t,u)}}},{kernelName:"Softmax",outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{dim:r}=n,i=Js(t,s);return{logits:()=>ir(i,Js(cr(i,[r],true),s))}}},{kernelName:"Softplus",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Js(t,ro(n))}}},Rl,Rl,Ml,Ml,{kernelName:"Sqrt",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Qs(t,Js(sr(Hs(n,"float32")),2))}}},{kernelName:"SquaredDifference",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=nr(2);return{a:()=>Js(t,Js(r,ir(n,s))),b:()=>Js(t,Js(r,ir(s,n)))}}},{kernelName:"Square",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Js(t,Js(Hs(n,"float32"),2))}}},{kernelName:"Step",gradFunc:t=>({x:()=>fr(t)})},{kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=ur(n.shape,s.shape);return{a:()=>{let e=t;const s=lr(n.shape,r);return s.length>0&&(e=cr(e,s)),hr(e,n.shape)},b:()=>{let e=t;const n=lr(s.shape,r);return n.length>0&&(e=cr(e,n)),hr(tr(e),s.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,r=s.shape.slice(),{axis:i}=n;dn(i,s.shape).forEach((t=>{r[t]=1}));const a=hr(t,r),o=Js(a,oa(s.shape,"float32"));return{x:()=>o}}},{kernelName:"Tan",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Qs(t,rr(co(n)))}}},{kernelName:"Tanh",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Js(ir(nr(1),rr(n)),t)}}},{kernelName:"Tile",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{reps:r}=n;return{x:()=>{let e=fr(s);if(1===s.rank)for(let n=0;n<r[0];++n)e=yr(e,ca(t,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)e=yr(e,ca(t,[n*s.shape[0],i*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let a=0;a<r[2];++a)e=yr(e,ca(t,[n*s.shape[0],i*s.shape[1],a*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let a=0;a<r[2];++a)for(let o=0;o<r[3];++o)e=yr(e,ca(t,[n*s.shape[0],i*s.shape[1],a*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return e}}}},{kernelName:"Transpose",gradFunc:(t,e,n)=>{const s=n,{perm:r}=s,i=ci(r);return{x:()=>yi(t,i)}}},{kernelName:"Unpack",gradFunc:(t,e,n)=>{const s=n,{axis:r}=s;return{value:()=>cl(t,r)}}},{kernelName:"UnsortedSegmentSum",inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=_o(e,fr(e)),s=So(t,n);let r=Wr(e,nr(0,"int32"));const i=s.rank-r.rank;for(let t=0;t<i;++t)r=vo(r,t+1);r=Vr(r,oa(s.shape,"bool"));const a=fr(s);return qr(r,s,a)}(t,n)}}},{kernelName:"ZerosLike",gradFunc:t=>({x:()=>fr(t)})}];for(const t of Ll)Bn(t);function Ol(e,n){return s((()=>t.sqrt(t.sum(t.mul(e,e),n,!0))))}class Bl extends i.Serializable{getConfig(){return{}}}class Pl extends Bl{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(e){return s((()=>{const n=Ol(e,this.axis),s=t.clipByValue(n,0,this.maxValue);return t.mul(e,t.div(s,t.add(Ht(),n)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Pl.className="MaxNorm",i.registerClass(Pl);class Wl extends Bl{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(e){return s((()=>t.div(e,t.add(Ht(),Ol(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Wl.className="UnitNorm",i.registerClass(Wl);class Ul extends Bl{apply(e){return t.relu(e)}}Ul.className="NonNeg",i.registerClass(Ul);class Vl extends Bl{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(e){return s((()=>{const n=Ol(e,this.axis),s=t.add(t.mul(this.rate,t.clipByValue(n,this.minValue,this.maxValue)),t.mul(1-this.rate,n));return t.mul(e,t.div(s,t.add(Ht(),n)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Vl.className="MinMaxNorm",i.registerClass(Vl);const Kl={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function jl(t){return dt(t)}function ql(t,e={}){return gt(t,i.SerializationMap.getMap().classNameMap,e,"constraint")}function Gl(t){if(null==t)return null;if("string"==typeof t){return ql({className:t in Kl?Kl[t]:t,config:{}})}return t instanceof Bl?t:ql(t)}var Hl={__proto__:null,maxNorm:function(t){return new Pl(t)},unitNorm:function(t){return new Wl(t)},nonNeg:function(){return new Ul},minMaxNorm:function(t){return new Vl(t)}};var Jl,Zl={__proto__:null,zeros:function(){return new fe},ones:function(){return new ge},constant:function(t){return new me(t)},randomUniform:function(t){return new be(t)},randomNormal:function(t){return new ye(t)},truncatedNormal:function(t){return new we(t)},identity:function(t){return new ke(t)},varianceScaling:function(t){return new ve(t)},glorotUniform:function(t){return new xe(t)},glorotNormal:function(t){return new Se(t)},heNormal:function(t){return new Ne(t)},heUniform:function(t){return new Ee(t)},leCunNormal:function(t){return new Ie(t)},leCunUniform:function(t){return new Ae(t)},orthogonal:function(t){return new Te(t)}};async function Yl(t){if(null==t)return;const e=[],n=[],s=[];for(const r in t){const i=t[r];if("number"!=typeof i){const t=i;e.push(t.data()),n.push(r),s.push(t)}}if(e.length>0){const r=await Promise.all(e);for(let e=0;e<r.length;++e)t[n[e]]=r[e][0];g(s)}}function Xl(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}!function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(Jl||(Jl={}));class Ql{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class tu{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class eu extends Ql{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const i=s((()=>k(this.totals[t],l(r,n))));this.totals[t]=i,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:s((()=>{const n=l(v(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),x(e[t])})))}}class nu extends Ql{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const s in this.history){const r=this.history[s];for(let i=0;i<r.length;++i)if("number"!=typeof r[i]){const a=r[i];t.push(a.data()),e.push(s),n.push(i)}}const s=await Promise.all(t);for(let t=0;t<s.length;++t){this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=s[t][0]}}}class su extends Ql{constructor(t,n){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||w,this.yieldEvery=n||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");e.isNumber(this.yieldEvery)&&(this.maybeWait=function(t,n,s){let r,i=null!=s?s():e.now();return(...a)=>{const o=null!=s?s():e.now();return o-i<n||(i=o,r=t(...a)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const s=[];null!=this.yield&&(await Yl(n),s.push(this.yield(t,e,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await Yl(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await Yl(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await Yl(e),await this.batchBegin(t,e))}async onBatchEnd(t,n){const s=[];null!=this.batchEnd&&(await Yl(n),s.push(this.batchEnd(t,n))),"batch"===this.yieldEvery?s.push(this.nextFrameFunc()):e.isNumber(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,t,n)),await Promise.all(s)}async onTrainBegin(t){null!=this.trainBegin&&(await Yl(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await Yl(t),await this.trainEnd(t))}}function ru(t,e){if(null==t&&(t={}),t instanceof Ql)return[t];if(Array.isArray(t)&&t[0]instanceof Ql)return t;return ut(t).map((t=>new su(t,e)))}class iu{constructor(){}static registerCallbackConstructor(t,n){e.assert(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),iu.checkForDuplicate(n),null==iu.constructors[t]&&(iu.constructors[t]=[]),iu.constructors[t].push(n)}static checkForDuplicate(t){for(const e in iu.constructors){iu.constructors[+e].forEach((e=>{if(e===t)throw new et("Duplicate callback constructor.")}))}}static clear(){iu.constructors={}}static createCallbacks(t){const e=[];for(const n in iu.constructors){const s=+n;t>=s&&e.push(...iu.constructors[s])}return e.map((t=>new t))}}function au(t,e,n,s,r,i,a,o,l){const u=new nu,h=[new eu,...iu.createCallbacks(e)];null!=t&&h.push(...t),h.push(u);const c=new tu(h);return c.setParams({epochs:n,initialEpoch:s,samples:r,steps:i,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:c,history:u}}function ou(t,e={},n=!1){return gt(t,i.SerializationMap.getMap().classNameMap,e,"layer",n)}function lu(e,n){return s((()=>{"float32"!==e.dtype&&(e=t.cast(e,"float32"));const s=t.sum(ae(e),n,!0),r=t.fill(s.shape,Ht()),i=t.sqrt(t.maximum(s,r));return t.div(e,i)}))}function uu(e,n){return s((()=>t.mean(ae(t.sub(n,e)),-1)))}function hu(e,n){return s((()=>t.mean(t.abs(t.sub(n,e)),-1)))}function cu(e,n){return s((()=>{const s=t.sub(e,n),r=t.clipByValue(t.abs(e),Ht(),Number.MAX_VALUE),i=t.abs(t.div(s,r));return t.mul(100,t.mean(i,-1))}))}function pu(e,n,r=!1){return s((()=>{if(r)n=t.softmax(n);else{const e=t.sum(n,n.shape.length-1,!0);n=t.div(n,e)}return n=t.clipByValue(n,Ht(),1-Ht()),t.neg(t.sum(t.mul(t.cast(e,"float32"),t.log(n)),n.shape.length-1))}))}function du(e,n,r=!1){return s((()=>{const s=t.cast(t.floor(function(e){const n=[Vt(e.shape)];return t.reshape(e,n)}(e)),"int32"),i=(n=t.clipByValue(n,Ht(),1-Ht())).shape;return pu(t.reshape(t.oneHot(s,i[i.length-1]),i),n,r)}))}function fu(n,r){return s((()=>{let i;return i=t.clipByValue(r,Ht(),1-Ht()),i=t.log(t.div(i,t.sub(1,i))),t.mean(function(n,r){if(!e.arraysEqual(n.shape,r.shape))throw new et(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(r.shape)}`);return s((()=>{const e=t.relu(r),s=t.neg(t.abs(r));return t.add(t.sub(e,t.mul(r,n)),t.log1p(t.exp(s)))}))}(n,i),-1)}))}function gu(e,n){return s((()=>{const s=lu(e,-1),r=lu(n,-1),i=t.mul(s,r);return t.neg(t.sum(i,-1))}))}iu.constructors={};const mu={meanSquaredError:uu,meanAbsoluteError:hu,meanAbsolutePercentageError:cu,meanSquaredLogarithmicError:function(e,n){return s((()=>{const s=t.clipByValue(n,Ht(),Number.MAX_VALUE),r=t.log(t.add(1,s)),i=t.clipByValue(e,Ht(),Number.MAX_VALUE),a=t.log(t.add(1,i));return t.mean(ae(t.sub(r,a)),-1)}))},squaredHinge:function(e,n){return s((()=>{const s=t.maximum(0,t.sub(1,t.mul(e,n)));return t.mean(ae(s),-1)}))},hinge:function(e,n){return s((()=>{const s=t.maximum(0,t.sub(1,t.mul(e,n)));return t.mean(s,-1)}))},categoricalHinge:function(e,n){return s((()=>{const s=t.sum(t.mul(e,n),-1),r=t.max(t.mul(t.sub(1,e),n),-1);return t.maximum(0,t.add(1,t.sub(r,s)))}))},logcosh:function(e,n){return s((()=>{const s=Math.log(2),r=t.sub(n,e),i=t.sub(t.add(r,t.softplus(t.mul(-2,r))),s);return t.mean(i,-1)}))},categoricalCrossentropy:pu,sparseCategoricalCrossentropy:du,binaryCrossentropy:fu,kullbackLeiblerDivergence:function(e,n){return s((()=>{const s=t.clipByValue(e,Ht(),1),r=t.clipByValue(n,Ht(),1);return t.sum(t.mul(e,t.log(t.div(s,r))),-1)}))},poisson:function(e,n){return s((()=>{const s=t.log(t.add(Ht(),n));return t.mean(t.sub(n,t.mul(e,s)),-1)}))},cosineProximity:gu};function bu(t){if("string"==typeof t){if(t in mu)return mu[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new et(e)}return t}function yu(e,n){return s((()=>{const s=t.mul(.5,t.onesLike(n)),r=Jt(t.greater(n,s),e.dtype);return t.mean(t.equal(e,r),-1)}))}function wu(e,n){return s((()=>Jt(t.equal(t.argMax(e,-1),t.argMax(n,-1)),"float32")))}function ku(e,n){return s((()=>t.cast(t.sum(t.logicalAnd(t.equal(e,1),t.equal(n,1))),"float32")))}function vu(e,n){return s((()=>{const r=ku(e,n),i=function(e,n){return s((()=>t.cast(t.sum(t.logicalAnd(t.equal(e,0),t.equal(n,1))),"float32")))}(e,n),a=t.add(r,i);return t.cast(t.where(t.greater(a,0),t.div(r,a),0),"float32")}))}function xu(e,n){return s((()=>{const r=ku(e,n),i=function(e,n){return s((()=>t.cast(t.sum(t.logicalAnd(t.equal(e,1),t.equal(n,0))),"float32")))}(e,n),a=t.add(r,i);return t.cast(t.where(t.greater(a,0),t.div(r,a),0),"float32")}))}function Su(t,e){return fu(t,e)}function Nu(e,n){return e.rank===n.rank&&(e=t.squeeze(e,[e.rank-1])),(n=t.argMax(n,-1)).dtype!==e.dtype&&(n=t.cast(n,e.dtype)),t.cast(t.equal(e,n),"float32")}const Eu=pu,Iu=du,Au={binaryAccuracy:yu,categoricalAccuracy:wu,precision:vu,categoricalCrossentropy:Eu,sparseCategoricalCrossentropy:Iu,mse:uu,MSE:uu,mae:hu,MAE:hu,mape:cu,MAPE:cu,cosine:gu};function Tu(t){if("string"==typeof t&&t in Au)return Au[t];if("string"!=typeof t&&null!=t)return t;throw new et(`Unknown metric ${t}`)}function $u(t){if(at(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(mu))if(mu[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Au))if(Au[n]===t){e=n;break}return void 0!==e?e:t.name}}function Cu(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!zu(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function zu(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!zu(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!zu(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function _u(t,e,n,s=console.log){const r=function(t){let e=!0;const n=[],s=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}s.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),i=["Layer (type)","Input Shape","Output shape","Param #"];let a;if(r?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!r){i.push("Receives inputs"),a=[];for(const e in t.nodesByDepth)a.push(...t.nodesByDepth[e])}s("_".repeat(e)),Du(i,n,s),s("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)r?Fu(o[t],n,s):Ru(o[t],n,a,s),s((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;e=null!=t.collectedTrainableWeights?Le(t.collectedTrainableWeights):Le(t.trainableWeights);return e}(t),u=Le(t.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}function Du(t,e,n=console.log){let s="";for(let n=0;n<t.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=t[n],s=s.slice(0,e[n]),s+=" ".repeat(e[n]-s.length);n(s)}function Fu(t,e,n){let s,r;try{r=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(t){r="multiple"}try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}Du([`${t.name} (${t.getClassName()})`,r,s,t.countParams().toString()],e,n)}function Ru(t,e,n,s){let r,i;try{i=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(t){i="multiple"}try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}const a=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,s=e.nodeIndices[t],r=e.tensorIndices[t];a.push(`${n}[${s}][${r}]`)}const o=t.name,l=t.getClassName(),u=0===a.length?"":a[0];Du([`${o} (${l})`,i,r,t.countParams().toString(),u],e,s);for(let t=1;t<a.length;++t)Du(["","","","",a[t]],e,s)}function Mu(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function Lu(t,e){if(null===t)return null;if("string"==typeof t)return ct(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const s=t[r];Mu(e,r,s)?n.push(s):n.push(Lu(s,e))}return n}{const e={};for(const n of Object.keys(t)){const s=t[n];if("name"===n&&"string"==typeof s)e[n]=s;else{const t=ct(n);e[t]=Lu(s,t)}}return e}}function Ou(t,e){if(null==t)return null;if("string"==typeof t)return ht(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const s=t[r];Mu(e,r,s)?n.push(s):n.push(Ou(s,e))}return n}{const e={};for(const n of Object.keys(t)){const s=t[n],r=ht(n);e[r]="name"!==n&&"className"!==n||"string"!=typeof s?Ou(s,n):s}return e}}const Bu="4.1.0";class Pu extends qe{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=At(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],bt(this.inputs).length!==this.inputs.length)throw new et(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);bt(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,s=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,s=t.tensorIndex;at(0===n,"input layer has >1 nodes"),at(0===s,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof He))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},s={},r={},i={},a=[],o=(t,e,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=t.sourceLayer,r=t.nodeIndex,l=t.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new tt(`The tensor ${t.name} at layer "${s.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(Pu.nodeKey(s,r)),s.id in i||(i[s.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const h=u.inboundLayers.length;for(let t=0;t<h;t++){const s=u.inputTensors[t],r=u.inboundLayers[t],i=u.nodeIndices[t],a=u.tensorIndices[t];o(s,e,n,r,i,a)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const t of this.outputs)o(t,l,u);const h=a.slice().reverse();for(const t of h){n[t.id]=t,t.id in e||(e[t.id]=0);let i=e[t.id];const a=null==s[t.outboundLayer.id]?0:s[t.outboundLayer.id];i=Math.max(i,a),s[t.outboundLayer.id]=i,r[t.outboundLayer.id]=t.outboundLayer,e[t.id]=i;for(let s=0;s<t.inboundLayers.length;s++){const r=t.inboundLayers[s],a=t.nodeIndices[s],o=r.inboundNodes[a],l=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(i+1,l),n[o.id]=o}}const c={};for(const t in e){const s=e[t];s in c||(c[s]=[]),c[s].push(n[t])}const p={};for(const t in s){const e=s[t];e in p||(p[e]=[]),p[e].push(r[t])}let d=Object.keys(p).map((t=>parseInt(t,10))).sort(mt);this.layers=[];for(const t of d){const e=p[t];e.sort(((t,e)=>{const n=i[t.id],s=i[e.id];return n<s?-1:n>s?1:0}));for(const t of e)t instanceof Pu&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=p,d=Object.keys(c).map((t=>parseInt(t,10))).sort(mt);const f=this.inputs.slice(),g=[];for(const t of d)for(const e of c[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new tt(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${g}`);for(const t of e.outputTensors)f.push(t);g.push(t.name)}}this.nodesByDepth=c;const m=this.layers.map((t=>t.name));for(const t of m){const e=m.filter((e=>e===t)).length;if(1!==e)throw new tt(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new Ke({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new et("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let s=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new et(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,s++}const r=[];for(const s in t){let i=s;if(null==n[s]){const t=s.split("/");i=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[i])r.push([n[i],t[s]]);else if(e)throw new et(`Provided weight data has no target variable: ${s}`);delete n[i]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new et(`${t.length} of ${s} weights are not set: ${t}`)}Pe(r)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 4.1.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=Ou(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return s((()=>{t=ut(t);const n=new Ze;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Qe(this.outputs,n,e)}))}computeMask(t,e){return s((()=>{let n;return t=ut(t),n=null==e?it(null,t.length):ut(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=Fe(t);if(e.length!==this.inputLayers.length)throw new et(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const s=this.inputLayers[t],r=e[t];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(mt);if(s.length>1)for(const t of s){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const s=[];for(let e=0;e<t.inboundLayers.length;e++){const r=t.inboundLayers[e],i=t.nodeIndices[e],a=t.tensorIndices[e],o=n[`${r.name}_${i}_${a}`];s.push(o)}const r=Fe(e.computeOutputShape(lt(s))),i=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){n[`${e.name}_${i}_${t}`]=r[t]}}}const r=[],i=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],s=this.outputLayersTensorIndices[t],r=`${e.name}_${n}_${s}`;i.push(r)}for(let t=0;t<i.length;t++){const e=i[t];at(e in n),r.push(n[e])}return lt(r)}runInternalGraph(t,e){null==e&&(e=it(null,t.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],i=t[s],a=e[s];n[r.id]=[i,a]}const s=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(mt);for(const t of s){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,s=t.inputTensors,r=t.outputTensors,i=new Array;for(const t of s)t.id in n&&i.push(n[t.id]);if(i.length===s.length){let s,a,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===i.length){const[t,n]=i[0];null==u.mask&&(u.mask=n),o=ut(e.call(t,u)),l=ut(e.computeMask(t,n)),s=[t],a=[n]}else s=i.map((t=>t[0])),a=i.map((t=>t[1])),null==u.mask&&(u.mask=a),o=ut(e.call(s,u)),l=ut(e.computeMask(s,a));if(e.activityRegularizer)throw new nt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<r.length;++t){const e=r[t],s=o[t],i=l[t];n[e.id]=[s,i]}}}}const r=[],i=[],a=[];for(const t of this.outputs){at(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,s]=n[t.id];a.push(e.shape),r.push(e),i.push(s)}return[r,i,a]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof Pu?1:0;for(let s=0;s<t.inboundNodes.length;s++){const r=Pu.nodeKey(t,s);this.containerNodes.has(r)&&(e[r]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new et(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new et("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new et(`No such layer: ${t}`)}calculateLosses(){return s((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const s=Pu.nodeKey(e,n);this.containerNodes.has(s)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const s=t.getClassName(),r=t.getConfig(),i=[];for(let n=0;n<t.inboundNodes.length;n++){const s=t.inboundNodes[n],r=Pu.nodeKey(t,n);let a={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),a=s.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(s.inboundLayers.length>0){const t=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],i=s.nodeIndices[n],o=s.tensorIndices[n];let l=e[Pu.nodeKey(r,i)];null==l&&(l=0),t.push([r.name,l,o,a])}i.push(t)}}}const a={};a.name=t.name,a.className=s,a.config=r,a.inboundNodes=i,n.push(a)}t.layers=n;const s=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],r=this.inputLayersNodeIndices[t],i=Pu.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.inputLayersTensorIndices[t];s.push([n.name,a,o])}t.inputLayers=s;const r=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],s=this.outputLayersNodeIndices[t],i=Pu.nodeKey(n,s);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.outputLayersTensorIndices[t];r.push([n.name,a,o])}return t.outputLayers=r,t}static fromConfig(t,e,n={},s=!1){const r={},i={};function a(t,e){t.name in i?i[t.name].push(e):i[t.name]=[e]}function o(t,e){const n=[];let s;for(const i of e){const o=i[0],l=i[1],u=i[2];if(s=null==i[3]?{}:i[3],!(o in r))return void a(t,e);const h=r[o];if(h.inboundNodes.length<=l)return void a(t,e);const c=h.inboundNodes[l];n.push(c.outputTensors[u])}n.length>0&&t.apply(lt(n),s)}function l(t){const n=t.name,i=ou(t,null!=e.customObjects?e.customObjects:{});i.setFastWeightInitDuringBuild(s),r[n]=i;t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new et(`Corrupted configuration, expected array for nodeData: ${t}`);a(i,t)}))}const u=e.name,h=e.layers;for(const t of h)l(t);for(;!yt(i);)for(const t of h){const e=r[t.name];if(e.name in i){const t=i[e.name];delete i[e.name];for(const n of t)o(e,n)}}const c=[],p=[],d=e.inputLayers;for(const t of d){const e=t[0],n=t[1],s=t[2];at(e in r);const i=r[e].inboundNodes[n].outputTensors;c.push(i[s])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],s=t[2];at(e in r);const i=r[e].inboundNodes[n].outputTensors;p.push(i[s])}return new t({inputs:c,outputs:p,name:u})}get stateful(){if(this._stateful)throw new et("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){s((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function Wu(t,e){return function(t,e,n){const s=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===s)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==s)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function Uu(t,e,n,i){if(null!=e||null!=i)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=s((()=>{if(1===t.shape.length)return N(t);if(2===t.shape.length){if(t.shape[1]>1){return E(t,1)}if(1===t.shape[1])return I(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),i=Array.from(await e.data());g(e);const a=[];return i.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);a.push(n[t])})),r(a,"float32")}return null}function Vu(t,e){return l(t,e)}function Ku(e,n){let s,r;const i=n;s=i.xs,r=i.ys,t.util.assert(null!=s&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${n}`));const a=ju("input",e.inputNames,s),o=ju("output",e.outputNames,r),l=a[0].shape[0];t.util.assert(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),t.util.assert(o.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let n=0;n<a.length;n++)t.util.assert(a[n].shape[0]===l,(()=>`Batch size mismatch: input ${e.inputNames[n]} has ${a[n].shape[0]}; expected  ${l} based on input ${e.inputNames[0]}.`));for(let n=0;n<o.length;n++)t.util.assert(o[n].shape[0]===l,(()=>`Batch size mismatch: output ${e.outputNames[n]} has ${o[n].shape[0]}; expected  ${l} based on input ${e.inputNames[0]}.`));return{xs:a,ys:o}}function ju(e,n,s){if(s instanceof t.Tensor)return[s];if(Array.isArray(s))return t.util.assert(s.length===n.length,(()=>`Received an array of ${s.length} Tensors, but expected ${n.length} to match the ${e} keys ${n}.`)),s;{const t=[];for(const r of n){if(null==s[r])throw new et(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);t.push(s[r])}return t}}async function qu(e,n,s){const r=null!=s.batchesPerEpoch;if(t.util.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),t.util.assert(null!=s,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),t.util.assert(null!=s.epochs&&s.epochs>0&&Number.isInteger(s.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${s.epochs}`)),t.util.assert(!r||s.batchesPerEpoch>0&&Number.isInteger(s.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${s.batchesPerEpoch}`)),t.util.assert(null==s.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const i=null!=s.validationData;let a,o;if(i)if(Gu(s.validationData))t.util.assert(null==s.validationBatches||s.validationBatches>0&&Number.isInteger(s.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${s.validationBatches}`));else{const t=function(t){if(3===t.length)throw new nt("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(s.validationData);a=t.xs,o=t.ys}const l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let h;h=i?u.slice().concat(u.map((t=>"val_"+t))):u.slice();const c=ru(s.callbacks,s.yieldEvery),p=null==s.verbose?1:s.verbose,{callbackList:d,history:f}=au(c,p,s.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(n,s),null,i,h);d.setModel(e),e.history=f,await d.onTrainBegin(),e.stopTraining_=!1;let g=null==s.initialEpoch?0:s.initialEpoch,m=await n.iterator();for(;g<s.epochs;){const h={};await d.onEpochBegin(g);let c=0,p=0;for(r||(m=await n.iterator());!r||c<s.batchesPerEpoch;){const n=await m.next();if(r&&n.done){console.warn(`You provided \`batchesPerEpoch\` as ${s.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+s.batchesPerEpoch*s.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=n.value){const{xs:r,ys:i}=Ku(e,n.value),a={};a.batch=p,a.size=r[0].shape[0],await d.onBatchBegin(p,a);const o=[];if(null!=s.classWeight){const t=Wu(s.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await Uu(i[e],null,t[e]))}const h=r.concat(i).concat(o),f=l(h);t.dispose(h);for(let e=0;e<u.length;++e){const n=u[e],s=f[e];a[n]=s,t.keep(s)}await d.onBatchEnd(p,a),Xl(a),p++,c++}if(r?c>=s.batchesPerEpoch:n.done){if(i){let t;t=Gu(s.validationData)?ut(await e.evaluateDataset(s.validationData,{batches:s.validationBatches})):ut(e.evaluate(a,o,{batchSize:null==s.validationBatchSize?32:s.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)h[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(g,h),g++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Gu(t){return"function"==typeof t.iterator}function Hu(e){t.util.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Ju(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>Yt(t,e,n-e))):Yt(t,e,n-e)}function Zu(e,n){return t.tidy((()=>null==e?null:Array.isArray(e)?e.map((t=>Zu(t,n))):ie(e,"int32"===n.dtype?n:t.cast(n,"int32"))))}function Yu(t,e){const n=[];let s=0,r=null;for(;s<t;)r=s+e,r>=t&&(r=t),n.push([s,r]),s=r;return n}function Xu(t){const e=[];t instanceof A&&(t=[t]);for(let n=0;n<t.length;++n){const s=t[n];if(1===s.rank)e.push(Zt(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function Qu(t,e){if(null==t)return;const n=[];if(e instanceof A)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const s=e[t];n.push(s.id)}const s=[];if(t instanceof A)-1===n.indexOf(t.id)&&s.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&s.push(t)}));else if(null!=t)for(const e in t){const r=t[e];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((t=>{t.isDisposed||t.dispose()}))}function th(t){return Array.isArray(t)}function eh(t){return!function(t){return t instanceof A}(t)&&!th(t)}function nh(t,e,n,s=!0,r=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(th(t)&&t.length>0)e=!0;else if(eh(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new et(`Error when checking model ${r} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let i;if(eh(t)){i=[];for(const n of e){if(null==t[n])throw new et(`No data provided for "${n}". Need data for each key in: ${e}`);i.push(t[n])}}else if(th(t)){if(t.length!==e.length)throw new et(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);i=t}else{if(e.length>1)throw new et(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);i=[t]}if(i=Xu(i),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new et(`Error when checking ${r}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${a.shape}`);for(let e=0;e<n[t].length;++e){if(0===e&&!s)continue;const i=a.shape[e],o=n[t][e];if(null!=o&&o>=0&&i!==o)throw new et(`${r} expected a batch of elements where each example has shape [${n[t].slice(1,n[t].length)}] (i.e.,tensor shape [*,${n[t].slice(1,n[t].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return i}function sh(t,e,n,s=!0,r=""){let i;if(Array.isArray(t)){if(t.length!==e.length)throw new et(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);i=t}else{if(e.length>1)throw new et(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);i=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new et(`Error when checking ${r}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let i=0;i<n[t].length;++i){if(0===i&&!s)continue;const o=a.shape[i],l=n[t][i];if(null!=l&&l!==o)throw new et(`Error when checking ${r}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}class rh extends Pu{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new et("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");_u(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>S.adagrad(.01),Adadelta:()=>S.adadelta(1,.95,Ht()),Adam:()=>S.adam(.001,.9,.999,Ht()),Adamax:()=>S.adamax(.002,.9,.999,Ht(),0),RMSProp:()=>S.rmsprop(.001,.9,0,Ht()),SGD:()=>S.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new et(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof T))throw new et("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new et(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>bu(t)))}else{const n=bu(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new et(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(bu(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ot("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const s=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const s of e){let e=n.hasOwnProperty(s)?n[s]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),r=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Ot("metric",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,s,i;for(const a of e){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const e=this.internalOutputShapes[t];let r;1===e[e.length-1]||this.lossFunctions[t]===fu?-1!==["accuracy","acc"].indexOf(a)?s=yu:-1!==["crossentropy","ce"].indexOf(a)&&(s=Su):this.lossFunctions[t]===du?-1!==["accuracy","acc"].indexOf(a)?s=Nu:-1!==["crossentropy","ce"].indexOf(a)&&(s=Iu):-1!==["accuracy","acc"].indexOf(a)?s=wu:-1!==["crossentropy","ce"].indexOf(a)&&(s=Eu),-1!==["accuracy","acc"].indexOf(a)?r="acc":-1!==["crossentropy","ce"].indexOf(a)&&(r="ce"),i=s,n=""+r}else{const t=Tu(a);i=t,n=""+$u(a)}let e;Ot(n,(()=>{e=i})),r(t,n,e)}})(s[t])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const s=null==n.batchSize?32:n.batchSize;Hu(s);const r=this.standardizeUserDataXY(t,e,!0,s);try{const i=r[0].concat(r[1]);this.makeTestFunction();const a=this.testFunction;return lt(this.testLoop(a,i,s,n.verbose,n.steps))}finally{Qu(r[0],t),Qu(r[1],e)}}async evaluateDataset(e,n){return this.makeTestFunction(),async function(e,n,s){const r=null!=(s=s||{}).batches,i=e.testFunction;let a=[];if(s.verbose>0)throw new nt("Verbose mode is not implemented yet.");t.util.assert(!r||s.batches>0&&Number.isInteger(s.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(s.batches)}`));const o="function"==typeof n.next?n:await n.iterator();let l=0,h=0;for(;!r||h<s.batches;){const n=await o.next();if(a=t.tidy((()=>{if(n.value){const{xs:s,ys:r}=Ku(e,n.value),o=s.concat(r),c=t.tidy((()=>i(o)));if(t.dispose(o),0===h)for(let t=0;t<c.length;++t)a.push(u(0));const p=o[0].shape[0];for(let e=0;e<c.length;++e){const n=c[e],s=a[e];a[e]=t.tidy((()=>t.add(a[e],t.mul(p,n)))),h>0&&t.dispose(s)}t.dispose(c),l+=p,++h}return a})),n.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${s.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const n=a[e];a[e]=t.div(a[e],l),t.dispose(n)}return lt(a)}(this,e,n)}checkNumSamples(t,e,n,s="steps"){let r;if(null!=n){if(r=null,null!=e)throw new et(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new et(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return r}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new et("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),s=n?e:[e],r=this.retrieveSymbolicTensors(s),i=new Ze;if(t instanceof A&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new et(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)i.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new et(`No value is provided for the model's input ${e.name}`);i.add(e,n)}const a=Qe(r,i);return n?a:a[0]}retrieveSymbolicTensors(t){const e=it(null,t.length);let n=t.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],i=r.map((t=>t.name));for(let s=0;s<t.length;++s){const a=i.indexOf(t[s]);if(-1!==a&&(e[s]=r[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,s)=>{null==e&&n.push(t[s])})),new et(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(e,n=32,s=!1){return t.tidy((()=>{const r=this.checkNumSamples(e);if(s)throw new nt("Verbose predictLoop() is not implemented yet.");const i=Yu(r,n),a=this.outputs.map((t=>[]));for(let n=0;n<i.length;++n){t.tidy((()=>{const t=i[n][0],s=i[n][1],r=Ju(e,t,s),a=[];if(Array.isArray(r))for(let t=0;t<r.length;++t)a.push({key:this.inputs[t],value:r[t]});else a.push({key:this.inputs[0],value:r});const o=new Ze(a);return Qe(this.outputs,o)})).forEach(((t,e)=>a[e].push(t)))}return lt(a.map((e=>t.concat(e,0))))}))}predict(t,e={}){const n=Xu(t);sh(n,this.inputNames,this.feedInputShapes,!1);try{const s=null==e.batchSize?32:e.batchSize;return Hu(s),this.predictLoop(n,s)}finally{Qu(n,t)}}predictOnBatch(t){sh(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,n,s=!0,r){if(null==this.optimizer_)throw new tt("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===du?i.push(e.slice(0,e.length-1).concat([1])):i.push(e)}if(function(t,n,s){const r=bt(t.map((t=>t.shape[0])));r.sort();const i=bt(n.map((t=>t.shape[0])));if(i.sort(),r.length>1)throw new et(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(i.length>1)throw new et(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map((t=>t.shape)))}`);if(r.length>0&&i.length>0&&!e.arraysEqual(r,i))throw new et(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${i[0]} target sample(s).`)}(t=nh(t,this.feedInputNames,this.feedInputShapes,!1,"input"),n=nh(n,this.feedOutputNames,i,!1,"target")),function(t,e,n){const s=[uu,fu,pu];for(let r=0;r<t.length;++r){const i=t[r],a=e[r],o=n[r];if(null!=a){if(a===pu&&1===i.shape[i.shape.length-1])throw new et(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(a)){const t=i.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const s=t[n],r=e[n];if(null!=r&&s!==r)throw new et(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(n,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new et(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,n]}async standardizeUserData(t,e,n,s,r=!0,i){const[a,o]=this.standardizeUserDataXY(t,e,r,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const t=Wu(s,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await Uu(o[e],null,t[e]))}return[a,o,l]}testLoop(e,n,s,i=0,a){return t.tidy((()=>{const o=this.checkNumSamples(n,s,a,"steps"),l=[];if(i>0)throw new nt("Verbose mode is not implemented yet.");if(null!=a)throw new nt("steps mode in testLoop() is not implemented yet");{const i=Yu(o,s),a=r(qt(0,o));for(let s=0;s<i.length;++s){const r=i[s][0],o=i[s][1],h=Yt(a,r,o-r),c=Zu(n,h),p=e(c);if(0===s)for(let t=0;t<p.length;++t)l.push(u(0));for(let e=0;e<p.length;++e){const n=p[e];l[e]=t.add(l[e],t.mul(o-r,n))}}for(let e=0;e<l.length;++e)l[e]=t.div(l[e],o)}return l}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const s=t[n];let r=s;if(ot(t,s)>1){r+=`_${ot(t.slice(0,n),s)}`}e.push(r)}return e}makeTrainFunction(){return e=>{const n=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],o=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:s[t]});const o=new Ze(e),l=Qe(this.outputs,o,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let s=(0,this.lossFunctions[e])(r[e],l[e]);null!=i[e]&&(s=Vu(s,i[e]));const a=t.mean(s);n.push(a),u=0===e?s:t.add(u,s)}for(let e=0;e<this.metricsTensors.length;++e){let s;if(this.outputs.length>1&&e<this.outputs.length)s=n[e];else{const n=this.metricsTensors[e][0],i=this.metricsTensors[e][1];s=t.mean(n(r[i],l[i]))}t.keep(s),a.push(s)}return u=t.mean(u),this.calculateLosses().forEach((e=>{u=t.add(u,e)})),u}),!0,o)].concat(a)}}makeTestFunction(){this.testFunction=e=>t.tidy((()=>{const n=[];let s;const r=e.slice(0,this.inputs.length),i=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let t=0;t<this.inputs.length;++t)a.push({key:this.inputs[t],value:r[t]});const o=new Ze(a),l=Qe(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=t.mean(r(i[e],l[e]));s=0===e?a:t.add(s,a),n.push(s)}for(let e=0;e<this.metricsTensors.length;++e){const s=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=t.mean(s(i[r],l[r]));n.push(a)}return n}))}async fit(e,n,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,i,a,o,l,u,h,c,p;this.isTraining=!0;try{const d=null==s.batchSize?32:s.batchSize;Hu(d);const f=!1,g=await this.standardizeUserData(e,n,s.sampleWeight,s.classWeight,f,d);r=g[0],i=g[1],p=g[2];let m,b=!1;if(null!=s.validationData&&s.validationData.length>0){if(b=!0,2!==s.validationData.length)throw 3===s.validationData.length?new nt("validationData including sample weights is not supported yet."):new et(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);l=s.validationData[0],u=s.validationData[1];const t=!0,e=await this.standardizeUserData(l,u,null,null,t,d);h=e[0],c=e[1],m=h.concat(c)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){b=!0;const t=Math.floor(r[0].shape[0]*(1-s.validationSplit)),e=r[0].shape[0];h=Ju(r,t,e),a=r,r=Ju(r,0,t),c=Ju(i,t,e),o=i,i=Ju(i,0,t),m=h.concat(c)}else null!=s.validationSteps&&(b=!0);const y=r.concat(i).concat(p);this.checkTrainableWeightsConsistency();const w=this.makeTrainFunction(),k=this.getDedupedMetricsNames();let v,x;b?(this.makeTestFunction(),v=this.testFunction,x=k.slice().concat(k.map((t=>"val_"+t)))):(v=null,m=[],x=k.slice());const S=ru(s.callbacks,s.yieldEvery);return await this.fitLoop(w,y,k,d,s.epochs,s.verbose,S,v,m,s.shuffle,x,s.initialEpoch,null,null)}finally{this.isTraining=!1,Qu(r,e),Qu(i,n),Qu(a,e),Qu(o,n),Qu(h,l),Qu(c,u),null!=p&&t.dispose(p)}}async fitLoop(n,s,i,a,o,l,u,h,c,p,d,f,g,m){null==a&&(a=32),null==o&&(o=1),null==p&&(p=!0),null==f&&(f=0);let b=!1;if(null!=h&&null!=c&&(b=!0),null!=m&&(b=!0,null==g))throw new et("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const y=this.checkNumSamples(s,a,g,"steps_per_epoch");let w;null!=y&&(w=qt(0,y)),null==l&&(l=1);const{callbackList:k,history:v}=au(u,l,o,f,y,g,a,b,d);k.setModel(this),this.history=v,await k.onTrainBegin(),this.stopTraining_=!1;for(let l=f;l<o;++l){await k.onEpochBegin(l);const o={};if(null!=g)throw new nt("stepsPerEpoch mode is not implemented yet.");{if("batch"===p)throw new nt("batch shuffling is not implemneted yet");p&&e.shuffle(w);const l=r(w),u=Yu(y,a);for(let e=0;e<u.length;++e){const r={};if(await k.onBatchBegin(e,r),t.tidy((()=>{const p=u[e][0],d=u[e][1],f=Yt(l,p,d-p);r.batch=e,r.size=d-p;const g=Zu(s,f),m=n(g);for(let e=0;e<i.length;++e){const n=i[e],s=m[e];r[n]=s,t.keep(s)}if(e===u.length-1&&b){const e=this.testLoop(h,c,a);for(let n=0;n<i.length;++n){const s=i[n],r=e[n];t.keep(r),o["val_"+s]=r}}})),await k.onBatchEnd(e,r),Xl(r),this.stopTraining_)break}l.dispose()}if(await k.onEpochEnd(l,o),this.stopTraining_)break}return await k.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return qu(this,t,e)}async trainOnBatch(e,n){const s=await this.standardizeUserData(e,n),r=s[0],i=s[1],a=this.makeTrainFunction()(r.concat(i)),o=[];for(const t of a){const e=await t.data();o.push(e[0])}return t.dispose(a),Qu(s[0],e),Qu(s[1],n),lt(o)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let t=0;t<s.length;++t)n&&!s[t].trainable||e.push({name:s[t].originalName,tensor:r[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const n=t.memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=n-t.memory().numTensors}return e}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=ht(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>ht(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const s of e){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");t[s]=ht(n[s])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[ht($u(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>ht($u(t))));{const t={};for(const e in this.metrics)t[e]=ht($u(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=ou(Lu(t.optimizer_config));let n,s;if("string"==typeof t.loss)n=ct(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>ct(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=ct(t.loss[e])}if(Array.isArray(t.metrics))s=t.metrics.map((t=>ct(t)));else if(null!=t.metrics){s={};for(const e in t.metrics)s[e]=ct(t.metrics[e])}this.compile({loss:n,metrics:s,optimizer:e})}async save(t,e){if("string"==typeof t){const e=$.getSaveHandlers(t);if(0===e.length)throw new et(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new et(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new et("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await $.encodeWeights(this.getNamedWeights(e)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v4.1.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:r}=await $.encodeWeights(await this.optimizer.getWeights(),t);n.specs.push(...r),n.data=$.concatenateArrayBuffers([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Cu(this.userDefinedMetadata,this.name,t),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,t.save(s)}setUserDefinedMetadata(t){Cu(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}rh.className="Model",i.registerClass(rh);class ih extends rh{}async function ah(t,e){if(null==e&&(e={}),"string"==typeof t){const n=$.getLoadHandlers(t,e);if(0===n.length)n.push($.browserHTTPRequest(t,e));else if(n.length>1)throw new et(`Found more than one (${n.length}) load handlers for URL '${t}'`);t=n[0]}return async function(t,e,n){null==n&&(n={});if(null==t.load)throw new et("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await t.load();let r=s.modelTopology;null!=r.model_config&&(r=r.model_config);const i=null==n.strict||n.strict,a=null!=s.weightData&&null!=s.weightSpecs&&i,o=ou(Lu(r),e,a),l=s.trainingConfig;null!=l&&o.loadTrainingConfig(l);null!=s.userDefinedMetadata&&o.setUserDefinedMetadata(s.userDefinedMetadata);if(null!=s.weightData){if(null==s.weightSpecs)throw new et("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:t,optimizerWeights:e}=function(t,e){const n=$.decodeWeights(t,e),s={},r=[];return e.forEach((t=>{"optimizer"===t.group?r.push({name:t.name,tensor:n[t.name]}):s[t.name]=n[t.name]})),{modelWeights:s,optimizerWeights:r}}(s.weightData,s.weightSpecs);o.loadWeights(t,i),null!=o.optimizer&&e.length>0&&await o.optimizer.setWeights(e),g(t),g(e.map((t=>t.tensor)))}return o}(t,void 0,e)}ih.className="Functional",i.registerClass(ih);class oh extends rh{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:At("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new et(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof oh||t instanceof rh;let n;if(e){if(n=t,1!==n.outputs.length)throw new et("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new et("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new et("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=Je({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new et(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new et("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Ge(this.outputs[0])}this.inboundNodes=[],new Ke({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:it(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Me(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new rh({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new tt("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new tt("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new tt("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new tt("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,n,s={},r=!1){let i,a={};if(n instanceof Array){if(null==n[0].className||"Merge"===n[0].className)throw new et("Legacy serialization format not supported yet.");i=n}else e.assert(null!=n.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),i=n.layers,delete n.layers,a=n;const o=new t(a);if(!(o instanceof oh))throw new nt(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const t of i){const e=ou(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(t){if(null==this.model)throw new et("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new et("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}function lh(t){return new rh(t)}function uh(t){return new oh(t)}function hh(t){return Je(t)}function ch(t,e){iu.registerCallbackConstructor(t,e)}oh.className="Sequential",i.registerClass(oh);class ph extends i.Serializable{getConfig(){return{}}}class dh extends ph{apply(e,n=1){return function(e,n=1){if(1!==n)throw new nt(`Support for alpha values other than 1 (${n}) is not implemented yet.`);return t.elu(e)}(e,n)}}dh.className="elu",i.registerClass(dh);class fh extends ph{apply(e){return t.selu(e)}}fh.className="selu",i.registerClass(fh);class gh extends ph{apply(e){return t.relu(e)}}gh.className="relu",i.registerClass(gh);class mh extends ph{apply(e){return s((()=>t.minimum(6,t.relu(e))))}}mh.className="relu6",i.registerClass(mh);class bh extends ph{apply(t){return t}}bh.className="linear",i.registerClass(bh);class yh extends ph{apply(e){return t.sigmoid(e)}}yh.className="sigmoid",i.registerClass(yh);class wh extends ph{apply(e){return function(e){return s((()=>{const n=t.add(.5,t.mul(.2,e));return t.clipByValue(n,0,1)}))}(e)}}wh.className="hardSigmoid",i.registerClass(wh);class kh extends ph{apply(e){return t.softplus(e)}}kh.className="softplus",i.registerClass(kh);class vh extends ph{apply(e){return function(e){return s((()=>t.div(e,t.add(t.abs(e),1))))}(e)}}vh.className="softsign",i.registerClass(vh);class xh extends ph{apply(e){return t.tanh(e)}}xh.className="tanh",i.registerClass(xh);class Sh extends ph{apply(e,n=-1){return t.softmax(e,n)}}Sh.className="softmax",i.registerClass(Sh);class Nh extends ph{apply(e,n=-1){return t.logSoftmax(e,n)}}Nh.className="logSoftmax",i.registerClass(Nh);class Eh extends ph{apply(e,n=1){return s((()=>t.mul(t.sigmoid(t.mul(e,n)),e)))}}Eh.className="swish",i.registerClass(Eh);class Ih extends ph{apply(e){return s((()=>t.mul(e,t.tanh(t.softplus(e)))))}}function Ah(t){return t.getClassName()}function Th(t,e={}){return gt(t,i.SerializationMap.getMap().classNameMap,e,"activation")}function $h(t){if(null==t){const t={className:"linear",config:{}};return Th(t)}if("string"==typeof t){const e={};return e.className=t,e.config={},Th(e)}return t instanceof ph?t:Th(t)}function Ch(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}Ih.className="mish",i.registerClass(Ih);class zh extends i.Serializable{}class _h extends zh{constructor(t){super(),Ch(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return s((()=>{let n=a([1]);return this.hasL1&&(n=k(n,C(t.mul(this.l1,z(e))))),this.hasL2&&(n=k(n,C(t.mul(this.l2,ae(e))))),t.reshape(n,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}_h.className="L1L2",i.registerClass(_h);const Dh={l1l2:"L1L2"};function Fh(t){return dt(t)}function Rh(t,e={}){return gt(t,i.SerializationMap.getMap().classNameMap,e,"regularizer")}function Mh(t){if(null==t)return null;if("string"==typeof t){return Rh({className:t in Dh?Dh[t]:t,config:{}})}return t instanceof zh?t:Rh(t)}class Lh extends qe{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Re(t);let n=_(t);return null!=this.maxValue&&(n=D(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Lh.className="ReLU",i.registerClass(Lh);class Oh extends qe{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Re(t);return F(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Oh.className="LeakyReLU",i.registerClass(Oh);class Bh extends qe{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=_e(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Mh(t.alphaRegularizer),this.alphaConstraint=Gl(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new et(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Me(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new We({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Re(t),R(t,this.alpha.read())}getConfig(){const t={alphaInitializer:ze(this.alphaInitializer),alphaRegularizer:Fh(this.alphaRegularizer),alphaConstraint:jl(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Bh.className="PReLU",i.registerClass(Bh);class Ph extends qe{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new nt(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Re(t);return M(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Ph.className="ELU",i.registerClass(Ph);class Wh extends qe{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Re(t);return l(n,b(L(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Wh.className="ThresholdedReLU",i.registerClass(Wh);class Uh extends qe{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Sh).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Re(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Vh(t,e,n){if("number"==typeof t)return it(t,e);if(t.length!==e)throw new et(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let r=0;r<e;++r){const i=t[r];if((s=i)!==parseInt(s.toString(),10))throw new et(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${i}`)}return t;var s}function Kh(t,e,n,s,r=1){if(null==t)return t;let i;return i="same"===n?t:t-(e+(e-1)*(r-1))+1,Math.floor((i+s-1)/s)}function jh(t,e,n,s){if(null==t)return null;if("valid"===s)t=t*e+jt([n-e,0]);else{if("same"!==s)throw new et(`Unsupport padding mode: ${s}.`);t*=e}return t}function qh(e,n){return s((()=>(Ft(n),"channelsFirst"===n?t.transpose(e,[0,2,3,1]):e)))}function Gh(e,n){return s((()=>(Ft(n),"channelsFirst"===n?t.transpose(e,[0,2,3,4,1]):e)))}function Hh(e,n,r,i=[1,1],a="valid",o,l,u=null){return s((()=>{if(null==o&&(o="channelsLast"),Ft(o),3!==e.rank&&4!==e.rank)throw new et(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==n.rank&&4!==n.rank)throw new et(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let s=qh(e,o);if("causal"===a)throw new nt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return s=t.fused.conv2d({x:s,filter:n,strides:i,pad:"same"===a?"same":"valid",dilations:l,dataFormat:"NHWC",bias:r,activation:u}),"channelsFirst"===o&&(s=t.transpose(s,[0,3,1,2])),s}))}Uh.className="Softmax",i.registerClass(Uh);class Jh extends qe{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Jh.verifyArgs(e),this.rank=t,vt(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new nt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Vh(e.kernelSize,t,"kernelSize"),this.strides=Vh(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Rt(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ft(this.dataFormat),this.activation=$h(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=_e(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Gl(e.biasConstraint),this.biasRegularizer=Mh(e.biasRegularizer),this.activityRegularizer=Mh(e.activityRegularizer),this.dilationRate=Vh(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new et(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new et(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new et(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(at("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!kt(t.kernelSize,"number",1,3))throw new et(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ah(this.activation),useBias:this.useBias,biasInitializer:ze(this.biasInitializer),biasRegularizer:Fh(this.biasRegularizer),activityRegularizer:Fh(this.activityRegularizer),biasConstraint:jl(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Zh extends Jh{constructor(t,e){super(t,e),this.kernel=null,Zh.verifyArgs(e),this.filters=e.filters,vt(this.filters,"filters"),this.kernelInitializer=_e(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Gl(e.kernelConstraint),this.kernelRegularizer=Mh(e.kernelRegularizer)}build(t){t=Me(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new et(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(e,n){return s((()=>{let n;e=Re(e);const r=null==this.bias?null:this.bias.read(),i=St(this.activation.getClassName());if(null!=i&&2===this.rank)n=Hh(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,i);else{if(1===this.rank)n=function(e,n,r,i=1,a="valid",o,l=1){return s((()=>{if(null==o&&(o="channelsLast"),Ft(o),3!==e.shape.length)throw new et(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==n.shape.length)throw new et(`The kernel for a conv1dWithBias operation should be 3, but is ${n.shape.length} instead`);if(null!=r&&1!==r.shape.length)throw new et(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===o&&(e=t.transpose(e,[0,2,1])),"causal"===a)throw new nt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let s=t.conv1d(e,n,i,"same"===a?"same":"valid","NWC",l);return null!=r&&(s=le(s,r)),s}))}(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)n=Hh(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new nt("convolutions greater than 3D are not implemented yet.");n=function(e,n,r,i=[1,1,1],a="valid",o,l){return s((()=>{if(null==o&&(o="channelsLast"),Ft(o),4!==e.rank&&5!==e.rank)throw new et(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==n.rank&&5!==n.rank)throw new et(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let s=Gh(e,o);if("causal"===a)throw new nt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return s=t.conv3d(s,n,i,"same"===a?"same":"valid","NDHWC",l),null!=r&&(s=le(s,r)),"channelsFirst"===o&&(s=t.transpose(s,[0,4,1,2,3])),s}))}(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(n=this.activation.apply(n))}return n}))}computeOutputShape(t){t=Me(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const s=Kh(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(s)}let s=[t[0]];return"channelsLast"===this.dataFormat?(s=s.concat(e),s.push(this.filters)):(s.push(this.filters),s=s.concat(e)),s}getConfig(){const t={filters:this.filters,kernelInitializer:ze(this.kernelInitializer),kernelRegularizer:Fh(this.kernelRegularizer),kernelConstraint:jl(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new et(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Yh extends Zh{constructor(t){super(2,t),Yh.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!kt(t.kernelSize,"number",1,2))throw new et(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Yh.className="Conv2D",i.registerClass(Yh);class Xh extends Zh{constructor(t){super(3,t),Xh.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new et(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Xh.className="Conv3D",i.registerClass(Xh);class Qh extends Yh{constructor(t){if(super(t),this.inputSpec=[new We({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new et(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=Me(t)).length)throw new et("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new et("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new We({ndim:4,axes:{[e]:n}})],this.built=!0}call(e,n){return t.tidy((()=>{let n=Re(e);if(4!==n.shape.length)throw new et(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);const s=n.shape,r=s[0];let i,a;"channelsFirst"===this.dataFormat?(i=2,a=3):(i=1,a=2);const o=s[i],l=s[a],u=this.kernelSize[0],h=this.kernelSize[1],c=this.strides[0],p=this.strides[1],d=[r,jh(o,c,u,this.padding),jh(l,p,h,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(n=t.transpose(n,[0,2,3,1]));let f=t.conv2dTranspose(n,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=t.transpose(f,[0,3,1,2])),null!=this.bias&&(f=le(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f}))}computeOutputShape(t){const e=(t=Me(t)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[s]=jh(e[s],o,i,this.padding),e[r]=jh(e[r],l,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Qh.className="Conv2DTranspose",i.registerClass(Qh);class tc extends Xh{constructor(t){if(super(t),this.inputSpec=[new We({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new et(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(5!==(t=Me(t)).length)throw new et("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new et("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new We({ndim:5,axes:{[e]:n}})],this.built=!0}call(e,n){return t.tidy((()=>{let n=Re(e);if(5!==n.shape.length)throw new et(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);const s=n.shape,r=s[0];let i,a,o;"channelsFirst"===this.dataFormat?(o=2,i=3,a=4):(o=1,i=2,a=3);const l=s[o],u=s[i],h=s[a],c=this.kernelSize[0],p=this.kernelSize[1],d=this.kernelSize[2],f=this.strides[0],g=this.strides[1],m=this.strides[2],b=[r,jh(l,f,c,this.padding),jh(u,g,p,this.padding),jh(h,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(n=t.transpose(n,[0,2,3,4,1]));let y=t.conv3dTranspose(n,this.kernel.read(),b,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=t.transpose(y,[0,4,1,2,3])),null!==this.bias&&(y=le(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(t){const e=(t=Me(t)).slice();let n,s,r,i;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3,i=4):(n=4,s=1,r=2,i=3);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],h=this.strides[1],c=this.strides[2];return e[n]=this.filters,e[s]=jh(e[s],u,a,this.padding),e[r]=jh(e[r],h,o,this.padding),e[i]=jh(e[i],c,l,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}tc.className="Conv3DTranspose",i.registerClass(tc);class ec extends Zh{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new et("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new et("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new et(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=_e(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Mh(e.depthwiseRegularizer),this.depthwiseConstraint=Gl(e.depthwiseConstraint),this.pointwiseInitializer=_e(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Mh(e.pointwiseRegularizer),this.pointwiseConstraint=Gl(e.pointwiseConstraint)}build(t){if((t=Me(t)).length<this.rank+2)throw new et(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new et(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let t=0;t<this.rank;++t)r.push(1);r.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new We({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(e,n){return s((()=>{let n;if(e=Re(e),1===this.rank)throw new nt("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=t.transpose(e,[0,2,3,1])),n=t.separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=le(n,this.bias.read(),this.dataFormat)),null!=this.activation&&(n=this.activation.apply(n)),"channelsFirst"===this.dataFormat&&(n=t.transpose(n,[0,3,1,2])),n}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=ze(this.depthwiseInitializer),t.pointwiseInitializer=ze(this.pointwiseInitializer),t.depthwiseRegularizer=Fh(this.depthwiseRegularizer),t.pointwiseRegularizer=Fh(this.pointwiseRegularizer),t.depthwiseConstraint=jl(this.depthwiseConstraint),t.pointwiseConstraint=jl(this.pointwiseConstraint),t}}ec.className="SeparableConv";class nc extends ec{constructor(t){super(2,t)}}nc.className="SeparableConv2D",i.registerClass(nc);class sc extends Zh{constructor(t){super(1,t),sc.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!kt(t.kernelSize,"number",1,1))throw new et(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}sc.className="Conv1D",i.registerClass(sc);class rc extends qe{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return s((()=>{if(t=Re(t),"channelsLast"===this.dataFormat){const e=Qt(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Qt(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=Qt(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Qt(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}rc.className="Cropping2D",i.registerClass(rc);class ic extends qe{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ft(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,wt($t,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(e,n){return t.tidy((()=>{let n=Re(e);const s=n.shape;if("channelsFirst"===this.dataFormat){n=t.transpose(n,[0,2,3,1]);const e=this.size[0]*s[2],r=this.size[1]*s[3],i="nearest"===this.interpolation?t.image.resizeNearestNeighbor(n,[e,r]):t.image.resizeBilinear(n,[e,r]);return t.transpose(i,[0,3,1,2])}{const e=this.size[0]*s[1],r=this.size[1]*s[2];return"nearest"===this.interpolation?t.image.resizeNearestNeighbor(n,[e,r]):t.image.resizeBilinear(n,[e,r])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}ic.className="UpSampling2D",i.registerClass(ic);class ac extends Jh{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=_e(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Gl(t.depthwiseConstraint),this.depthwiseRegularizer=Mh(t.depthwiseRegularizer)}build(t){if((t=Me(t)).length<4)throw new et(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new et(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return s((()=>{let n=function(e,n,r=[1,1],i="valid",a,o){return s((()=>{null==a&&(a="channelsLast"),Ft(a);let s=qh(e,a);if(4!==e.rank)throw new et(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==n.rank)throw new et(`depthwiseKernel is required to be 4-D, but is instead ${n.rank}-D`);return s=t.depthwiseConv2d(s,n,r,"same"===i?"same":"valid","NHWC",o),"channelsFirst"===a&&(s=t.transpose(s,[0,3,1,2])),s}))}(e=Re(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=le(n,this.bias.read(),this.dataFormat)),null!=this.activation&&(n=this.activation.apply(n)),n}))}computeOutputShape(t){t=Me(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=Kh(e,this.kernelSize[0],this.padding,this.strides[0]),i=Kh(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],s,r,i]:[t[0],r,i,s]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=ze(this.depthwiseInitializer),t.depthwiseRegularizer=Fh(this.depthwiseRegularizer),t.depthwiseConstraint=jl(this.depthwiseRegularizer),t}}function oc(t,e,n,s){if(Array.isArray(t)){if(null!=e||null!=n)throw new et("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=t.slice(t.length-s,t.length),t=t.slice(0,t.length-s)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function r(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=r(e),constants:n=r(n)}}function lc(e,n,s,r=!1,i,a,o=!1,l=!1){return t.tidy((()=>{const u=n.shape.length;if(u<3)throw new et(`Input should be at least 3D, but is ${u}D.`);const h=[1,0].concat(qt(2,u));if(n=t.transpose(n,h),null!=a)throw new nt("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=i&&((i=t.cast(t.cast(i,"bool"),"float32")).rank===u-1&&(i=t.expandDims(i,-1)),i=t.transpose(i,h)),r&&(n=t.reverse(n,0),null!=i&&(i=t.reverse(i,0)));const c=[];let p,d=s;const f=n.shape[0],g=t.unstack(n);let m,b;null!=i&&(m=t.unstack(i));for(let n=0;n<f;++n){const s=g[n],r=t.tidy((()=>e(s,d)));if(null==i)p=r[0],d=r[1];else{const e=t.tidy((()=>{const e=m[n],s=t.sub(t.onesLike(e),e);return{output:t.add(t.mul(r[0],e),t.mul(d[0],s)),newStates:d.map(((n,i)=>t.add(t.mul(r[1][i],e),t.mul(n,s))))}}));p=e.output,d=e.newStates}l&&c.push(p)}if(l){const e=1;b=t.stack(c,e)}return[p,b,d]}))}ac.className="DepthwiseConv2D",i.registerClass(ac);class uc extends qe{constructor(t){let e;if(super(t),null==t.cell)throw new et("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new bc({cells:t.cell}):t.cell,null==e.stateSize)throw new et("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new We({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return qt(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null))}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){De(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let s;if(s=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const s of e)n.push([t[0],s]);return[s].concat(n)}return s}computeMask(e,n){return t.tidy((()=>{Array.isArray(n)&&(n=n[0]);const t=this.returnSequences?n:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new nt("Constants support is not implemented in RNN yet.");De(t)&&(t=t[0]);const n=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new We({shape:[n,null,...s]});const r=[t[0]].concat(t.slice(2));let i;if(this.cell.build(r),i=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!e.arraysEqual(this.stateSpec.map((t=>t.shape[t.shape.length-1])),i))throw new et(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map((t=>new We({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(n,r=!1){s((()=>{if(!this.stateful)throw new Q("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(null==s)throw new et("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>t.zeros([s,e]))):this.states_=[t.zeros([s,this.cell.stateSize])];else if(null==n)t.dispose(this.states_),null!=this.keptStates&&(t.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>t.zeros([s,e]))):this.states_[0]=t.zeros([s,this.cell.stateSize]);else{if(Array.isArray(n)||(n=[n]),n.length!==this.states_.length)throw new et(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${n.length} state value(s). Input received: ${n}`);!0===r?this.keptStates.push(this.states_.slice()):t.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const r=n[t],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[s,i];if(!e.arraysEqual(r.shape,a))throw new et(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>t.keep(e.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const r=oc(t,n,s,this.numConstants);t=r.inputs,n=r.initialState,s=r.constants;let i=[],a=[];if(null!=n){e.initialState=n,i=i.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new We({shape:t.shape}));a=a.concat(this.stateSpec)}null!=s&&(e.constants=s,i=i.concat(s),this.numConstants=s.length);if(i[0]instanceof Ue){const n=[t].concat(i),s=this.inputSpec.concat(a),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,e);return this.inputSpec=r,o}return super.apply(t,e)}call(t,e){return s((()=>{const n=null==e?null:e.mask,s=null==e?null:e.training;let r=null==e?null:e.initialState;t=Re(t),null==r&&(r=this.stateful?this.states_:this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new et(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:s},o=lc(((t,e)=>{const n=this.cell.call([t].concat(e),a);return[n[0],n.slice(1)]}),t,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],h=o[2];this.stateful&&this.resetStates(h,s);const c=this.returnSequences?u:l;return this.returnState?[c].concat(h):c}))}getInitialState(e){return s((()=>{let n=t.zeros(e.shape);return n=t.sum(n,[1,2]),n=Zt(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?ne(n,[1,t]):n)):this.cell.stateSize>1?[ne(n,[1,this.cell.stateSize])]:[n]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===uc.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),t),e)}static fromConfig(t,e,n={}){const s=ou(e.cell,n);return new t(Object.assign(e,{cell:s}))}}uc.className="RNN",i.registerClass(uc);class hc extends qe{}class cc extends hc{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,vt(this.units,"units"),this.activation=$h(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=_e(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_e(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_e(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Mh(t.kernelRegularizer),this.recurrentRegularizer=Mh(t.recurrentRegularizer),this.biasRegularizer=Mh(t.biasRegularizer),this.kernelConstraint=Gl(t.kernelConstraint),this.recurrentConstraint=Gl(t.recurrentConstraint),this.biasConstraint=Gl(t.biasConstraint),this.dropout=Kt([1,jt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Kt([1,jt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Me(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return s((()=>{if(2!==e.length)throw new et(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=null!=n.training&&n.training;let i;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yc({ones:()=>t.onesLike(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yc({ones:()=>t.onesLike(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=this.recurrentDropoutMask;i=re(null!=a?t.mul(e,a):e,this.kernel.read()),null!=this.bias&&(i=le(i,this.bias.read())),null!=o&&(s=t.mul(s,o));let l=t.add(i,re(s,this.recurrentKernel.read()));return null!=this.activation&&(l=this.activation.apply(l)),[l,l]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Ah(this.activation),useBias:this.useBias,kernelInitializer:ze(this.kernelInitializer),recurrentInitializer:ze(this.recurrentInitializer),biasInitializer:ze(this.biasInitializer),kernelRegularizer:Fh(this.kernelRegularizer),recurrentRegularizer:Fh(this.recurrentRegularizer),biasRegularizer:Fh(this.biasRegularizer),activityRegularizer:Fh(this.activityRegularizer),kernelConstraint:jl(this.kernelConstraint),recurrentConstraint:jl(this.recurrentConstraint),biasConstraint:jl(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}cc.className="SimpleRNNCell",i.registerClass(cc);class pc extends uc{constructor(t){t.cell=new cc(t),super(t)}call(e,n){return s((()=>{null!=this.cell.dropoutMask&&(t.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(t.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=null==n?null:n.mask,r=null==n?null:n.training,i=null==n?null:n.initialState;return super.call(e,{mask:s,training:r,initialState:i})}))}static fromConfig(t,e){return new t(e)}}pc.className="SimpleRNN",i.registerClass(pc);class dc extends hc{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new et("GRUCell does not support reset_after parameter set to true.");this.units=t.units,vt(this.units,"units"),this.activation=$h(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=$h(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=_e(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_e(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_e(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Mh(t.kernelRegularizer),this.recurrentRegularizer=Mh(t.recurrentRegularizer),this.biasRegularizer=Mh(t.biasRegularizer),this.kernelConstraint=Gl(t.kernelConstraint),this.recurrentConstraint=Gl(t.recurrentConstraint),this.biasConstraint=Gl(t.biasConstraint),this.dropout=Kt([1,jt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Kt([1,jt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Me(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return s((()=>{if(2!==e.length)throw new et(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=null!=n.training&&n.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yc({ones:()=>t.onesLike(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yc({ones:()=>t.onesLike(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u;0<this.dropout&&this.dropout<1&&(e=t.mul(e,i[0]));let h=re(e,this.kernel.read());this.useBias&&(h=le(h,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=t.mul(r,a[0]));const c=this.recurrentKernel.read(),[p,d]=t.split(c,[2*this.units,this.units],c.rank-1),f=re(r,p),[g,m,b]=t.split(h,3,h.rank-1),[y,w]=t.split(f,2,f.rank-1);o=this.recurrentActivation.apply(t.add(g,y)),l=this.recurrentActivation.apply(t.add(m,w));const k=re(t.mul(l,r),d);u=this.activation.apply(t.add(b,k));const v=t.add(t.mul(o,r),t.mul(t.add(1,t.neg(o)),u));return[v,v]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Ah(this.activation),recurrentActivation:Ah(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ze(this.kernelInitializer),recurrentInitializer:ze(this.recurrentInitializer),biasInitializer:ze(this.biasInitializer),kernelRegularizer:Fh(this.kernelRegularizer),recurrentRegularizer:Fh(this.recurrentRegularizer),biasRegularizer:Fh(this.biasRegularizer),activityRegularizer:Fh(this.activityRegularizer),kernelConstraint:jl(this.kernelConstraint),recurrentConstraint:jl(this.recurrentConstraint),biasConstraint:jl(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}dc.className="GRUCell",i.registerClass(dc);class fc extends uc{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new dc(t),super(t)}call(e,n){return s((()=>{null!=this.cell.dropoutMask&&(t.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(t.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=null==n?null:n.mask,r=null==n?null:n.training,i=null==n?null:n.initialState;return super.call(e,{mask:s,training:r,initialState:i})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}fc.className="GRU",i.registerClass(fc);class gc extends hc{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,vt(this.units,"units"),this.activation=$h(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=$h(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=_e(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_e(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_e(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Mh(t.kernelRegularizer),this.recurrentRegularizer=Mh(t.recurrentRegularizer),this.biasRegularizer=Mh(t.biasRegularizer),this.kernelConstraint=Gl(t.kernelConstraint),this.recurrentConstraint=Gl(t.recurrentConstraint),this.biasConstraint=Gl(t.biasConstraint),this.dropout=Kt([1,jt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Kt([1,jt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Me(t))[t.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;s=new((e=class extends de{apply(e,s){const r=t.apply([n]),i=(new ge).apply([n]),a=t.apply([2*n]);return ee(ee(r,i),a)}}).className="CustomInit",e)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,n){return s((()=>{const s=null!=n.training&&n.training;if(3!==e.length)throw new et(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const i=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yc({ones:()=>t.onesLike(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yc({ones:()=>t.onesLike(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=this.recurrentDropoutMask;let l,u,h,c;0<this.dropout&&this.dropout<1&&(e=t.mul(e,a[0]));let p=re(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=t.mul(r,o[0])),p=t.add(p,re(r,this.recurrentKernel.read())),this.useBias&&(p=le(p,this.bias.read()));const[d,f,g,m]=t.split(p,4,p.rank-1);l=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(f),h=t.add(t.mul(u,i),t.mul(l,this.activation.apply(g))),c=this.recurrentActivation.apply(m);const b=t.mul(c,this.activation.apply(h));return[b,b,h]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Ah(this.activation),recurrentActivation:Ah(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ze(this.kernelInitializer),recurrentInitializer:ze(this.recurrentInitializer),biasInitializer:ze(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Fh(this.kernelRegularizer),recurrentRegularizer:Fh(this.recurrentRegularizer),biasRegularizer:Fh(this.biasRegularizer),activityRegularizer:Fh(this.activityRegularizer),kernelConstraint:jl(this.kernelConstraint),recurrentConstraint:jl(this.recurrentConstraint),biasConstraint:jl(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}gc.className="LSTMCell",i.registerClass(gc);class mc extends uc{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new gc(t),super(t)}call(e,n){return s((()=>{null!=this.cell.dropoutMask&&(t.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(t.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=null==n?null:n.mask,r=null==n?null:n.training,i=null==n?null:n.initialState;return super.call(e,{mask:s,training:r,initialState:i})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}mc.className="LSTM",i.registerClass(mc);class bc extends hc{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return s((()=>{let n=t.slice(1);const s=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?s.push(n.splice(0,t.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=s[a],i=0===a?[t[0]].concat(n):[i[0]].concat(n),i=o.call(i,e),r.push(i.slice(1))}n=[];for(const t of r.slice().reverse())n.push(...t);return[i[0]].concat(n)}))}build(t){let e;De(t)&&(t=t[0]),this.cells.forEach(((n,s)=>{Ot(`RNNCell_${s}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign(Object.assign({},t),e)}static fromConfig(t,e,n={}){const s=[];for(const t of e.cells)s.push(ou(t,n));return new t({cells:s})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Be(t)}setWeights(t){const e=[];for(const n of this.cells){const s=n.weights.length,r=t.splice(s);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],r[t]])}Pe(e)}}function yc(e){const{ones:n,rate:s,training:r=!1,count:i=1,dropoutFunc:a}=e,o=()=>null!=a?a(n(),s):ue(n(),s),l=()=>he(o,n,r);if(!i||i<=1)return t.keep(l().clone());return Array(i).fill(void 0).map(l).map((e=>t.keep(e.clone())))}bc.className="StackedRNNCells",i.registerClass(bc);var wc=function(t,e){var n={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&e.indexOf(s)<0&&(n[s]=t[s]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(t);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(t,s[r])&&(n[s[r]]=t[s[r]])}return n};class kc extends uc{constructor(t){if(t.unroll)throw new nt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new nt("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new We({ndim:5})]}call(e,n){return t.tidy((()=>{if(null!=this.cell.dropoutMask&&(t.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(t.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),n&&n.constants)throw new et("ConvRNN2D cell does not support constants");const s=null==n?null:n.mask,r=null==n?null:n.training,i=null==n?null:n.initialState;return super.call(e,{mask:s,training:r,initialState:i})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(e){return t.tidy((()=>{const{stateSize:n}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)],a=t.zeros(i);return Array.isArray(n)?Array(n.length).fill(a):[a]}))}resetStates(n,s=!1){t.tidy((()=>{if(!this.stateful)throw new Q("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape,i=this.computeSingleOutputShape(r),a=[i[0],...i.slice(2)];if(null==r[0])throw new et("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>t.zeros(a))):this.states_=[t.zeros(a)];else if(null==n)t.dispose(this.states_),null!=this.keptStates&&(t.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>t.zeros(a))):this.states_[0]=t.zeros(a);else{if(Array.isArray(n)||(n=[n]),n.length!==this.states_.length)throw new et(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${n.length} state value(s). Input received: ${n}`);s?this.keptStates.push(this.states_.slice()):t.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const s=n[t],r=a;if(!e.arraysEqual(s.shape,r))throw new et(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>t.keep(e.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:s,padding:r,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===e,l=t[o?3:2],u=t[o?4:3],h=Kh(l,s[0],r,i[0],a[0]),c=Kh(u,s[1],r,i[1],a[1]);return[...t.slice(0,2),...o?[n,h,c]:[h,c,n]]}}kc.className="ConvRNN2D";class vc extends gc{constructor(t){const{filters:e,kernelSize:n,strides:s,padding:r,dataFormat:i,dilationRate:a}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,vt(this.filters,"filters"),this.kernelSize=Vh(n,2,"kernelSize"),this.kernelSize.forEach((t=>vt(t,"kernelSize"))),this.strides=Vh(s||1,2,"strides"),this.strides.forEach((t=>vt(t,"strides"))),this.padding=r||"valid",Rt(this.padding),this.dataFormat=i||"channelsLast",Ft(this.dataFormat),this.dilationRate=Vh(a||1,2,"dilationRate"),this.dilationRate.forEach((t=>vt(t,"dilationRate")))}build(e){var n;e=Me(e);const s="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[s])throw new et(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],i=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const s=this.biasInitializer,r=this.filters;e=new((n=class extends de{apply(e,n){return te([s.apply([r]),t.ones([r]),s.apply([2*r])])}}).className="CustomInit",n)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,n){return t.tidy((()=>{if(3!==e.length)throw new et(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=n.training||!1,r=e[0],i=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yc({ones:()=>t.onesLike(r),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,l=(e,n,s)=>n&&n[s]?t.mul(n[s],e):e;let u=l(r,o,0),h=l(r,o,1),c=l(r,o,2),p=l(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yc({ones:()=>t.onesLike(i),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let f=l(i,d,0),g=l(i,d,1),m=l(i,d,2),b=l(i,d,3);const[y,w,k,v]=t.split(this.kernel.read(),4,3),[x,S,N,E]=this.useBias?t.split(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,x,this.padding),h=this.inputConv(h,w,S,this.padding),c=this.inputConv(c,k,N,this.padding),p=this.inputConv(p,v,E,this.padding);const[I,A,T,$]=t.split(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,I),g=this.recurrentConv(g,A),m=this.recurrentConv(m,T),b=this.recurrentConv(b,$);const C=this.recurrentActivation.apply(t.add(u,f)),z=this.recurrentActivation.apply(t.add(h,g)),_=t.add(t.mul(z,a),t.mul(C,this.activation.apply(t.add(c,m)))),D=t.mul(this.recurrentActivation.apply(t.add(p,b)),this.activation.apply(_));return[D,D,_]}))}getConfig(){const t=super.getConfig(),e=wc(t,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},e),n)}inputConv(e,n,s,r){const i=t.conv2d(e,n,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return s?le(i,s,this.dataFormat):i}recurrentConv(e,n){return t.conv2d(e,n,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}vc.className="ConvLSTM2DCell",t.serialization.registerClass(vc);class xc extends kc{constructor(t){const e=new vc(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}xc.className="ConvLSTM2D",t.serialization.registerClass(xc);class Sc extends qe{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return s((()=>{this.invokeCallHook(t,e);const n=Re(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,s=this.getNoiseShape(n);return he((()=>ue(n,this.rate,s,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Sc.className="Dropout",i.registerClass(Sc);class Nc extends Sc{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Nc.className="SpatialDropout1D",i.registerClass(Nc);class Ec extends qe{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,vt(this.units,"units"),this.activation=$h(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=_e(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=_e(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Gl(t.kernelConstraint),this.biasConstraint=Gl(t.biasConstraint),this.kernelRegularizer=Mh(t.kernelRegularizer),this.biasRegularizer=Mh(t.biasRegularizer),this.activityRegularizer=Mh(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Me(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Me(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return s((()=>{this.invokeCallHook(t,e);const n=Re(t),s=St(this.activation.getClassName());let r;return null!=s?r=re(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=re(n,this.kernel.read()),null!=this.bias&&(r=le(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const t={units:this.units,activation:Ah(this.activation),useBias:this.useBias,kernelInitializer:ze(this.kernelInitializer),biasInitializer:ze(this.biasInitializer),kernelRegularizer:Fh(this.kernelRegularizer),biasRegularizer:Fh(this.biasRegularizer),activityRegularizer:Fh(this.activityRegularizer),kernelConstraint:jl(this.kernelConstraint),biasConstraint:jl(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Ec.className="Dense",i.registerClass(Ec);class Ic extends qe{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Me(t);for(const e of t.slice(1))if(null==e)throw new et(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Vt(t,1)]}call(e,n){return s((()=>{this.invokeCallHook(e,n);let s=Re(e);if("channelsFirst"===this.dataFormat&&s.rank>1){const t=[0];for(let e=2;e<s.rank;++e)t.push(e);t.push(1),s=f(s,t)}return function(e){if(e.rank<=1)throw new et(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const n=[e.shape[0],Vt(e.shape,1)];return t.reshape(e,n)}(s)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Ic.className="Flatten",i.registerClass(Ic);class Ac extends qe{constructor(t){super(t),this.supportsMasking=!0,this.activation=$h(t.activation)}call(t,e){return s((()=>{this.invokeCallHook(t,e);const n=Re(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Ah(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Ac.className="Activation",i.registerClass(Ac);class Tc extends qe{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return s((()=>{return t=Re(t),e=t,n=this.n,s((()=>{if(2!==e.shape.length)throw new et(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return ne(Zt(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Tc.className="RepeatVector",i.registerClass(Tc);class $c extends qe{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",s=e.slice();let r=1,i=null;for(let t=0;t<s.length;++t){const e=s[t];if(this.isUnknown(e)){if(null!==i)throw new et("Can only specifiy one unknown dimension.");i=t}else r*=e}const a=Vt(t);if(null!==i){if(0===r||a%r!=0)throw new et(n);s[i]=a/r}else if(a!==r)throw new et(n);return s}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return s((()=>{this.invokeCallHook(t,e);const n=Re(t),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return I(n,r)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}$c.className="Reshape",i.registerClass($c);class Cc extends qe{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const n=qt(1,t.dims.length+1);if(!e.arraysEqual(t.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new We({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Me(t)).slice();return this.dims.forEach(((n,s)=>{e[s+1]=t[n]})),e}call(t,e){return f(Re(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Cc.className="Permute",i.registerClass(Cc);class zc extends qe{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Re(t);return O(B(n,this.maskValue),-1)}call(t,e){return s((()=>{this.invokeCallHook(t,e);const n=Re(t),s=O(B(n,this.maskValue),-1,!0);return l(n,b(s,n.dtype))}))}}zc.className="Masking",i.registerClass(zc);class _c extends qe{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(ut(t.inputLength))}this.inputDim=t.inputDim,vt(this.inputDim,"inputDim"),this.outputDim=t.outputDim,vt(this.outputDim,"outputDim"),this.embeddingsInitializer=_e(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Mh(t.embeddingsRegularizer),this.activityRegularizer=Mh(t.activityRegularizer),this.embeddingsConstraint=Gl(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return s((()=>this.maskZero?(t=Re(t),B(t,P(t))):null))}computeOutputShape(t){if(t=Me(t),null==this.inputLength)return[...t,this.outputDim];const e=ut(this.inputLength);if(e.length!==t.length-1)throw new et(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let s=0;s<e.length;++s){const r=e[s],i=t[s+1];if(null!=r&&null!=i&&r!==i)throw new et(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==r&&(e[n]=i),n++}}return[t[0],...e,this.outputDim]}call(t,e){return s((()=>{this.invokeCallHook(t,e);let n=Re(t);"int32"!==n.dtype&&(n=Jt(n,"int32"));const s=ie(this.embeddings.read(),I(n,[n.size]));return I(s,Me(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ze(this.embeddingsInitializer),embeddingsRegularizer:Fh(this.embeddingsRegularizer),activityRegularizer:Fh(this.activityRegularizer),embeddingsConstraint:jl(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}_c.className="Embedding",i.registerClass(_c);class Dc extends qe{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new nt}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let s=0;s<e.length;++s){const r=t[t.length-e.length+s],i=e[s];if(null==r||null==i||r<0||i<0)n.push(null);else if(1===r)n.push(i);else if(1===i)n.push(r);else{if(r!==i)throw new et("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(r)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Me(t)]),t.length<2)throw new et(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=bt(e),e.length>1)throw new et(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const s=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=t.map((t=>t.length));-1===t.indexOf(null)&&1===bt(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,n){return s((()=>{if(this.reshapeRequired){const n=[],s=e.map((t=>t.rank));if(-1===s.indexOf(null)){const t=jt(s);for(let s of e){const e=s.rank;for(let n=0;n<t-e;++n)s=Zt(s,1);n.push(s)}return this.mergeFunction(n)}{let s=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,i=e[0],a=e.slice(1).concat([i]);let o=t.reshape(r,[i].concat(Vt(e.slice(1))));o=t.transpose(o,[1,0]),o=t.reshape(o,a),n.push(o),s=!0}else if(e>1){const i=qt(1,e).concat([0]);n.push(t.transpose(r,i)),s=!0}else n.push(r)}let r=this.mergeFunction(n);const i=r.rank;if(s)if(null==i){const e=r.shape,n=e[e.length-1],s=[n].concat(e.slice(0,e.length-1));r=t.reshape(t.transpose(t.reshape(r,[-1,n]),[1,0]),s)}else if(i>1){const e=[i-1].concat(qt(0,i-1));r=t.transpose(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const s=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,s)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=bt(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(e,n){return t.tidy((()=>{if(null==n)return null;if(!Array.isArray(n))throw new et("`mask` should be an Array");if(!Array.isArray(e))throw new et("`inputs` should be an Array");if(n.length!==e.length)throw new et(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${n.length})`);if(n.every((t=>null==t)))return null;let s=(n=n.map((e=>null==e?e:t.expandDims(e,0))))[0];for(let e=1;e<n.length-1;++e)s=t.logicalAnd(s,n[e]);return s}))}}class Fc extends Dc{constructor(t){super(t)}mergeFunction(e){return s((()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=t.add(n,e[s]);return n}))}}Fc.className="Add",i.registerClass(Fc);class Rc extends Dc{constructor(t){super(t)}mergeFunction(e){return s((()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=t.mul(n,e[s]);return n}))}}Rc.className="Multiply",i.registerClass(Rc);class Mc extends Dc{constructor(t){super(t)}mergeFunction(e){return s((()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=t.add(n,e[s]);return t.mul(1/e.length,n)}))}}Mc.className="Average",i.registerClass(Mc);class Lc extends Dc{constructor(t){super(t)}mergeFunction(e){return s((()=>{let n=e[0];for(let s=1;s<e.length;++s)n=t.maximum(n,e[s]);return n}))}}Lc.className="Maximum",i.registerClass(Lc);class Oc extends Dc{constructor(t){super(t)}mergeFunction(e){return s((()=>{let n=e[0];for(let s=1;s<e.length;++s)n=t.minimum(n,e[s]);return n}))}}Oc.className="Minimum",i.registerClass(Oc);class Bc extends Dc{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new et("A `Concatenate` layer should be called on a list of at least 2 inputs");let n=!0;for(const e of t)if(null!=e){n=!1;break}if(n)return;const s=[];for(let n=0;n<t.length;++n){const r=t[n].slice();r.splice(this.axis,1);let i=!1;for(const t of s)if(e.arraysEqual(t,r)){i=!0;break}i||s.push(r)}if(s.length>1)throw new et("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return s((()=>te(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new et("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[s]||null==t[s]){n[s]=null;break}n[s]+=t[s]}return n}computeMask(e,n){if(null==n)return null;if(!Array.isArray(n))throw new et("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new et("`inputs` should be an array for Concatenate");if(n.length!==e.length)throw new et(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${e.length})`);return t.tidy((()=>{let s=!0;if(n.forEach((t=>{null==t||(s=!1)})),s)return null;const r=[];for(let s=0;s<e.length;++s)null==n[s]?r.push(t.cast(t.onesLike(e[s]),"bool")):n[s].rank<e[s].rank?r.push(t.expandDims(n[s],-1)):r.push(n[s]);const i=t.concat(r,this.axis);return t.all(i,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Pc(t,e){for(;t<0;)t+=e;return t}Bc.className="Concatenate",i.registerClass(Bc);class Wc extends Dc{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){t.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const n=e[0],s=e[1];if(n.length>3||s.length>3)throw new nt("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(n,s);if(n[r[0]]!==s[r[1]])throw new et(`Dimension incompatibility: ${n[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new et(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let n,s=e[0],r=e[1];return n=Array.isArray(this.axes)?this.axes.map(((t,n)=>Pc(t,e[n].shape.length))):[Pc(this.axes,s.shape.length),Pc(this.axes,r.shape.length)],this.normalize&&(s=lu(s,n[0]),r=lu(r,n[1])),function(e,n,s){if(e.shape.length>3||n.shape.length>3)throw new nt("batchDot is not implemented for tensors of 4D or higher rank yet");if(t.util.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),t.util.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${n.shape.length}`)),"number"==typeof s&&(s=[s,s]),"complex64"===e.dtype||"complex64"===n.dtype)throw new nt("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,i=n.shape.length;null==s&&(s=[r-1,i-2]);const a=s;return t.tidy((()=>{let s,o;if(r>i){s=r-i;const e=[];for(let t=0;t<s;++t)e.push(1);n=t.reshape(n,n.shape.concat(e))}else if(i>r){s=i-r;const n=[];for(let t=0;t<s;++t)n.push(1);e=t.reshape(e,e.shape.concat(n))}else s=0;if(2===e.shape.length&&2===n.shape.length)o=a[0]===a[1]?t.sum(t.mul(e,n),a[0]):t.sum(t.mul(t.transpose(e,[1,0]),n),a[1]);else{const s=a[0]!==e.shape.length-1,r=a[1]===n.shape.length-1;o=t.matMul(e,n,s,r)}if(s>0){let e;e=r>i?r+i-3:r-1;const n=[];for(let t=e;t<e+s;++t)n.push(t);o=t.squeeze(o,n)}return 1===o.shape.length&&(o=t.expandDims(o,1)),o}))}(s,r,n)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[Pc(this.axes,t.length),Pc(this.axes,e.length)],n}computeOutputShape(e){t.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const n=e[0].slice(),s=e[1].slice();if(n.length>3||s.length>3)throw new nt("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(n,s);n.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const i=n.concat(s);return 1===i.length&&i.push(1),i}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}Wc.className="Dot",i.registerClass(Wc);class Uc extends qe{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return s((()=>{this.invokeCallHook(t,e);const n=Re(t);return he((()=>k(se(n.shape,0,this.stddev),n)),(()=>n),e.training||!1)}))}}Uc.className="GaussianNoise",i.registerClass(Uc);class Vc extends qe{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return s((()=>{this.invokeCallHook(t,e);const n=Re(t);if(this.rate>0&&this.rate<1){return he((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return l(n,se(n.shape,1,t))}),(()=>n),e.training||!1)}return n}))}}Vc.className="GaussianDropout",i.registerClass(Vc);class Kc extends qe{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Re(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return s((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t),s=()=>{const e=Re(t),s=-1.7580993408473766;let r=W(h(n),this.rate);r=Jt(r,"float32");const i=((1-this.rate)*(1+this.rate*s**2))**-.5,a=-i*s*this.rate,o=k(l(e,r),l(k(r,-1),s));return k(l(o,i),a)};return he(s,(()=>Re(t)),e.training||!1)}return t}))}}function jc(e,n,s,r,i,a=.001){let o;if(2===e.rank)o=t.batchNorm2d(e,n,s,r,i,a);else if(3===e.rank)o=t.batchNorm3d(e,n,s,r,i,a);else{if(4!==e.rank)throw new nt(`batchNormalization is not implemented for array of rank ${e.rank} yet`);o=t.batchNorm4d(e,n,s,r,i,a)}return o}function qc(n,r,i,a,o=.001){return e.arraysEqual(a.slice().sort(),qt(0,n.rank-1))?function(e,n,r,i,a=.001){return s((()=>{const s=t.moments(e,i),o=s.mean,l=s.variance;return[jc(e,o,l,r,n,a),o,l]}))}(n,r,i,a,o):function(e,n,r,i,a=.001){return s((()=>{const s=t.moments(e,i),o=s.mean,l=s.variance,u=[];for(const t of qt(0,e.rank))-1!==i.indexOf(t)?u.push(1):u.push(e.shape[t]);const h=I(o,u),c=I(l,u),p=null==n?null:I(n,u),d=null==r?null:I(r,u);return[jc(e,h,c,d,p,a),o,l]}))}(n,r,i,a,o)}Kc.className="AlphaDropout",i.registerClass(Kc);class Gc extends qe{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=_e(t.betaInitializer||"zeros"),this.gammaInitializer=_e(t.gammaInitializer||"ones"),this.movingMeanInitializer=_e(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=_e(t.movingVarianceInitializer||"ones"),this.betaConstraint=Gl(t.betaConstraint),this.gammaConstraint=Gl(t.gammaConstraint),this.betaRegularizer=Mh(t.betaRegularizer),this.gammaRegularizer=Mh(t.gammaRegularizer)}build(t){t=Me(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new et(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new We({ndim:t.length,axes:{[e]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(n,r){return s((()=>{const s=null!=r.training&&r.training,i=Re(n),a=i.shape,o=a.length,l=qt(0,o),u=this.axis>=0?this.axis:this.axis+o;l.splice(u,1);const h=it(1,o);h[u]=a[u];const c=l.slice();c.sort();const p=!e.arraysEqual(c,qt(0,o).slice(0,o-1));if(!s)return(()=>{if(p){const t=I(this.movingMean.read(),h),e=I(this.movingVariance.read(),h),n=this.center?I(this.beta.read(),h):null,s=this.scale?I(this.gamma.read(),h):null;return jc(i,t,e,n,s,this.epsilon)}return jc(i,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,f,g]=qc(i,this.gamma.read(),this.beta.read(),l,this.epsilon),m=(e,n,s)=>{t.tidy((()=>{const r=1-s,i=e.read(),a=t.mul(t.sub(i,n),r);e.write(t.sub(i,a))}))};return(()=>{m(this.movingMean,f,this.momentum),m(this.movingVariance,g,this.momentum)})(),d}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ze(this.betaInitializer),gammaInitializer:ze(this.gammaInitializer),movingMeanInitializer:ze(this.movingMeanInitializer),movingVarianceInitializer:ze(this.movingVarianceInitializer),betaRegularizer:Fh(this.betaRegularizer),gammaRegularizer:Fh(this.gammaRegularizer),betaConstraint:jl(this.betaConstraint),gammaConstraint:jl(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Gc.className="BatchNormalization",i.registerClass(Gc);class Hc extends qe{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=_e(t.betaInitializer||"zeros"),this.gammaInitializer=_e(t.gammaInitializer||"ones"),this.betaRegularizer=Mh(t.betaRegularizer),this.gammaRegularizer=Mh(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Me(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==bt(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,n){const r=Re(e),i=r.shape,a=i.length;return s((()=>{let{mean:e,variance:n}=U(r,this.axis,!0);const s=it(1,a);for(const t of this.axis)s[t]=i[t];const o=e=>null!=e&&e.shape.length!==a?t.reshape(e,s):e;let l=this.scale?o(this.gamma.read()):null,u=this.center?o(this.beta.read()):null;const h=[],c=[];for(let t=0;t<a;++t)-1!==this.axis.indexOf(t)?(h.push(i[t]),c.push(1)):(h.push(1),c.push(i[t]));return e=t.tile(e,h),n=t.tile(n,h),null!=l&&(l=t.tile(l,c)),null!=u&&(u=t.tile(u,c)),jc(r,e,n,u,l,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ze(this.betaInitializer),gammaInitializer:ze(this.gammaInitializer),betaRegularizer:Fh(this.betaRegularizer),gammaRegularizer:Fh(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}Hc.className="LayerNormalization",i.registerClass(Hc);class Jc extends qe{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new et(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new et(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new et(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new We({ndim:4})]}computeOutputShape(t){let e,n;return t=Me(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(e,n){return s((()=>{return n=Re(e),r=this.padding,i=this.dataFormat,s((()=>{if(4!==n.rank)throw new et(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(null==r&&(r=[[1,1],[1,1]]),2!==r.length||2!==r[0].length||2!==r[1].length)throw new et("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==i&&(i="channelsLast"),"channelsLast"!==i&&"channelsFirst"!==i)throw new et(`Unknown data format: ${i}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===i?[[0,0],[0,0],r[0],r[1]]:[[0,0],r[0],r[1],[0,0]],t.pad(n,e)}));var n,r,i}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function Zc(e,n,r,i,a,o){return s((()=>{let s;Ft(a),Mt(o),Rt(i),null==r&&(r=[1,1]),null==i&&(i="valid"),null==a&&(a="channelsLast"),null==o&&(o="max"),e=qh(e,a);const l="same"===i?"same":"valid";return s="max"===o?t.maxPool(e,n,r,l):t.avgPool(e,n,r,l),"channelsFirst"===a&&(s=t.transpose(s,[0,3,1,2])),s}))}function Yc(e,n,r,i,a,o){return s((()=>{let s;Ft(a),Mt(o),Rt(i),null==r&&(r=[1,1,1]),null==i&&(i="valid"),null==a&&(a="channelsLast"),null==o&&(o="max"),e=Gh(e,a);const l="same"===i?"same":"valid";return s="max"===o?t.maxPool3d(e,n,r,l):t.avgPool3d(e,n,r,l),"channelsFirst"===a&&(s=t.transpose(s,[0,4,1,2,3])),s}))}Jc.className="ZeroPadding2D",i.registerClass(Jc);class Xc extends qe{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new et(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(vt(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new et(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}vt(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Rt(this.padding),this.inputSpec=[new We({ndim:3})]}computeOutputShape(t){const e=Kh((t=Me(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(e,n){return s((()=>{this.invokeCallHook(e,n),e=Zt(Re(e),2);const s=this.poolingFunction(Re(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return t.squeeze(s,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Qc extends Xc{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Ft(r),Rt(s),Zc(t,e,n,s,r,"max")}}Qc.className="MaxPooling1D",i.registerClass(Qc);class tp extends Xc{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Ft(r),Rt(s),Zc(t,e,n,s,r,"avg")}}tp.className="AveragePooling1D",i.registerClass(tp);class ep extends qe{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new et(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];vt(this.poolSize,"poolSize"),vt(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ft(this.dataFormat),Rt(this.padding),this.inputSpec=[new We({ndim:4})]}computeOutputShape(t){t=Me(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Kh(e,this.poolSize[0],this.padding,this.strides[0]),n=Kh(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return s((()=>(this.invokeCallHook(t,e),this.poolingFunction(Re(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class np extends ep{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Ft(r),Rt(s),Zc(t,e,n,s,r,"max")}}np.className="MaxPooling2D",i.registerClass(np);class sp extends ep{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Ft(r),Rt(s),Zc(t,e,n,s,r,"avg")}}sp.className="AveragePooling2D",i.registerClass(sp);class rp extends qe{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new et(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];vt(this.poolSize,"poolSize"),vt(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ft(this.dataFormat),Rt(this.padding),this.inputSpec=[new We({ndim:5})]}computeOutputShape(t){t=Me(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Kh(e,this.poolSize[0],this.padding,this.strides[0]),n=Kh(n,this.poolSize[1],this.padding,this.strides[1]),s=Kh(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,s]:[t[0],e,n,s,t[4]]}call(t,e){return s((()=>(this.invokeCallHook(t,e),this.poolingFunction(Re(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ip extends rp{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Ft(r),Rt(s),Yc(t,e,n,s,r,"max")}}ip.className="MaxPooling3D",i.registerClass(ip);class ap extends rp{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Ft(r),Rt(s),Yc(t,e,n,s,r,"avg")}}ap.className="AveragePooling3D",i.registerClass(ap);class op extends qe{constructor(t){super(t),this.inputSpec=[new We({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new nt}}class lp extends op{constructor(t){super(t||{})}call(e,n){return s((()=>{const n=Re(e);return t.mean(n,1)}))}}lp.className="GlobalAveragePooling1D",i.registerClass(lp);class up extends op{constructor(t){super(t||{})}call(e,n){return s((()=>{const n=Re(e);return t.max(n,1)}))}}up.className="GlobalMaxPooling1D",i.registerClass(up);class hp extends qe{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ft(this.dataFormat),this.inputSpec=[new We({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new nt}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class cp extends hp{call(e,n){return s((()=>{const n=Re(e);return"channelsLast"===this.dataFormat?t.mean(n,[1,2]):t.mean(n,[2,3])}))}}cp.className="GlobalAveragePooling2D",i.registerClass(cp);class pp extends hp{call(e,n){return s((()=>{const n=Re(e);return"channelsLast"===this.dataFormat?t.max(n,[1,2]):t.max(n,[2,3])}))}}pp.className="GlobalMaxPooling2D",i.registerClass(pp);class dp extends qe{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const s=ou(e.layer,n);delete e.layer;const r={layer:s};return Object.assign(r,e),new t(r)}}class fp extends dp{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Me(t)).length<3)throw new et(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Me(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),s=t[1];return[n[0],s].concat(n.slice(1))}call(t,e){return s((()=>lc(((t,n)=>[Re(this.layer.call(t,e)),[]]),t=Re(t),[],!1,null,null,!1,!0)[1]))}}fp.className="TimeDistributed",i.registerClass(fp);class gp extends dp{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=ou(n),e.goBackwards=!0!==e.goBackwards;const s={};var r;if(s.className=t.layer.getClassName(),s.config=e,this.backwardLayer=ou(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,r=this.mergeMode,wt(_t,"BidirectionalMergeMode",r),t.weights)throw new nt("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,s,r=this.forwardLayer.computeOutputShape(t);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(s=r.slice(1),e=r[0]):e=r[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[e].concat(s).concat(s.slice()):lt(n)}apply(t,e){let n=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const r=oc(t,n,s,this.numConstants);if(t=r.inputs,n=r.initialState,s=r.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==s)return super.apply(t,e);const i=[],a=[];if(null!=n){const t=n.length;if(t%2>0)throw new et("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,i.push(...n);const s=n.map((t=>new We({shape:t.shape})));this.forwardLayer.stateSpec=s.slice(0,t/2),this.backwardLayer.stateSpec=s.slice(t/2),a.push(...s)}if(null!=s)throw new nt("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof Ue;for(const t of i)if(t instanceof Ue!==o)throw new et("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(i),s=this.inputSpec.concat(a),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,e);return this.inputSpec=r,o}return super.apply(t,e)}call(e,n){return s((()=>{const s=n.initialState;let r,i,a,o;if(null==s)r=this.forwardLayer.call(e,n),i=this.backwardLayer.call(e,n);else{const t=s.slice(0,s.length/2),a=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(n,{initialState:t})),i=this.backwardLayer.call(e,Object.assign(n,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(i.slice(1))),r=r[0],i=i[0]),this.returnSequences&&(i=t.reverse(i,1)),"concat"===this.mergeMode?o=te([r,i]):"sum"===this.mergeMode?o=t.add(r,i):"ave"===this.mergeMode?o=t.mul(.5,t.add(r,i)):"mul"===this.mergeMode?o=t.mul(r,i):null==this.mergeMode&&(o=[r,i]),this.returnState?null==this.mergeMode?o.concat(a):[o].concat(a):o}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Ot(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),Ot(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=ou(e.layer);if(delete e.layer,null!=e.numConstants)throw new nt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=e;return s.layer=n,new t(s)}}gp.className="Bidirectional",i.registerClass(gp);class mp extends qe{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return s((()=>("float32"!==(t=Re(t)).dtype&&(t=Jt(t,"float32")),k(l(t,this.scale),this.offset))))}}mp.className="Rescaling",i.registerClass(mp);const{resizeBilinear:bp,cropAndResize:yp}=G;class wp extends qe{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,n,r,i,a,o,l){return s((()=>{let s,u=!1;const h=[e/a,n/o,(r+e)/a,(i+n)/o],c=[];3===t.rank?(u=!0,s=V([t])):s=t;for(let t=0;t<s.shape[0];t++)c.push(h);const p=K(c,[c.length,4]),d=j(0,c.length,1,"int32"),f=yp(s,p,d,[r,i],"nearest");return Jt(u?Re(q(f)):f,l)}))}upsize(t,e,n,r){return s((()=>Jt(bp(t,[e,n]),r)))}call(t,e){return s((()=>{const e=Re(t),n=e.dtype,s=e.shape,r=s[s.length-3],i=s[s.length-2];let a=0;r!==this.height&&(a=Math.floor((r-this.height)/2));let o=0;return i!==this.width&&(o=Math.floor((i-this.width)/2),0===o&&(o=1)),a>=0&&o>=0?this.centerCrop(e,a,o,this.height,this.width,r,i,n):this.upsize(t,this.height,this.width,n)}))}getConfig(){const t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){const e=(t=Me(t)).length-3,n=t.length-2;return t[e]=this.height,t[n]=this.width,t}}wp.className="CenterCrop",i.registerClass(wp);class kp extends qe{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return null==(t=Me(t))?[this.numTokens]:"oneHot"===this.outputMode&&1!==t[t.length-1]?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return s((()=>{let n;if("int32"!==(t=Re(t)).dtype&&(t=Jt(t,"int32")),"undefined"!=typeof e.countWeights){if("count"!==this.outputMode)throw new et(`countWeights is not used when outputMode !== count.\n              Received countWeights=${e.countWeights}`);n=Re(e.countWeights)}const s=Z(t),r=Y(t),i=L(this.numTokens,s).bufferSync().get(0),a=W(r,0).bufferSync().get(0);if(!i||!a)throw new et(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(t,e,n,s){let r=Re(t);if("int32"!==r.dtype&&(r=Jt(r,"int32")),"int"===e)return r;const i=r.shape;if(0===r.rank&&(r=H(r,-1)),"oneHot"===e&&1!==r.shape[r.shape.length-1]&&(r=H(r,-1)),r.rank>2)throw new et(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${i} which would result in output rank ${r.rank}.`);const a=["multiHot","oneHot"].includes(e);let o;if(o=J(r,"undefined"!=typeof s&&"count"===e?s:[],n,a),"tfIdf"!==e)return o;if(s)return l(o,s);throw new et("When outputMode is 'tfIdf', weights must be provided.")}(t,this.outputMode,this.numTokens,n)}))}}kp.className="CategoryEncoding",i.registerClass(kp);const vp=new Set(["bilinear","nearest"]);class xp extends qe{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation){if(!vp.has(t.interpolation))throw new et(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);this.interpolation=t.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(t.cropToAspectRatio)}computeOutputShape(t){const e=(t=Me(t))[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return s((()=>{const e=[this.height,this.width];if("bilinear"===this.interpolation)return G.resizeBilinear(t,e,!this.cropToAspectRatio);if("nearest"===this.interpolation)return G.resizeNearestNeighbor(t,e,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...vp]} are supported`)}))}}function Sp(t){return new tp(t)}function Np(t){return new sp(t)}function Ep(t){return new ap(t)}function Ip(t){return new up(t)}function Ap(t){return new pp(t)}function Tp(t){return new Qc(t)}function $p(t){return new np(t)}xp.className="Resizing",i.registerClass(xp);var Cp={__proto__:null,inputLayer:function(t){return new He(t)},elu:function(t){return new Ph(t)},reLU:function(t){return new Lh(t)},leakyReLU:function(t){return new Oh(t)},prelu:function(t){return new Bh(t)},softmax:function(t){return new Uh(t)},thresholdedReLU:function(t){return new Wh(t)},conv1d:function(t){return new sc(t)},conv2d:function(t){return new Yh(t)},conv2dTranspose:function(t){return new Qh(t)},conv3d:function(t){return new Xh(t)},conv3dTranspose:function(t){return new tc(t)},separableConv2d:function(t){return new nc(t)},cropping2D:function(t){return new rc(t)},upSampling2d:function(t){return new ic(t)},depthwiseConv2d:function(t){return new ac(t)},activation:function(t){return new Ac(t)},dense:function(t){return new Ec(t)},dropout:function(t){return new Sc(t)},spatialDropout1d:function(t){return new Nc(t)},flatten:function(t){return new Ic(t)},repeatVector:function(t){return new Tc(t)},reshape:function(t){return new $c(t)},permute:function(t){return new Cc(t)},embedding:function(t){return new _c(t)},add:function(t){return new Fc(t)},average:function(t){return new Mc(t)},concatenate:function(t){return new Bc(t)},maximum:function(t){return new Lc(t)},minimum:function(t){return new Oc(t)},multiply:function(t){return new Rc(t)},dot:function(t){return new Wc(t)},batchNormalization:function(t){return new Gc(t)},layerNormalization:function(t){return new Hc(t)},zeroPadding2d:function(t){return new Jc(t)},averagePooling1d:Sp,avgPool1d:function(t){return Sp(t)},avgPooling1d:function(t){return Sp(t)},averagePooling2d:Np,avgPool2d:function(t){return Np(t)},avgPooling2d:function(t){return Np(t)},averagePooling3d:Ep,avgPool3d:function(t){return Ep(t)},avgPooling3d:function(t){return Ep(t)},globalAveragePooling1d:function(t){return new lp(t)},globalAveragePooling2d:function(t){return new cp(t)},globalMaxPooling1d:Ip,globalMaxPooling2d:Ap,maxPooling1d:Tp,maxPooling2d:$p,maxPooling3d:function(t){return new ip(t)},gru:function(t){return new fc(t)},gruCell:function(t){return new dc(t)},lstm:function(t){return new mc(t)},lstmCell:function(t){return new gc(t)},simpleRNN:function(t){return new pc(t)},simpleRNNCell:function(t){return new cc(t)},convLstm2d:function(t){return new xc(t)},convLstm2dCell:function(t){return new vc(t)},rnn:function(t){return new uc(t)},stackedRNNCells:function(t){return new bc(t)},bidirectional:function(t){return new gp(t)},timeDistributed:function(t){return new fp(t)},globalMaxPool1d:Ip,globalMaxPool2d:Ap,maxPool1d:Tp,maxPool2d:$p,Layer:qe,RNN:uc,RNNCell:hc,input:hh,gaussianNoise:function(t){return new Uc(t)},gaussianDropout:function(t){return new Vc(t)},alphaDropout:function(t){return new Kc(t)},masking:function(t){return new zc(t)},rescaling:function(t){return new mp(t)},centerCrop:function(t){return new wp(t)},resizing:function(t){return new xp(t)},categoryEncoding:function(t){return new kp(t)}};var zp={__proto__:null,binaryAccuracy:function(t,e){return yu(t,e)},binaryCrossentropy:function(t,e){return Su(t,e)},sparseCategoricalAccuracy:function(t,e){return Nu(t,e)},categoricalAccuracy:function(t,e){return wu(t,e)},categoricalCrossentropy:function(t,e){return Eu(t,e)},precision:function(t,e){return vu(t,e)},recall:function(t,e){return xu(t,e)},cosineProximity:function(t,e){return gu(t,e)},meanAbsoluteError:function(t,e){return hu(t,e)},meanAbsolutePercentageError:function(t,e){return cu(t,e)},MAPE:function(t,e){return cu(t,e)},mape:function(t,e){return cu(t,e)},meanSquaredError:function(t,e){return uu(t,e)},MSE:function(t,e){return uu(t,e)},mse:function(t,e){return uu(t,e)}},_p={__proto__:null,modelFromJSON:async function(t,e){"modelTopology"in t||(t={modelTopology:t});let n=t.modelTopology;null!=n.model_config&&(n=n.model_config);const s=ou(Lu(n),e);if(null!=t.weightsManifest){const e=await $.loadWeights(t.weightsManifest,t.pathPrefix,s.weights.map((t=>t.originalName))),n={};for(const t of s.weights)n[t.originalName]=e[t.originalName];s.loadWeights(n),g(e)}return s}};var Dp={__proto__:null,l1l2:function(t){return new _h(t)},l1:function(t){return Ch(e=t),new _h({l1:null!=e?e.l1:null,l2:0});var e},l2:function(t){return Ch(e=t),new _h({l2:null!=e?e.l2:null,l1:0});var e}};class Fp extends Ql{constructor(){super(...arguments),this.model=null}setModel(t){if(!(t instanceof rh))throw new Error("model must be a LayersModel, not some other Container");this.model=t}}function Rp(t,e){return t<e}function Mp(t,e){return t>e}class Lp extends Fp{constructor(t){if(super(),null==t&&(t={}),t.restoreBestWeights)throw new nt("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=t.monitor||"val_loss",this.minDelta=Math.abs(t.minDelta||0),this.patience=t.patience||0,this.verbose=t.verbose||0,this.mode=t.mode||"auto",this.baseline=t.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=Rp:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=Mp:this.monitorFunc=Rp,this.monitorFunc===Rp&&(this.minDelta*=-1)}async onTrainBegin(t){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===Rp?1/0:-1/0}async onEpochEnd(t,e){await Yl(e);const n=this.getMonitorValue(e);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=t,this.model.stopTraining=!0)))}async onTrainEnd(t){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(t){null==t&&(t={});const e=t[this.monitor];return null==e&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(t)}`),e}}const Op={earlyStopping:function(t){return new Lp(t)}};export{Fp as Callback,tu as CallbackList,su as CustomCallback,Lp as EarlyStopping,nu as History,We as InputSpec,Oe as LayerVariable,rh as LayersModel,uc as RNN,oh as Sequential,Ue as SymbolicTensor,Op as callbacks,Hl as constraints,Zl as initializers,hh as input,Cp as layers,ah as loadLayersModel,zp as metrics,lh as model,_p as models,ch as registerCallbackConstructor,Dp as regularizers,uh as sequential,Bu as version_layers};
//# sourceMappingURL=tf-layers.fesm.min.js.map
